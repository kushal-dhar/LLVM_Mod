/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Matcher Source Fragment                                           *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_ASSEMBLER_HEADER
#undef GET_ASSEMBLER_HEADER
  // This should be included into the middle of the declaration of
  // your subclasses implementation of MCTargetAsmParser.
  uint64_t ComputeAvailableFeatures(const FeatureBitset& FB) const;
  void convertToMCInst(unsigned Kind, MCInst &Inst, unsigned Opcode,
                       const OperandVector &Operands,
                       const SmallBitVector &OptionalOperandsMask);
  void convertToMapAndConstraints(unsigned Kind,
                           const OperandVector &Operands) override;
  bool mnemonicIsValid(StringRef Mnemonic, unsigned VariantID);
  unsigned MatchInstructionImpl(const OperandVector &Operands,
                                MCInst &Inst,
                                uint64_t &ErrorInfo, bool matchingInlineAsm,
                                unsigned VariantID = 0);
  OperandMatchResultTy MatchOperandParserImpl(
    OperandVector &Operands,
    StringRef Mnemonic);
  OperandMatchResultTy tryCustomParseOperand(
    OperandVector &Operands,
    unsigned MCK);

#endif // GET_ASSEMBLER_HEADER_INFO


#ifdef GET_OPERAND_DIAGNOSTIC_TYPES
#undef GET_OPERAND_DIAGNOSTIC_TYPES

#endif // GET_OPERAND_DIAGNOSTIC_TYPES


#ifdef GET_REGISTER_MATCHER
#undef GET_REGISTER_MATCHER

// Flags for subtarget features that participate in instruction matching.
enum SubtargetFeatureFlag : uint16_t {
  Feature_isSICI = (1ULL << 7),
  Feature_isVI = (1ULL << 8),
  Feature_isCIVI = (1ULL << 4),
  Feature_isCIOnly = (1ULL << 3),
  Feature_DisableInst = (1ULL << 0),
  Feature_isGCN = (1ULL << 5),
  Feature_isSI = (1ULL << 6),
  Feature_HasVGPRIndexMode = (1ULL << 2),
  Feature_HasMovrel = (1ULL << 1),
  Feature_None = 0
};

#endif // GET_REGISTER_MATCHER


#ifdef GET_SUBTARGET_FEATURE_NAME
#undef GET_SUBTARGET_FEATURE_NAME

// User-level names for subtarget features that participate in
// instruction matching.
static const char *getSubtargetFeatureName(uint64_t Val) {
  switch(Val) {
  case Feature_isSICI: return "";
  case Feature_isVI: return "";
  case Feature_isCIVI: return "";
  case Feature_isCIOnly: return "";
  case Feature_DisableInst: return "";
  case Feature_isGCN: return "";
  case Feature_isSI: return "";
  case Feature_HasVGPRIndexMode: return "";
  case Feature_HasMovrel: return "";
  default: return "(unknown)";
  }
}

#endif // GET_SUBTARGET_FEATURE_NAME


#ifdef GET_MATCHER_IMPLEMENTATION
#undef GET_MATCHER_IMPLEMENTATION

static void applyMnemonicAliases(StringRef &Mnemonic, uint64_t Features, unsigned VariantID) {
  switch (VariantID) {
    case 0:
      switch (Mnemonic.size()) {
      default: break;
      case 9:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_nop_e32", 9) != 0)
          break;
        Mnemonic = "v_nop";	 // "v_nop_e32"
        return;
      case 12:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_or_b32_e32", 12) != 0)
          break;
        Mnemonic = "v_or_b32";	 // "v_or_b32_e32"
        return;
      case 13:	 // 44 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 5 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 4 strings to match.
            if (memcmp(Mnemonic.data()+4, "d_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                  break;
                Mnemonic = "v_add_f16";	 // "v_add_f16_e32"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                  break;
                Mnemonic = "v_add_f32";	 // "v_add_f32_e32"
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_e32", 6) != 0)
                break;
              Mnemonic = "v_add_i32";	 // "v_add_i32_e32"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "16_e32", 6) != 0)
                break;
              Mnemonic = "v_add_u16";	 // "v_add_u16_e32"
              return;
            }
            break;
          case 'n':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "d_b32_e32", 9) != 0)
              break;
            Mnemonic = "v_and_b32";	 // "v_and_b32_e32"
            return;
          }
          break;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "fm_b32_e32", 10) != 0)
            break;
          Mnemonic = "v_bfm_b32";	 // "v_bfm_b32_e32"
          return;
        case 'c':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "rexcp_e32", 9) != 0)
              break;
            Mnemonic = "v_clrexcp";	 // "v_clrexcp_e32"
            return;
          case 'o':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "s_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_cos_f16";	 // "v_cos_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_cos_f32";	 // "v_cos_f32_e32"
              return;
            }
            break;
          }
          break;
        case 'e':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "xp_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_exp_f16";	 // "v_exp_f16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
              break;
            Mnemonic = "v_exp_f32";	 // "v_exp_f32_e32"
            return;
          }
          break;
        case 'l':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "og_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_log_f16";	 // "v_log_f16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
              break;
            Mnemonic = "v_log_f32";	 // "v_log_f32_e32"
            return;
          }
          break;
        case 'm':	 // 17 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 8 strings to match.
            switch (Mnemonic[4]) {
            default: break;
            case 'c':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+5, "_f", 2) != 0)
                break;
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                  break;
                Mnemonic = "v_mac_f16";	 // "v_mac_f16_e32"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                  break;
                Mnemonic = "v_mac_f32";	 // "v_mac_f32_e32"
                return;
              }
              break;
            case 'x':	 // 6 strings to match.
              if (Mnemonic[5] != '_')
                break;
              switch (Mnemonic[6]) {
              default: break;
              case 'f':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                    break;
                  Mnemonic = "v_max_f16";	 // "v_max_f16_e32"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                    break;
                  Mnemonic = "v_max_f32";	 // "v_max_f32_e32"
                  return;
                }
                break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                    break;
                  Mnemonic = "v_max_i16";	 // "v_max_i16_e32"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                    break;
                  Mnemonic = "v_max_i32";	 // "v_max_i32_e32"
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                    break;
                  Mnemonic = "v_max_u16";	 // "v_max_u16_e32"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                    break;
                  Mnemonic = "v_max_u32";	 // "v_max_u32_e32"
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 'i':	 // 6 strings to match.
            if (memcmp(Mnemonic.data()+4, "n_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                  break;
                Mnemonic = "v_min_f16";	 // "v_min_f16_e32"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                  break;
                Mnemonic = "v_min_f32";	 // "v_min_f32_e32"
                return;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                  break;
                Mnemonic = "v_min_i16";	 // "v_min_i16_e32"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                  break;
                Mnemonic = "v_min_i32";	 // "v_min_i32_e32"
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                  break;
                Mnemonic = "v_min_u16";	 // "v_min_u16_e32"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                  break;
                Mnemonic = "v_min_u32";	 // "v_min_u32_e32"
                return;
              }
              break;
            }
            break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "v_b32_e32", 9) != 0)
              break;
            Mnemonic = "v_mov_b32";	 // "v_mov_b32_e32"
            return;
          case 'u':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_mul_f16";	 // "v_mul_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_mul_f32";	 // "v_mul_f32_e32"
              return;
            }
            break;
          }
          break;
        case 'n':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ot_b32_e32", 10) != 0)
            break;
          Mnemonic = "v_not_b32";	 // "v_not_b32_e32"
          return;
        case 'r':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "p_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_rcp_f16";	 // "v_rcp_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_rcp_f32";	 // "v_rcp_f32_e32"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "4_e32", 5) != 0)
                break;
              Mnemonic = "v_rcp_f64";	 // "v_rcp_f64_e32"
              return;
            }
            break;
          case 's':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "q_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_rsq_f16";	 // "v_rsq_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_rsq_f32";	 // "v_rsq_f32_e32"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "4_e32", 5) != 0)
                break;
              Mnemonic = "v_rsq_f64";	 // "v_rsq_f64_e32"
              return;
            }
            break;
          }
          break;
        case 's':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'i':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "n_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_sin_f16";	 // "v_sin_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_sin_f32";	 // "v_sin_f32_e32"
              return;
            }
            break;
          case 'u':	 // 4 strings to match.
            if (memcmp(Mnemonic.data()+4, "b_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e32", 5) != 0)
                  break;
                Mnemonic = "v_sub_f16";	 // "v_sub_f16_e32"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e32", 5) != 0)
                  break;
                Mnemonic = "v_sub_f32";	 // "v_sub_f32_e32"
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_e32", 6) != 0)
                break;
              Mnemonic = "v_sub_i32";	 // "v_sub_i32_e32"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "16_e32", 6) != 0)
                break;
              Mnemonic = "v_sub_u16";	 // "v_sub_u16_e32"
              return;
            }
            break;
          }
          break;
        case 'x':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "or_b32_e32", 10) != 0)
            break;
          Mnemonic = "v_xor_b32";	 // "v_xor_b32_e32"
          return;
        }
        break;
      case 14:	 // 15 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 2 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "dc_u32_e32", 10) != 0)
              break;
            Mnemonic = "v_addc_u32";	 // "v_addc_u32_e32"
            return;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "hr_i32_e32", 10) != 0)
              break;
            Mnemonic = "v_ashr_i32";	 // "v_ashr_i32_e32"
            return;
          }
          break;
        case 'c':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "eil_f", 5) != 0)
            break;
          switch (Mnemonic[8]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_ceil_f16";	 // "v_ceil_f16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "2_e32", 5) != 0)
              break;
            Mnemonic = "v_ceil_f32";	 // "v_ceil_f32_e32"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "4_e32", 5) != 0)
              break;
            Mnemonic = "v_ceil_f64";	 // "v_ceil_f64_e32"
            return;
          }
          break;
        case 'f':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "fb", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'h':	 // 2 strings to match.
            if (Mnemonic[6] != '_')
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_e32", 6) != 0)
                break;
              Mnemonic = "v_ffbh_i32";	 // "v_ffbh_i32_e32"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_e32", 6) != 0)
                break;
              Mnemonic = "v_ffbh_u32";	 // "v_ffbh_u32_e32"
              return;
            }
            break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "_b32_e32", 8) != 0)
              break;
            Mnemonic = "v_ffbl_b32";	 // "v_ffbl_b32_e32"
            return;
          }
          break;
        case 'l':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "sh", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "_b32_e32", 8) != 0)
              break;
            Mnemonic = "v_lshl_b32";	 // "v_lshl_b32_e32"
            return;
          case 'r':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "_b32_e32", 8) != 0)
              break;
            Mnemonic = "v_lshr_b32";	 // "v_lshr_b32_e32"
            return;
          }
          break;
        case 'r':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "eadlane_b32", 11) != 0)
            break;
          Mnemonic = "v_readlane_b32";	 // "v_readlane_b32"
          return;
        case 's':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'q':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "rt_f", 4) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_sqrt_f16";	 // "v_sqrt_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_sqrt_f32";	 // "v_sqrt_f32_e32"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "4_e32", 5) != 0)
                break;
              Mnemonic = "v_sqrt_f64";	 // "v_sqrt_f64_e32"
              return;
            }
            break;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "bb_u32_e32", 10) != 0)
              break;
            Mnemonic = "v_subb_u32";	 // "v_subb_u32_e32"
            return;
          }
          break;
        }
        break;
      case 15:	 // 20 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "frev_b32_e32", 12) != 0)
            break;
          Mnemonic = "v_bfrev_b32";	 // "v_bfrev_b32_e32"
          return;
        case 'f':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'l':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "oor_f", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_floor_f16";	 // "v_floor_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_floor_f32";	 // "v_floor_f32_e32"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "4_e32", 5) != 0)
                break;
              Mnemonic = "v_floor_f64";	 // "v_floor_f64_e32"
              return;
            }
            break;
          case 'r':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "act_f", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_fract_f16";	 // "v_fract_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_fract_f32";	 // "v_fract_f32_e32"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "4_e32", 5) != 0)
                break;
              Mnemonic = "v_fract_f64";	 // "v_fract_f64_e32"
              return;
            }
            break;
          }
          break;
        case 'l':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "dexp_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_ldexp_f16";	 // "v_ldexp_f16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_e32", 5) != 0)
              break;
            Mnemonic = "v_ldexp_f32";	 // "v_ldexp_f32_e32"
            return;
          }
          break;
        case 'm':	 // 4 strings to match.
          if (memcmp(Mnemonic.data()+3, "ad", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'a':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "k_f", 3) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_madak_f16";	 // "v_madak_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_madak_f32";	 // "v_madak_f32_e32"
              return;
            }
            break;
          case 'm':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "k_f", 3) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_madmk_f16";	 // "v_madmk_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_madmk_f32";	 // "v_madmk_f32_e32"
              return;
            }
            break;
          }
          break;
        case 'r':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "ndne_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_rndne_f16";	 // "v_rndne_f16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_e32", 5) != 0)
              break;
            Mnemonic = "v_rndne_f32";	 // "v_rndne_f32_e32"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "4_e32", 5) != 0)
              break;
            Mnemonic = "v_rndne_f64";	 // "v_rndne_f64_e32"
            return;
          }
          break;
        case 't':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "runc_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_trunc_f16";	 // "v_trunc_f16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_e32", 5) != 0)
              break;
            Mnemonic = "v_trunc_f32";	 // "v_trunc_f32_e32"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "4_e32", 5) != 0)
              break;
            Mnemonic = "v_trunc_f64";	 // "v_trunc_f64_e32"
            return;
          }
          break;
        case 'w':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ritelane_b32", 12) != 0)
            break;
          Mnemonic = "v_writelane_b32";	 // "v_writelane_b32"
          return;
        }
        break;
      case 16:	 // 5 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'm':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ul_lo_u16_e32", 13) != 0)
            break;
          Mnemonic = "v_mul_lo_u16";	 // "v_mul_lo_u16_e32"
          return;
        case 's':	 // 4 strings to match.
          if (memcmp(Mnemonic.data()+3, "ubrev_", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case 'f':	 // 2 strings to match.
            switch (Mnemonic[10]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_subrev_f16";	 // "v_subrev_f16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_subrev_f32";	 // "v_subrev_f32_e32"
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "32_e32", 6) != 0)
              break;
            Mnemonic = "v_subrev_i32";	 // "v_subrev_i32_e32"
            return;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "16_e32", 6) != 0)
              break;
            Mnemonic = "v_subrev_u16";	 // "v_subrev_u16_e32"
            return;
          }
          break;
        }
        break;
      case 17:	 // 29 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "shrrev_i", 8) != 0)
            break;
          switch (Mnemonic[11]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_ashrrev_i16";	 // "v_ashrrev_i16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "2_e32", 5) != 0)
              break;
            Mnemonic = "v_ashrrev_i32";	 // "v_ashrrev_i32_e32"
            return;
          }
          break;
        case 'c':	 // 17 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'n':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "dmask_b32_e32", 13) != 0)
              break;
            Mnemonic = "v_cndmask_b32";	 // "v_cndmask_b32_e32"
            return;
          case 'v':	 // 16 strings to match.
            if (memcmp(Mnemonic.data()+4, "t_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 10 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "6_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_f32";	 // "v_cvt_f16_f32_e32"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_i16";	 // "v_cvt_f16_i16_e32"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_u16";	 // "v_cvt_f16_u16_e32"
                  return;
                }
                break;
              case '3':	 // 4 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e32", 5) != 0)
                      break;
                    Mnemonic = "v_cvt_f32_f16";	 // "v_cvt_f32_f16_e32"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e32", 5) != 0)
                      break;
                    Mnemonic = "v_cvt_f32_f64";	 // "v_cvt_f32_f64_e32"
                    return;
                  }
                  break;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_i32";	 // "v_cvt_f32_i32_e32"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_u32";	 // "v_cvt_f32_u32_e32"
                  return;
                }
                break;
              case '6':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "4_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f64_f32";	 // "v_cvt_f64_f32_e32"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f64_i32";	 // "v_cvt_f64_i32_e32"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e32", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f64_u32";	 // "v_cvt_f64_u32_e32"
                  return;
                }
                break;
              }
              break;
            case 'i':	 // 3 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_f16_e32", 9) != 0)
                  break;
                Mnemonic = "v_cvt_i16_f16";	 // "v_cvt_i16_f16_e32"
                return;
              case '3':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_f", 3) != 0)
                  break;
                switch (Mnemonic[11]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "2_e32", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_i32_f32";	 // "v_cvt_i32_f32_e32"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "4_e32", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_i32_f64";	 // "v_cvt_i32_f64_e32"
                  return;
                }
                break;
              }
              break;
            case 'u':	 // 3 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_f16_e32", 9) != 0)
                  break;
                Mnemonic = "v_cvt_u16_f16";	 // "v_cvt_u16_f16_e32"
                return;
              case '3':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_f", 3) != 0)
                  break;
                switch (Mnemonic[11]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "2_e32", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_u32_f32";	 // "v_cvt_u32_f32_e32"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "4_e32", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_u32_f64";	 // "v_cvt_u32_f64_e32"
                  return;
                }
                break;
              }
              break;
            }
            break;
          }
          break;
        case 'l':	 // 4 strings to match.
          if (memcmp(Mnemonic.data()+3, "sh", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'l':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "rev_b", 5) != 0)
              break;
            switch (Mnemonic[11]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_lshlrev_b16";	 // "v_lshlrev_b16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_lshlrev_b32";	 // "v_lshlrev_b32_e32"
              return;
            }
            break;
          case 'r':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "rev_b", 5) != 0)
              break;
            switch (Mnemonic[11]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "6_e32", 5) != 0)
                break;
              Mnemonic = "v_lshrrev_b16";	 // "v_lshrrev_b16_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_lshrrev_b32";	 // "v_lshrrev_b32_e32"
              return;
            }
            break;
          }
          break;
        case 'm':	 // 5 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'o':	 // 3 strings to match.
            if (Mnemonic[4] != 'v')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case '_':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+6, "fed_b32_e32", 11) != 0)
                break;
              Mnemonic = "v_mov_fed_b32";	 // "v_mov_fed_b32_e32"
              return;
            case 'r':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+6, "el", 2) != 0)
                break;
              switch (Mnemonic[8]) {
              default: break;
              case 'd':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "_b32_e32", 8) != 0)
                  break;
                Mnemonic = "v_movreld_b32";	 // "v_movreld_b32_e32"
                return;
              case 's':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "_b32_e32", 8) != 0)
                  break;
                Mnemonic = "v_movrels_b32";	 // "v_movrels_b32_e32"
                return;
              }
              break;
            }
            break;
          case 'u':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_i24_e32", 10) != 0)
                break;
              Mnemonic = "v_mul_i32_i24";	 // "v_mul_i32_i24_e32"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_u24_e32", 10) != 0)
                break;
              Mnemonic = "v_mul_u32_u24";	 // "v_mul_u32_u24_e32"
              return;
            }
            break;
          }
          break;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ubbrev_u32_e32", 14) != 0)
            break;
          Mnemonic = "v_subbrev_u32";	 // "v_subbrev_u32_e32"
          return;
        }
        break;
      case 18:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "cnt_u32_b32_e32", 15) != 0)
            break;
          Mnemonic = "v_bcnt_u32_b32";	 // "v_bcnt_u32_b32_e32"
          return;
        case 'm':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ovrelsd_b32_e32", 15) != 0)
            break;
          Mnemonic = "v_movrelsd_b32";	 // "v_movrelsd_b32_e32"
          return;
        }
        break;
      case 19:	 // 6 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "og_clamp_f32_e32", 16) != 0)
            break;
          Mnemonic = "v_log_clamp_f32";	 // "v_log_clamp_f32_e32"
          return;
        case 'r':	 // 5 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "p_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'c':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "lamp_f", 6) != 0)
                break;
              switch (Mnemonic[13]) {
              default: break;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+14, "2_e32", 5) != 0)
                  break;
                Mnemonic = "v_rcp_clamp_f32";	 // "v_rcp_clamp_f32_e32"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+14, "4_e32", 5) != 0)
                  break;
                Mnemonic = "v_rcp_clamp_f64";	 // "v_rcp_clamp_f64_e32"
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "flag_f32_e32", 12) != 0)
                break;
              Mnemonic = "v_rcp_iflag_f32";	 // "v_rcp_iflag_f32_e32"
              return;
            }
            break;
          case 's':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "q_clamp_f", 9) != 0)
              break;
            switch (Mnemonic[13]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_rsq_clamp_f32";	 // "v_rsq_clamp_f32_e32"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "4_e32", 5) != 0)
                break;
              Mnemonic = "v_rsq_clamp_f64";	 // "v_rsq_clamp_f64_e32"
              return;
            }
            break;
          }
          break;
        }
        break;
      case 20:	 // 20 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 7 strings to match.
          if (memcmp(Mnemonic.data()+3, "vt_", 3) != 0)
            break;
          switch (Mnemonic[6]) {
          default: break;
          case 'f':	 // 4 strings to match.
            if (memcmp(Mnemonic.data()+7, "32_ubyte", 8) != 0)
              break;
            switch (Mnemonic[15]) {
            default: break;
            case '0':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+16, "_e32", 4) != 0)
                break;
              Mnemonic = "v_cvt_f32_ubyte0";	 // "v_cvt_f32_ubyte0_e32"
              return;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+16, "_e32", 4) != 0)
                break;
              Mnemonic = "v_cvt_f32_ubyte1";	 // "v_cvt_f32_ubyte1_e32"
              return;
            case '2':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+16, "_e32", 4) != 0)
                break;
              Mnemonic = "v_cvt_f32_ubyte2";	 // "v_cvt_f32_ubyte2_e32"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+16, "_e32", 4) != 0)
                break;
              Mnemonic = "v_cvt_f32_ubyte3";	 // "v_cvt_f32_ubyte3_e32"
              return;
            }
            break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+7, "ff_f32_i4_e32", 13) != 0)
              break;
            Mnemonic = "v_cvt_off_f32_i4";	 // "v_cvt_off_f32_i4_e32"
            return;
          case 'p':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+7, "k_", 2) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "16_i32_e32", 10) != 0)
                break;
              Mnemonic = "v_cvt_pk_i16_i32";	 // "v_cvt_pk_i16_i32_e32"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "16_u32_e32", 10) != 0)
                break;
              Mnemonic = "v_cvt_pk_u16_u32";	 // "v_cvt_pk_u16_u32_e32"
              return;
            }
            break;
          }
          break;
        case 'e':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "xp_legacy_f32_e32", 17) != 0)
            break;
          Mnemonic = "v_exp_legacy_f32";	 // "v_exp_legacy_f32_e32"
          return;
        case 'f':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "rexp_mant_f", 11) != 0)
            break;
          switch (Mnemonic[14]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "6_e32", 5) != 0)
              break;
            Mnemonic = "v_frexp_mant_f16";	 // "v_frexp_mant_f16_e32"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "2_e32", 5) != 0)
              break;
            Mnemonic = "v_frexp_mant_f32";	 // "v_frexp_mant_f32_e32"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "4_e32", 5) != 0)
              break;
            Mnemonic = "v_frexp_mant_f64";	 // "v_frexp_mant_f64_e32"
            return;
          }
          break;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "og_legacy_f32_e32", 17) != 0)
            break;
          Mnemonic = "v_log_legacy_f32";	 // "v_log_legacy_f32_e32"
          return;
        case 'm':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 2 strings to match.
            switch (Mnemonic[4]) {
            default: break;
            case 'c':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_e32", 15) != 0)
                break;
              Mnemonic = "v_mac_legacy_f32";	 // "v_mac_legacy_f32_e32"
              return;
            case 'x':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_e32", 15) != 0)
                break;
              Mnemonic = "v_max_legacy_f32";	 // "v_max_legacy_f32_e32"
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "n_legacy_f32_e32", 16) != 0)
              break;
            Mnemonic = "v_min_legacy_f32";	 // "v_min_legacy_f32_e32"
            return;
          case 'u':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'h':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "i_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_i24_e32", 10) != 0)
                  break;
                Mnemonic = "v_mul_hi_i32_i24";	 // "v_mul_hi_i32_i24_e32"
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_u24_e32", 10) != 0)
                  break;
                Mnemonic = "v_mul_hi_u32_u24";	 // "v_mul_hi_u32_u24_e32"
                return;
              }
              break;
            case 'l':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "egacy_f32_e32", 13) != 0)
                break;
              Mnemonic = "v_mul_legacy_f32";	 // "v_mul_legacy_f32_e32"
              return;
            }
            break;
          }
          break;
        case 'r':	 // 2 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "p_legacy_f32_e32", 16) != 0)
              break;
            Mnemonic = "v_rcp_legacy_f32";	 // "v_rcp_legacy_f32_e32"
            return;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "q_legacy_f32_e32", 16) != 0)
              break;
            Mnemonic = "v_rsq_legacy_f32";	 // "v_rsq_legacy_f32_e32"
            return;
          }
          break;
        }
        break;
      case 21:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_cvt_", 6) != 0)
          break;
        switch (Mnemonic[6]) {
        default: break;
        case 'f':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+7, "lr_i32_f32_e32", 14) != 0)
            break;
          Mnemonic = "v_cvt_flr_i32_f32";	 // "v_cvt_flr_i32_f32_e32"
          return;
        case 'r':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+7, "pi_i32_f32_e32", 14) != 0)
            break;
          Mnemonic = "v_cvt_rpi_i32_f32";	 // "v_cvt_rpi_i32_f32_e32"
          return;
        }
        break;
      case 22:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_mbcnt_", 8) != 0)
          break;
        switch (Mnemonic[8]) {
        default: break;
        case 'h':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+9, "i_u32_b32_e32", 13) != 0)
            break;
          Mnemonic = "v_mbcnt_hi_u32_b32";	 // "v_mbcnt_hi_u32_b32_e32"
          return;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+9, "o_u32_b32_e32", 13) != 0)
            break;
          Mnemonic = "v_mbcnt_lo_u32_b32";	 // "v_mbcnt_lo_u32_b32_e32"
          return;
        }
        break;
      case 23:	 // 4 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "vt_pkrtz_f16_f32_e32", 20) != 0)
            break;
          Mnemonic = "v_cvt_pkrtz_f16_f32";	 // "v_cvt_pkrtz_f16_f32_e32"
          return;
        case 'f':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "rexp_exp_i", 10) != 0)
            break;
          switch (Mnemonic[13]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+14, "6_f16_e32", 9) != 0)
              break;
            Mnemonic = "v_frexp_exp_i16_f16";	 // "v_frexp_exp_i16_f16_e32"
            return;
          case '3':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+14, "2_f", 3) != 0)
              break;
            switch (Mnemonic[17]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+18, "2_e32", 5) != 0)
                break;
              Mnemonic = "v_frexp_exp_i32_f32";	 // "v_frexp_exp_i32_f32_e32"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+18, "4_e32", 5) != 0)
                break;
              Mnemonic = "v_frexp_exp_i32_f64";	 // "v_frexp_exp_i32_f64_e32"
              return;
            }
            break;
          }
          break;
        }
        break;
      case 24:	 // 3 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_cvt_pk", 8) != 0)
          break;
        switch (Mnemonic[8]) {
        default: break;
        case 'a':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+9, "ccum_u8_f32_e32", 15) != 0)
            break;
          Mnemonic = "v_cvt_pkaccum_u8_f32";	 // "v_cvt_pkaccum_u8_f32_e32"
          return;
        case 'n':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+9, "orm_", 4) != 0)
            break;
          switch (Mnemonic[13]) {
          default: break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+14, "16_f32_e32", 10) != 0)
              break;
            Mnemonic = "v_cvt_pknorm_i16_f32";	 // "v_cvt_pknorm_i16_f32_e32"
            return;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+14, "16_f32_e32", 10) != 0)
              break;
            Mnemonic = "v_cvt_pknorm_u16_f32";	 // "v_cvt_pknorm_u16_f32_e32"
            return;
          }
          break;
        }
        break;
      }
    break;
    case 1:
      switch (Mnemonic.size()) {
      default: break;
      case 9:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_nop_e64", 9) != 0)
          break;
        Mnemonic = "v_nop";	 // "v_nop_e64"
        return;
      case 12:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'o':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "r_b32_e64", 9) != 0)
            break;
          Mnemonic = "v_or_b32";	 // "v_or_b32_e64"
          return;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ad_u8_e64", 9) != 0)
            break;
          Mnemonic = "v_sad_u8";	 // "v_sad_u8_e64"
          return;
        }
        break;
      case 13:	 // 62 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 5 strings to match.
            if (memcmp(Mnemonic.data()+4, "d_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 3 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_add_f16";	 // "v_add_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_add_f32";	 // "v_add_f32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_add_f64";	 // "v_add_f64_e64"
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_add_i32";	 // "v_add_i32_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "16_e64", 6) != 0)
                break;
              Mnemonic = "v_add_u16";	 // "v_add_u16_e64"
              return;
            }
            break;
          case 'n':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "d_b32_e64", 9) != 0)
              break;
            Mnemonic = "v_and_b32";	 // "v_and_b32_e64"
            return;
          }
          break;
        case 'b':	 // 4 strings to match.
          if (Mnemonic[3] != 'f')
            break;
          switch (Mnemonic[4]) {
          default: break;
          case 'e':	 // 2 strings to match.
            if (Mnemonic[5] != '_')
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_bfe_i32";	 // "v_bfe_i32_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_bfe_u32";	 // "v_bfe_u32_e64"
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+5, "_b32_e64", 8) != 0)
              break;
            Mnemonic = "v_bfi_b32";	 // "v_bfi_b32_e64"
            return;
          case 'm':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+5, "_b32_e64", 8) != 0)
              break;
            Mnemonic = "v_bfm_b32";	 // "v_bfm_b32_e64"
            return;
          }
          break;
        case 'c':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "rexcp_e64", 9) != 0)
              break;
            Mnemonic = "v_clrexcp";	 // "v_clrexcp_e64"
            return;
          case 'o':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "s_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_cos_f16";	 // "v_cos_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_cos_f32";	 // "v_cos_f32_e64"
              return;
            }
            break;
          }
          break;
        case 'e':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "xp_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_exp_f16";	 // "v_exp_f16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_exp_f32";	 // "v_exp_f32_e64"
            return;
          }
          break;
        case 'f':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "ma_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_fma_f16";	 // "v_fma_f16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_fma_f32";	 // "v_fma_f32_e64"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_fma_f64";	 // "v_fma_f64_e64"
            return;
          }
          break;
        case 'l':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'e':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "rp_u8_e64", 9) != 0)
              break;
            Mnemonic = "v_lerp_u8";	 // "v_lerp_u8_e64"
            return;
          case 'o':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "g_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_log_f16";	 // "v_log_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_log_f32";	 // "v_log_f32_e64"
              return;
            }
            break;
          }
          break;
        case 'm':	 // 25 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 13 strings to match.
            switch (Mnemonic[4]) {
            default: break;
            case 'c':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+5, "_f", 2) != 0)
                break;
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_mac_f16";	 // "v_mac_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_mac_f32";	 // "v_mac_f32_e64"
                return;
              }
              break;
            case 'd':	 // 4 strings to match.
              if (Mnemonic[5] != '_')
                break;
              switch (Mnemonic[6]) {
              default: break;
              case 'f':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_mad_f16";	 // "v_mad_f16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_mad_f32";	 // "v_mad_f32_e64"
                  return;
                }
                break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+7, "16_e64", 6) != 0)
                  break;
                Mnemonic = "v_mad_i16";	 // "v_mad_i16_e64"
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+7, "16_e64", 6) != 0)
                  break;
                Mnemonic = "v_mad_u16";	 // "v_mad_u16_e64"
                return;
              }
              break;
            case 'x':	 // 7 strings to match.
              if (Mnemonic[5] != '_')
                break;
              switch (Mnemonic[6]) {
              default: break;
              case 'f':	 // 3 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_max_f16";	 // "v_max_f16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_max_f32";	 // "v_max_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_max_f64";	 // "v_max_f64_e64"
                  return;
                }
                break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_max_i16";	 // "v_max_i16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_max_i32";	 // "v_max_i32_e64"
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_max_u16";	 // "v_max_u16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_max_u32";	 // "v_max_u32_e64"
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 'i':	 // 7 strings to match.
            if (memcmp(Mnemonic.data()+4, "n_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 3 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_min_f16";	 // "v_min_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_min_f32";	 // "v_min_f32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_min_f64";	 // "v_min_f64_e64"
                return;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_min_i16";	 // "v_min_i16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_min_i32";	 // "v_min_i32_e64"
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_min_u16";	 // "v_min_u16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_min_u32";	 // "v_min_u32_e64"
                return;
              }
              break;
            }
            break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "v_b32_e64", 9) != 0)
              break;
            Mnemonic = "v_mov_b32";	 // "v_mov_b32_e64"
            return;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "ad_u8_e64", 9) != 0)
              break;
            Mnemonic = "v_msad_u8";	 // "v_msad_u8_e64"
            return;
          case 'u':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_mul_f16";	 // "v_mul_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_mul_f32";	 // "v_mul_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_mul_f64";	 // "v_mul_f64_e64"
              return;
            }
            break;
          }
          break;
        case 'n':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ot_b32_e64", 10) != 0)
            break;
          Mnemonic = "v_not_b32";	 // "v_not_b32_e64"
          return;
        case 'r':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "p_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_rcp_f16";	 // "v_rcp_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_rcp_f32";	 // "v_rcp_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_rcp_f64";	 // "v_rcp_f64_e64"
              return;
            }
            break;
          case 's':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "q_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_rsq_f16";	 // "v_rsq_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_rsq_f32";	 // "v_rsq_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_rsq_f64";	 // "v_rsq_f64_e64"
              return;
            }
            break;
          }
          break;
        case 's':	 // 8 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "d_u", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_sad_u16";	 // "v_sad_u16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_sad_u32";	 // "v_sad_u32_e64"
              return;
            }
            break;
          case 'i':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "n_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_sin_f16";	 // "v_sin_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_sin_f32";	 // "v_sin_f32_e64"
              return;
            }
            break;
          case 'u':	 // 4 strings to match.
            if (memcmp(Mnemonic.data()+4, "b_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_sub_f16";	 // "v_sub_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_sub_f32";	 // "v_sub_f32_e64"
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_sub_i32";	 // "v_sub_i32_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "16_e64", 6) != 0)
                break;
              Mnemonic = "v_sub_u16";	 // "v_sub_u16_e64"
              return;
            }
            break;
          }
          break;
        case 'x':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "or_b32_e64", 10) != 0)
            break;
          Mnemonic = "v_xor_b32";	 // "v_xor_b32_e64"
          return;
        }
        break;
      case 14:	 // 26 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "dc_u32_e64", 10) != 0)
              break;
            Mnemonic = "v_addc_u32";	 // "v_addc_u32_e64"
            return;
          case 's':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "hr_i", 4) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_ashr_i32";	 // "v_ashr_i32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_ashr_i64";	 // "v_ashr_i64_e64"
              return;
            }
            break;
          }
          break;
        case 'c':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "eil_f", 5) != 0)
            break;
          switch (Mnemonic[8]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_ceil_f16";	 // "v_ceil_f16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_ceil_f32";	 // "v_ceil_f32_e64"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_ceil_f64";	 // "v_ceil_f64_e64"
            return;
          }
          break;
        case 'f':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "fb", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'h':	 // 2 strings to match.
            if (Mnemonic[6] != '_')
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_ffbh_i32";	 // "v_ffbh_i32_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_ffbh_u32";	 // "v_ffbh_u32_e64"
              return;
            }
            break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "_b32_e64", 8) != 0)
              break;
            Mnemonic = "v_ffbl_b32";	 // "v_ffbl_b32_e64"
            return;
          }
          break;
        case 'l':	 // 4 strings to match.
          if (memcmp(Mnemonic.data()+3, "sh", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'l':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "_b", 2) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_lshl_b32";	 // "v_lshl_b32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_lshl_b64";	 // "v_lshl_b64_e64"
              return;
            }
            break;
          case 'r':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "_b", 2) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_lshr_b32";	 // "v_lshr_b32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_lshr_b64";	 // "v_lshr_b64_e64"
              return;
            }
            break;
          }
          break;
        case 'm':	 // 9 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "x3_", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'f':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_max3_f32";	 // "v_max3_f32_e64"
              return;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_max3_i32";	 // "v_max3_i32_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_max3_u32";	 // "v_max3_u32_e64"
              return;
            }
            break;
          case 'e':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "d3_", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'f':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_med3_f32";	 // "v_med3_f32_e64"
              return;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_med3_i32";	 // "v_med3_i32_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_med3_u32";	 // "v_med3_u32_e64"
              return;
            }
            break;
          case 'i':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "n3_", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'f':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_min3_f32";	 // "v_min3_f32_e64"
              return;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_min3_i32";	 // "v_min3_i32_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_e64", 6) != 0)
                break;
              Mnemonic = "v_min3_u32";	 // "v_min3_u32_e64"
              return;
            }
            break;
          }
          break;
        case 's':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'q':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "rt_f", 4) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_sqrt_f16";	 // "v_sqrt_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_sqrt_f32";	 // "v_sqrt_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_sqrt_f64";	 // "v_sqrt_f64_e64"
              return;
            }
            break;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "bb_u32_e64", 10) != 0)
              break;
            Mnemonic = "v_subb_u32";	 // "v_subb_u32_e64"
            return;
          }
          break;
        }
        break;
      case 15:	 // 38 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "frev_b32_e64", 12) != 0)
            break;
          Mnemonic = "v_bfrev_b32";	 // "v_bfrev_b32_e64"
          return;
        case 'c':	 // 21 strings to match.
          if (memcmp(Mnemonic.data()+3, "mp_", 3) != 0)
            break;
          switch (Mnemonic[6]) {
          default: break;
          case 'f':	 // 9 strings to match.
            if (Mnemonic[7] != '_')
              break;
            switch (Mnemonic[8]) {
            default: break;
            case 'f':	 // 3 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_f16";	 // "v_cmp_f_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_f32";	 // "v_cmp_f_f32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_f64";	 // "v_cmp_f_f64_e64"
                return;
              }
              break;
            case 'i':	 // 3 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_i16";	 // "v_cmp_f_i16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_i32";	 // "v_cmp_f_i32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_i64";	 // "v_cmp_f_i64_e64"
                return;
              }
              break;
            case 'u':	 // 3 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_u16";	 // "v_cmp_f_u16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_u32";	 // "v_cmp_f_u32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_f_u64";	 // "v_cmp_f_u64_e64"
                return;
              }
              break;
            }
            break;
          case 'o':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+7, "_f", 2) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_cmp_o_f16";	 // "v_cmp_o_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_cmp_o_f32";	 // "v_cmp_o_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_cmp_o_f64";	 // "v_cmp_o_f64_e64"
              return;
            }
            break;
          case 't':	 // 6 strings to match.
            if (Mnemonic[7] != '_')
              break;
            switch (Mnemonic[8]) {
            default: break;
            case 'i':	 // 3 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_t_i16";	 // "v_cmp_t_i16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_t_i32";	 // "v_cmp_t_i32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_t_i64";	 // "v_cmp_t_i64_e64"
                return;
              }
              break;
            case 'u':	 // 3 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_t_u16";	 // "v_cmp_t_u16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_t_u32";	 // "v_cmp_t_u32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_t_u64";	 // "v_cmp_t_u64_e64"
                return;
              }
              break;
            }
            break;
          case 'u':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+7, "_f", 2) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_cmp_u_f16";	 // "v_cmp_u_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_cmp_u_f32";	 // "v_cmp_u_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_cmp_u_f64";	 // "v_cmp_u_f64_e64"
              return;
            }
            break;
          }
          break;
        case 'f':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'l':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "oor_f", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_floor_f16";	 // "v_floor_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_floor_f32";	 // "v_floor_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_floor_f64";	 // "v_floor_f64_e64"
              return;
            }
            break;
          case 'r':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "act_f", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_fract_f16";	 // "v_fract_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_fract_f32";	 // "v_fract_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_fract_f64";	 // "v_fract_f64_e64"
              return;
            }
            break;
          }
          break;
        case 'l':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "dexp_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_ldexp_f16";	 // "v_ldexp_f16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_ldexp_f32";	 // "v_ldexp_f32_e64"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_ldexp_f64";	 // "v_ldexp_f64_e64"
            return;
          }
          break;
        case 'r':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "ndne_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_rndne_f16";	 // "v_rndne_f16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_rndne_f32";	 // "v_rndne_f32_e64"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_rndne_f64";	 // "v_rndne_f64_e64"
            return;
          }
          break;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ad_hi_u8_e64", 12) != 0)
            break;
          Mnemonic = "v_sad_hi_u8";	 // "v_sad_hi_u8_e64"
          return;
        case 't':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "runc_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_trunc_f16";	 // "v_trunc_f16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_trunc_f32";	 // "v_trunc_f32_e64"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_trunc_f64";	 // "v_trunc_f64_e64"
            return;
          }
          break;
        }
        break;
      case 16:	 // 95 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 85 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'm':	 // 81 strings to match.
            if (Mnemonic[4] != 'p')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case '_':	 // 54 strings to match.
              switch (Mnemonic[6]) {
              default: break;
              case 'e':	 // 9 strings to match.
                if (memcmp(Mnemonic.data()+7, "q_", 2) != 0)
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'f':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_f16";	 // "v_cmp_eq_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_f32";	 // "v_cmp_eq_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_f64";	 // "v_cmp_eq_f64_e64"
                    return;
                  }
                  break;
                case 'i':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_i16";	 // "v_cmp_eq_i16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_i32";	 // "v_cmp_eq_i32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_i64";	 // "v_cmp_eq_i64_e64"
                    return;
                  }
                  break;
                case 'u':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_u16";	 // "v_cmp_eq_u16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_u32";	 // "v_cmp_eq_u32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_eq_u64";	 // "v_cmp_eq_u64_e64"
                    return;
                  }
                  break;
                }
                break;
              case 'g':	 // 18 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case 'e':	 // 9 strings to match.
                  if (Mnemonic[8] != '_')
                    break;
                  switch (Mnemonic[9]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_f16";	 // "v_cmp_ge_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_f32";	 // "v_cmp_ge_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_f64";	 // "v_cmp_ge_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_i16";	 // "v_cmp_ge_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_i32";	 // "v_cmp_ge_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_i64";	 // "v_cmp_ge_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_u16";	 // "v_cmp_ge_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_u32";	 // "v_cmp_ge_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ge_u64";	 // "v_cmp_ge_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 't':	 // 9 strings to match.
                  if (Mnemonic[8] != '_')
                    break;
                  switch (Mnemonic[9]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_f16";	 // "v_cmp_gt_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_f32";	 // "v_cmp_gt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_f64";	 // "v_cmp_gt_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_i16";	 // "v_cmp_gt_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_i32";	 // "v_cmp_gt_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_i64";	 // "v_cmp_gt_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_u16";	 // "v_cmp_gt_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_u32";	 // "v_cmp_gt_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_gt_u64";	 // "v_cmp_gt_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 'l':	 // 21 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case 'e':	 // 9 strings to match.
                  if (Mnemonic[8] != '_')
                    break;
                  switch (Mnemonic[9]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_f16";	 // "v_cmp_le_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_f32";	 // "v_cmp_le_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_f64";	 // "v_cmp_le_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_i16";	 // "v_cmp_le_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_i32";	 // "v_cmp_le_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_i64";	 // "v_cmp_le_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_u16";	 // "v_cmp_le_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_u32";	 // "v_cmp_le_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_le_u64";	 // "v_cmp_le_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 'g':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_lg_f16";	 // "v_cmp_lg_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_lg_f32";	 // "v_cmp_lg_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_lg_f64";	 // "v_cmp_lg_f64_e64"
                    return;
                  }
                  break;
                case 't':	 // 9 strings to match.
                  if (Mnemonic[8] != '_')
                    break;
                  switch (Mnemonic[9]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_f16";	 // "v_cmp_lt_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_f32";	 // "v_cmp_lt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_f64";	 // "v_cmp_lt_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_i16";	 // "v_cmp_lt_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_i32";	 // "v_cmp_lt_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_i64";	 // "v_cmp_lt_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[10]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_u16";	 // "v_cmp_lt_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_u32";	 // "v_cmp_lt_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_lt_u64";	 // "v_cmp_lt_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 'n':	 // 6 strings to match.
                if (memcmp(Mnemonic.data()+7, "e_", 2) != 0)
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'i':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_ne_i16";	 // "v_cmp_ne_i16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_ne_i32";	 // "v_cmp_ne_i32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_ne_i64";	 // "v_cmp_ne_i64_e64"
                    return;
                  }
                  break;
                case 'u':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_ne_u16";	 // "v_cmp_ne_u16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_ne_u32";	 // "v_cmp_ne_u32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_ne_u64";	 // "v_cmp_ne_u64_e64"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            case 's':	 // 6 strings to match.
              if (Mnemonic[6] != '_')
                break;
              switch (Mnemonic[7]) {
              default: break;
              case 'f':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_f_f32";	 // "v_cmps_f_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_f_f64";	 // "v_cmps_f_f64_e64"
                  return;
                }
                break;
              case 'o':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_o_f32";	 // "v_cmps_o_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_o_f64";	 // "v_cmps_o_f64_e64"
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_u_f32";	 // "v_cmps_u_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_u_f64";	 // "v_cmps_u_f64_e64"
                  return;
                }
                break;
              }
              break;
            case 'x':	 // 21 strings to match.
              if (Mnemonic[6] != '_')
                break;
              switch (Mnemonic[7]) {
              default: break;
              case 'f':	 // 9 strings to match.
                if (Mnemonic[8] != '_')
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'f':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_f16";	 // "v_cmpx_f_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_f32";	 // "v_cmpx_f_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_f64";	 // "v_cmpx_f_f64_e64"
                    return;
                  }
                  break;
                case 'i':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_i16";	 // "v_cmpx_f_i16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_i32";	 // "v_cmpx_f_i32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_i64";	 // "v_cmpx_f_i64_e64"
                    return;
                  }
                  break;
                case 'u':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_u16";	 // "v_cmpx_f_u16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_u32";	 // "v_cmpx_f_u32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_f_u64";	 // "v_cmpx_f_u64_e64"
                    return;
                  }
                  break;
                }
                break;
              case 'o':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_o_f16";	 // "v_cmpx_o_f16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_o_f32";	 // "v_cmpx_o_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_o_f64";	 // "v_cmpx_o_f64_e64"
                  return;
                }
                break;
              case 't':	 // 6 strings to match.
                if (Mnemonic[8] != '_')
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'i':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_t_i16";	 // "v_cmpx_t_i16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_t_i32";	 // "v_cmpx_t_i32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_t_i64";	 // "v_cmpx_t_i64_e64"
                    return;
                  }
                  break;
                case 'u':	 // 3 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_t_u16";	 // "v_cmpx_t_u16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_t_u32";	 // "v_cmpx_t_u32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_t_u64";	 // "v_cmpx_t_u64_e64"
                    return;
                  }
                  break;
                }
                break;
              case 'u':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_u_f16";	 // "v_cmpx_u_f16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_u_f32";	 // "v_cmpx_u_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_u_f64";	 // "v_cmpx_u_f64_e64"
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 'u':	 // 4 strings to match.
            if (memcmp(Mnemonic.data()+4, "be", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "d_f32_e64", 9) != 0)
                break;
              Mnemonic = "v_cubeid_f32";	 // "v_cubeid_f32_e64"
              return;
            case 'm':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "a_f32_e64", 9) != 0)
                break;
              Mnemonic = "v_cubema_f32";	 // "v_cubema_f32_e64"
              return;
            case 's':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "c_f32_e64", 9) != 0)
                break;
              Mnemonic = "v_cubesc_f32";	 // "v_cubesc_f32_e64"
              return;
            case 't':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "c_f32_e64", 9) != 0)
                break;
              Mnemonic = "v_cubetc_f32";	 // "v_cubetc_f32_e64"
              return;
            }
            break;
          }
          break;
        case 'm':	 // 6 strings to match.
          if (memcmp(Mnemonic.data()+3, "ul", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case '_':	 // 5 strings to match.
            switch (Mnemonic[6]) {
            default: break;
            case 'h':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "i_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_e64", 6) != 0)
                  break;
                Mnemonic = "v_mul_hi_i32";	 // "v_mul_hi_i32_e64"
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_e64", 6) != 0)
                  break;
                Mnemonic = "v_mul_hi_u32";	 // "v_mul_hi_u32_e64"
                return;
              }
              break;
            case 'l':	 // 3 strings to match.
              if (memcmp(Mnemonic.data()+7, "o_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_e64", 6) != 0)
                  break;
                Mnemonic = "v_mul_lo_i32";	 // "v_mul_lo_i32_e64"
                return;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_mul_lo_u16";	 // "v_mul_lo_u16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_mul_lo_u32";	 // "v_mul_lo_u32_e64"
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "it_f32_e64", 10) != 0)
              break;
            Mnemonic = "v_mullit_f32";	 // "v_mullit_f32_e64"
            return;
          }
          break;
        case 's':	 // 4 strings to match.
          if (memcmp(Mnemonic.data()+3, "ubrev_", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case 'f':	 // 2 strings to match.
            switch (Mnemonic[10]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_subrev_f16";	 // "v_subrev_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_subrev_f32";	 // "v_subrev_f32_e64"
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "32_e64", 6) != 0)
              break;
            Mnemonic = "v_subrev_i32";	 // "v_subrev_i32_e64"
            return;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "16_e64", 6) != 0)
              break;
            Mnemonic = "v_subrev_u16";	 // "v_subrev_u16_e64"
            return;
          }
          break;
        }
        break;
      case 17:	 // 129 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "shrrev_i", 8) != 0)
            break;
          switch (Mnemonic[11]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_ashrrev_i16";	 // "v_ashrrev_i16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_ashrrev_i32";	 // "v_ashrrev_i32_e64"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_ashrrev_i64";	 // "v_ashrrev_i64_e64"
            return;
          }
          break;
        case 'c':	 // 110 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'm':	 // 93 strings to match.
            if (Mnemonic[4] != 'p')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case '_':	 // 21 strings to match.
              switch (Mnemonic[6]) {
              default: break;
              case 'n':	 // 18 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case 'e':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+8, "q_f", 3) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_neq_f16";	 // "v_cmp_neq_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_neq_f32";	 // "v_cmp_neq_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmp_neq_f64";	 // "v_cmp_neq_f64_e64"
                    return;
                  }
                  break;
                case 'g':	 // 6 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 3 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nge_f16";	 // "v_cmp_nge_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nge_f32";	 // "v_cmp_nge_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nge_f64";	 // "v_cmp_nge_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 3 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ngt_f16";	 // "v_cmp_ngt_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ngt_f32";	 // "v_cmp_ngt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_ngt_f64";	 // "v_cmp_ngt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 'l':	 // 9 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 3 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nle_f16";	 // "v_cmp_nle_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nle_f32";	 // "v_cmp_nle_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nle_f64";	 // "v_cmp_nle_f64_e64"
                      return;
                    }
                    break;
                  case 'g':	 // 3 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nlg_f16";	 // "v_cmp_nlg_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nlg_f32";	 // "v_cmp_nlg_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nlg_f64";	 // "v_cmp_nlg_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 3 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nlt_f16";	 // "v_cmp_nlt_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nlt_f32";	 // "v_cmp_nlt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmp_nlt_f64";	 // "v_cmp_nlt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 't':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+7, "ru_f", 4) != 0)
                  break;
                switch (Mnemonic[11]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmp_tru_f16";	 // "v_cmp_tru_f16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmp_tru_f32";	 // "v_cmp_tru_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmp_tru_f64";	 // "v_cmp_tru_f64_e64"
                  return;
                }
                break;
              }
              break;
            case 's':	 // 18 strings to match.
              switch (Mnemonic[6]) {
              default: break;
              case '_':	 // 12 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case 'e':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+8, "q_f", 3) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmps_eq_f32";	 // "v_cmps_eq_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmps_eq_f64";	 // "v_cmps_eq_f64_e64"
                    return;
                  }
                  break;
                case 'g':	 // 4 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_ge_f32";	 // "v_cmps_ge_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_ge_f64";	 // "v_cmps_ge_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_gt_f32";	 // "v_cmps_gt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_gt_f64";	 // "v_cmps_gt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 'l':	 // 6 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_le_f32";	 // "v_cmps_le_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_le_f64";	 // "v_cmps_le_f64_e64"
                      return;
                    }
                    break;
                  case 'g':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_lg_f32";	 // "v_cmps_lg_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_lg_f64";	 // "v_cmps_lg_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_lt_f32";	 // "v_cmps_lt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_lt_f64";	 // "v_cmps_lt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 'x':	 // 6 strings to match.
                if (Mnemonic[7] != '_')
                  break;
                switch (Mnemonic[8]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_f_f32";	 // "v_cmpsx_f_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_f_f64";	 // "v_cmpsx_f_f64_e64"
                    return;
                  }
                  break;
                case 'o':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_o_f32";	 // "v_cmpsx_o_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_o_f64";	 // "v_cmpsx_o_f64_e64"
                    return;
                  }
                  break;
                case 'u':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_u_f32";	 // "v_cmpsx_u_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_u_f64";	 // "v_cmpsx_u_f64_e64"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            case 'x':	 // 54 strings to match.
              if (Mnemonic[6] != '_')
                break;
              switch (Mnemonic[7]) {
              default: break;
              case 'e':	 // 9 strings to match.
                if (memcmp(Mnemonic.data()+8, "q_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 3 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_f16";	 // "v_cmpx_eq_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_f32";	 // "v_cmpx_eq_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_f64";	 // "v_cmpx_eq_f64_e64"
                    return;
                  }
                  break;
                case 'i':	 // 3 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_i16";	 // "v_cmpx_eq_i16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_i32";	 // "v_cmpx_eq_i32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_i64";	 // "v_cmpx_eq_i64_e64"
                    return;
                  }
                  break;
                case 'u':	 // 3 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_u16";	 // "v_cmpx_eq_u16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_u32";	 // "v_cmpx_eq_u32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_u64";	 // "v_cmpx_eq_u64_e64"
                    return;
                  }
                  break;
                }
                break;
              case 'g':	 // 18 strings to match.
                switch (Mnemonic[8]) {
                default: break;
                case 'e':	 // 9 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_f16";	 // "v_cmpx_ge_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_f32";	 // "v_cmpx_ge_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_f64";	 // "v_cmpx_ge_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_i16";	 // "v_cmpx_ge_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_i32";	 // "v_cmpx_ge_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_i64";	 // "v_cmpx_ge_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_u16";	 // "v_cmpx_ge_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_u32";	 // "v_cmpx_ge_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_u64";	 // "v_cmpx_ge_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 't':	 // 9 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_f16";	 // "v_cmpx_gt_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_f32";	 // "v_cmpx_gt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_f64";	 // "v_cmpx_gt_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_i16";	 // "v_cmpx_gt_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_i32";	 // "v_cmpx_gt_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_i64";	 // "v_cmpx_gt_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_u16";	 // "v_cmpx_gt_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_u32";	 // "v_cmpx_gt_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_u64";	 // "v_cmpx_gt_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 'l':	 // 21 strings to match.
                switch (Mnemonic[8]) {
                default: break;
                case 'e':	 // 9 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_f16";	 // "v_cmpx_le_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_f32";	 // "v_cmpx_le_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_f64";	 // "v_cmpx_le_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_i16";	 // "v_cmpx_le_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_i32";	 // "v_cmpx_le_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_i64";	 // "v_cmpx_le_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_u16";	 // "v_cmpx_le_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_u32";	 // "v_cmpx_le_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_u64";	 // "v_cmpx_le_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 'g':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_lg_f16";	 // "v_cmpx_lg_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_lg_f32";	 // "v_cmpx_lg_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_lg_f64";	 // "v_cmpx_lg_f64_e64"
                    return;
                  }
                  break;
                case 't':	 // 9 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_f16";	 // "v_cmpx_lt_f16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_f32";	 // "v_cmpx_lt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_f64";	 // "v_cmpx_lt_f64_e64"
                      return;
                    }
                    break;
                  case 'i':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_i16";	 // "v_cmpx_lt_i16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_i32";	 // "v_cmpx_lt_i32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_i64";	 // "v_cmpx_lt_i64_e64"
                      return;
                    }
                    break;
                  case 'u':	 // 3 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_u16";	 // "v_cmpx_lt_u16_e64"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_u32";	 // "v_cmpx_lt_u32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_u64";	 // "v_cmpx_lt_u64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 'n':	 // 6 strings to match.
                if (memcmp(Mnemonic.data()+8, "e_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'i':	 // 3 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_i16";	 // "v_cmpx_ne_i16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_i32";	 // "v_cmpx_ne_i32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_i64";	 // "v_cmpx_ne_i64_e64"
                    return;
                  }
                  break;
                case 'u':	 // 3 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_u16";	 // "v_cmpx_ne_u16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_u32";	 // "v_cmpx_ne_u32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_u64";	 // "v_cmpx_ne_u64_e64"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            }
            break;
          case 'n':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "dmask_b32_e64", 13) != 0)
              break;
            Mnemonic = "v_cndmask_b32";	 // "v_cndmask_b32_e64"
            return;
          case 'v':	 // 16 strings to match.
            if (memcmp(Mnemonic.data()+4, "t_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 10 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "6_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_f32";	 // "v_cvt_f16_f32_e64"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_i16";	 // "v_cvt_f16_i16_e64"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_u16";	 // "v_cvt_f16_u16_e64"
                  return;
                }
                break;
              case '3':	 // 4 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cvt_f32_f16";	 // "v_cvt_f32_f16_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cvt_f32_f64";	 // "v_cvt_f32_f64_e64"
                    return;
                  }
                  break;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_i32";	 // "v_cvt_f32_i32_e64"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_u32";	 // "v_cvt_f32_u32_e64"
                  return;
                }
                break;
              case '6':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "4_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f64_f32";	 // "v_cvt_f64_f32_e64"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f64_i32";	 // "v_cvt_f64_i32_e64"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_e64", 6) != 0)
                    break;
                  Mnemonic = "v_cvt_f64_u32";	 // "v_cvt_f64_u32_e64"
                  return;
                }
                break;
              }
              break;
            case 'i':	 // 3 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_f16_e64", 9) != 0)
                  break;
                Mnemonic = "v_cvt_i16_f16";	 // "v_cvt_i16_f16_e64"
                return;
              case '3':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_f", 3) != 0)
                  break;
                switch (Mnemonic[11]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_i32_f32";	 // "v_cvt_i32_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_i32_f64";	 // "v_cvt_i32_f64_e64"
                  return;
                }
                break;
              }
              break;
            case 'u':	 // 3 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_f16_e64", 9) != 0)
                  break;
                Mnemonic = "v_cvt_u16_f16";	 // "v_cvt_u16_f16_e64"
                return;
              case '3':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_f", 3) != 0)
                  break;
                switch (Mnemonic[11]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_u32_f32";	 // "v_cvt_u32_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cvt_u32_f64";	 // "v_cvt_u32_f64_e64"
                  return;
                }
                break;
              }
              break;
            }
            break;
          }
          break;
        case 'l':	 // 6 strings to match.
          if (memcmp(Mnemonic.data()+3, "sh", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'l':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+6, "rev_b", 5) != 0)
              break;
            switch (Mnemonic[11]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_lshlrev_b16";	 // "v_lshlrev_b16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_lshlrev_b32";	 // "v_lshlrev_b32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_lshlrev_b64";	 // "v_lshlrev_b64_e64"
              return;
            }
            break;
          case 'r':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+6, "rev_b", 5) != 0)
              break;
            switch (Mnemonic[11]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_lshrrev_b16";	 // "v_lshrrev_b16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_lshrrev_b32";	 // "v_lshrrev_b32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_lshrrev_b64";	 // "v_lshrrev_b64_e64"
              return;
            }
            break;
          }
          break;
        case 'm':	 // 9 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 4 strings to match.
            if (memcmp(Mnemonic.data()+4, "d_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_i24_e64", 9) != 0)
                  break;
                Mnemonic = "v_mad_i32_i24";	 // "v_mad_i32_i24_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "4_i32_e64", 9) != 0)
                  break;
                Mnemonic = "v_mad_i64_i32";	 // "v_mad_i64_i32_e64"
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_u24_e64", 9) != 0)
                  break;
                Mnemonic = "v_mad_u32_u24";	 // "v_mad_u32_u24_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "4_u32_e64", 9) != 0)
                  break;
                Mnemonic = "v_mad_u64_u32";	 // "v_mad_u64_u32_e64"
                return;
              }
              break;
            }
            break;
          case 'o':	 // 3 strings to match.
            if (Mnemonic[4] != 'v')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case '_':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+6, "fed_b32_e64", 11) != 0)
                break;
              Mnemonic = "v_mov_fed_b32";	 // "v_mov_fed_b32_e64"
              return;
            case 'r':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+6, "el", 2) != 0)
                break;
              switch (Mnemonic[8]) {
              default: break;
              case 'd':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "_b32_e64", 8) != 0)
                  break;
                Mnemonic = "v_movreld_b32";	 // "v_movreld_b32_e64"
                return;
              case 's':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "_b32_e64", 8) != 0)
                  break;
                Mnemonic = "v_movrels_b32";	 // "v_movrels_b32_e64"
                return;
              }
              break;
            }
            break;
          case 'u':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_i24_e64", 10) != 0)
                break;
              Mnemonic = "v_mul_i32_i24";	 // "v_mul_i32_i24_e64"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_u24_e64", 10) != 0)
                break;
              Mnemonic = "v_mul_u32_u24";	 // "v_mul_u32_u24_e64"
              return;
            }
            break;
          }
          break;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ubbrev_u32_e64", 14) != 0)
            break;
          Mnemonic = "v_subbrev_u32";	 // "v_subbrev_u32_e64"
          return;
        }
        break;
      case 18:	 // 54 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "lignbit_b32_e64", 15) != 0)
            break;
          Mnemonic = "v_alignbit_b32";	 // "v_alignbit_b32_e64"
          return;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "cnt_u32_b32_e64", 15) != 0)
            break;
          Mnemonic = "v_bcnt_u32_b32";	 // "v_bcnt_u32_b32_e64"
          return;
        case 'c':	 // 47 strings to match.
          if (memcmp(Mnemonic.data()+3, "mp", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 's':	 // 26 strings to match.
            switch (Mnemonic[6]) {
            default: break;
            case '_':	 // 14 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case 'n':	 // 12 strings to match.
                switch (Mnemonic[8]) {
                default: break;
                case 'e':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+9, "q_f", 3) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmps_neq_f32";	 // "v_cmps_neq_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmps_neq_f64";	 // "v_cmps_neq_f64_e64"
                    return;
                  }
                  break;
                case 'g':	 // 4 strings to match.
                  switch (Mnemonic[9]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[12]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nge_f32";	 // "v_cmps_nge_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nge_f64";	 // "v_cmps_nge_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[12]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_ngt_f32";	 // "v_cmps_ngt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_ngt_f64";	 // "v_cmps_ngt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 'l':	 // 6 strings to match.
                  switch (Mnemonic[9]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[12]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nle_f32";	 // "v_cmps_nle_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nle_f64";	 // "v_cmps_nle_f64_e64"
                      return;
                    }
                    break;
                  case 'g':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[12]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nlg_f32";	 // "v_cmps_nlg_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nlg_f64";	 // "v_cmps_nlg_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[12]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nlt_f32";	 // "v_cmps_nlt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmps_nlt_f64";	 // "v_cmps_nlt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 't':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "ru_f", 4) != 0)
                  break;
                switch (Mnemonic[12]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_tru_f32";	 // "v_cmps_tru_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmps_tru_f64";	 // "v_cmps_tru_f64_e64"
                  return;
                }
                break;
              }
              break;
            case 'x':	 // 12 strings to match.
              if (Mnemonic[7] != '_')
                break;
              switch (Mnemonic[8]) {
              default: break;
              case 'e':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+9, "q_f", 3) != 0)
                  break;
                switch (Mnemonic[12]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpsx_eq_f32";	 // "v_cmpsx_eq_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpsx_eq_f64";	 // "v_cmpsx_eq_f64_e64"
                  return;
                }
                break;
              case 'g':	 // 4 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_ge_f32";	 // "v_cmpsx_ge_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_ge_f64";	 // "v_cmpsx_ge_f64_e64"
                    return;
                  }
                  break;
                case 't':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_gt_f32";	 // "v_cmpsx_gt_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_gt_f64";	 // "v_cmpsx_gt_f64_e64"
                    return;
                  }
                  break;
                }
                break;
              case 'l':	 // 6 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_le_f32";	 // "v_cmpsx_le_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_le_f64";	 // "v_cmpsx_le_f64_e64"
                    return;
                  }
                  break;
                case 'g':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_lg_f32";	 // "v_cmpsx_lg_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_lg_f64";	 // "v_cmpsx_lg_f64_e64"
                    return;
                  }
                  break;
                case 't':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_lt_f32";	 // "v_cmpsx_lt_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_lt_f64";	 // "v_cmpsx_lt_f64_e64"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            }
            break;
          case 'x':	 // 21 strings to match.
            if (Mnemonic[6] != '_')
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'n':	 // 18 strings to match.
              switch (Mnemonic[8]) {
              default: break;
              case 'e':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+9, "q_f", 3) != 0)
                  break;
                switch (Mnemonic[12]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "6_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_neq_f16";	 // "v_cmpx_neq_f16_e64"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_neq_f32";	 // "v_cmpx_neq_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpx_neq_f64";	 // "v_cmpx_neq_f64_e64"
                  return;
                }
                break;
              case 'g':	 // 6 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nge_f16";	 // "v_cmpx_nge_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nge_f32";	 // "v_cmpx_nge_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nge_f64";	 // "v_cmpx_nge_f64_e64"
                    return;
                  }
                  break;
                case 't':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ngt_f16";	 // "v_cmpx_ngt_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ngt_f32";	 // "v_cmpx_ngt_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_ngt_f64";	 // "v_cmpx_ngt_f64_e64"
                    return;
                  }
                  break;
                }
                break;
              case 'l':	 // 9 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nle_f16";	 // "v_cmpx_nle_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nle_f32";	 // "v_cmpx_nle_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nle_f64";	 // "v_cmpx_nle_f64_e64"
                    return;
                  }
                  break;
                case 'g':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlg_f16";	 // "v_cmpx_nlg_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlg_f32";	 // "v_cmpx_nlg_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlg_f64";	 // "v_cmpx_nlg_f64_e64"
                    return;
                  }
                  break;
                case 't':	 // 3 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlt_f16";	 // "v_cmpx_nlt_f16_e64"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlt_f32";	 // "v_cmpx_nlt_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlt_f64";	 // "v_cmpx_nlt_f64_e64"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            case 't':	 // 3 strings to match.
              if (memcmp(Mnemonic.data()+8, "ru_f", 4) != 0)
                break;
              switch (Mnemonic[12]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+13, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmpx_tru_f16";	 // "v_cmpx_tru_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmpx_tru_f32";	 // "v_cmpx_tru_f32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmpx_tru_f64";	 // "v_cmpx_tru_f64_e64"
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'd':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "iv_fmas_f", 9) != 0)
            break;
          switch (Mnemonic[12]) {
          default: break;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+13, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_div_fmas_f32";	 // "v_div_fmas_f32_e64"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+13, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_div_fmas_f64";	 // "v_div_fmas_f64_e64"
            return;
          }
          break;
        case 'm':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "vrelsd_b32_e64", 14) != 0)
              break;
            Mnemonic = "v_movrelsd_b32";	 // "v_movrelsd_b32_e64"
            return;
          case 'q':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "sad_u", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_u8_e64", 8) != 0)
                break;
              Mnemonic = "v_mqsad_u16_u8";	 // "v_mqsad_u16_u8_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_u8_e64", 8) != 0)
                break;
              Mnemonic = "v_mqsad_u32_u8";	 // "v_mqsad_u32_u8_e64"
              return;
            }
            break;
          }
          break;
        }
        break;
      case 19:	 // 31 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "lignbyte_b32_e64", 16) != 0)
            break;
          Mnemonic = "v_alignbyte_b32";	 // "v_alignbyte_b32_e64"
          return;
        case 'c':	 // 18 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'm':	 // 17 strings to match.
            if (Mnemonic[4] != 'p')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case '_':	 // 3 strings to match.
              if (memcmp(Mnemonic.data()+6, "class_f", 7) != 0)
                break;
              switch (Mnemonic[13]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+14, "6_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_class_f16";	 // "v_cmp_class_f16_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_class_f32";	 // "v_cmp_class_f32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_cmp_class_f64";	 // "v_cmp_class_f64_e64"
                return;
              }
              break;
            case 's':	 // 14 strings to match.
              if (memcmp(Mnemonic.data()+6, "x_", 2) != 0)
                break;
              switch (Mnemonic[8]) {
              default: break;
              case 'n':	 // 12 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "q_f", 3) != 0)
                    break;
                  switch (Mnemonic[13]) {
                  default: break;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_neq_f32";	 // "v_cmpsx_neq_f32_e64"
                    return;
                  case '6':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                      break;
                    Mnemonic = "v_cmpsx_neq_f64";	 // "v_cmpsx_neq_f64_e64"
                    return;
                  }
                  break;
                case 'g':	 // 4 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+11, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[13]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nge_f32";	 // "v_cmpsx_nge_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nge_f64";	 // "v_cmpsx_nge_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+11, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[13]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_ngt_f32";	 // "v_cmpsx_ngt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_ngt_f64";	 // "v_cmpsx_ngt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                case 'l':	 // 6 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+11, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[13]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nle_f32";	 // "v_cmpsx_nle_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nle_f64";	 // "v_cmpsx_nle_f64_e64"
                      return;
                    }
                    break;
                  case 'g':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+11, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[13]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nlg_f32";	 // "v_cmpsx_nlg_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nlg_f64";	 // "v_cmpsx_nlg_f64_e64"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+11, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[13]) {
                    default: break;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nlt_f32";	 // "v_cmpsx_nlt_f32_e64"
                      return;
                    case '6':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                        break;
                      Mnemonic = "v_cmpsx_nlt_f64";	 // "v_cmpsx_nlt_f64_e64"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 't':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+9, "ru_f", 4) != 0)
                  break;
                switch (Mnemonic[13]) {
                default: break;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpsx_tru_f32";	 // "v_cmpsx_tru_f32_e64"
                  return;
                case '6':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                    break;
                  Mnemonic = "v_cmpsx_tru_f64";	 // "v_cmpsx_tru_f64_e64"
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 'v':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "t_pk_u8_f32_e64", 15) != 0)
              break;
            Mnemonic = "v_cvt_pk_u8_f32";	 // "v_cvt_pk_u8_f32_e64"
            return;
          }
          break;
        case 'd':	 // 5 strings to match.
          if (memcmp(Mnemonic.data()+3, "iv_", 3) != 0)
            break;
          switch (Mnemonic[6]) {
          default: break;
          case 'f':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+7, "ixup_f", 6) != 0)
              break;
            switch (Mnemonic[13]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_div_fixup_f16";	 // "v_div_fixup_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_div_fixup_f32";	 // "v_div_fixup_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_div_fixup_f64";	 // "v_div_fixup_f64_e64"
              return;
            }
            break;
          case 's':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+7, "cale_f", 6) != 0)
              break;
            switch (Mnemonic[13]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_div_scale_f32";	 // "v_div_scale_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_div_scale_f64";	 // "v_div_scale_f64_e64"
              return;
            }
            break;
          }
          break;
        case 'i':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "nterp_p2_f16_e64", 16) != 0)
            break;
          Mnemonic = "v_interp_p2_f16";	 // "v_interp_p2_f16_e64"
          return;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "og_clamp_f32_e64", 16) != 0)
            break;
          Mnemonic = "v_log_clamp_f32";	 // "v_log_clamp_f32_e64"
          return;
        case 'r':	 // 5 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "p_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'c':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "lamp_f", 6) != 0)
                break;
              switch (Mnemonic[13]) {
              default: break;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                  break;
                Mnemonic = "v_rcp_clamp_f32";	 // "v_rcp_clamp_f32_e64"
                return;
              case '6':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                  break;
                Mnemonic = "v_rcp_clamp_f64";	 // "v_rcp_clamp_f64_e64"
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "flag_f32_e64", 12) != 0)
                break;
              Mnemonic = "v_rcp_iflag_f32";	 // "v_rcp_iflag_f32_e64"
              return;
            }
            break;
          case 's':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "q_clamp_f", 9) != 0)
              break;
            switch (Mnemonic[13]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_rsq_clamp_f32";	 // "v_rsq_clamp_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_rsq_clamp_f64";	 // "v_rsq_clamp_f64_e64"
              return;
            }
            break;
          }
          break;
        }
        break;
      case 20:	 // 26 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 10 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'm':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "px_class_f", 10) != 0)
              break;
            switch (Mnemonic[14]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+15, "6_e64", 5) != 0)
                break;
              Mnemonic = "v_cmpx_class_f16";	 // "v_cmpx_class_f16_e64"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+15, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_cmpx_class_f32";	 // "v_cmpx_class_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+15, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_cmpx_class_f64";	 // "v_cmpx_class_f64_e64"
              return;
            }
            break;
          case 'v':	 // 7 strings to match.
            if (memcmp(Mnemonic.data()+4, "t_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 4 strings to match.
              if (memcmp(Mnemonic.data()+7, "32_ubyte", 8) != 0)
                break;
              switch (Mnemonic[15]) {
              default: break;
              case '0':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_e64", 4) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte0";	 // "v_cvt_f32_ubyte0_e64"
                return;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_e64", 4) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte1";	 // "v_cvt_f32_ubyte1_e64"
                return;
              case '2':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_e64", 4) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte2";	 // "v_cvt_f32_ubyte2_e64"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_e64", 4) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte3";	 // "v_cvt_f32_ubyte3_e64"
                return;
              }
              break;
            case 'o':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "ff_f32_i4_e64", 13) != 0)
                break;
              Mnemonic = "v_cvt_off_f32_i4";	 // "v_cvt_off_f32_i4_e64"
              return;
            case 'p':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "k_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "16_i32_e64", 10) != 0)
                  break;
                Mnemonic = "v_cvt_pk_i16_i32";	 // "v_cvt_pk_i16_i32_e64"
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "16_u32_e64", 10) != 0)
                  break;
                Mnemonic = "v_cvt_pk_u16_u32";	 // "v_cvt_pk_u16_u32_e64"
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'e':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "xp_legacy_f32_e64", 17) != 0)
            break;
          Mnemonic = "v_exp_legacy_f32";	 // "v_exp_legacy_f32_e64"
          return;
        case 'f':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "rexp_mant_f", 11) != 0)
            break;
          switch (Mnemonic[14]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "6_e64", 5) != 0)
              break;
            Mnemonic = "v_frexp_mant_f16";	 // "v_frexp_mant_f16_e64"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "2_e64", 5) != 0)
              break;
            Mnemonic = "v_frexp_mant_f32";	 // "v_frexp_mant_f32_e64"
            return;
          case '6':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "4_e64", 5) != 0)
              break;
            Mnemonic = "v_frexp_mant_f64";	 // "v_frexp_mant_f64_e64"
            return;
          }
          break;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "og_legacy_f32_e64", 17) != 0)
            break;
          Mnemonic = "v_log_legacy_f32";	 // "v_log_legacy_f32_e64"
          return;
        case 'm':	 // 7 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 3 strings to match.
            switch (Mnemonic[4]) {
            default: break;
            case 'c':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_e64", 15) != 0)
                break;
              Mnemonic = "v_mac_legacy_f32";	 // "v_mac_legacy_f32_e64"
              return;
            case 'd':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_e64", 15) != 0)
                break;
              Mnemonic = "v_mad_legacy_f32";	 // "v_mad_legacy_f32_e64"
              return;
            case 'x':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_e64", 15) != 0)
                break;
              Mnemonic = "v_max_legacy_f32";	 // "v_max_legacy_f32_e64"
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "n_legacy_f32_e64", 16) != 0)
              break;
            Mnemonic = "v_min_legacy_f32";	 // "v_min_legacy_f32_e64"
            return;
          case 'u':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'h':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "i_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_i24_e64", 10) != 0)
                  break;
                Mnemonic = "v_mul_hi_i32_i24";	 // "v_mul_hi_i32_i24_e64"
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_u24_e64", 10) != 0)
                  break;
                Mnemonic = "v_mul_hi_u32_u24";	 // "v_mul_hi_u32_u24_e64"
                return;
              }
              break;
            case 'l':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "egacy_f32_e64", 13) != 0)
                break;
              Mnemonic = "v_mul_legacy_f32";	 // "v_mul_legacy_f32_e64"
              return;
            }
            break;
          }
          break;
        case 'q':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "sad_pk_u16_u8_e64", 17) != 0)
            break;
          Mnemonic = "v_qsad_pk_u16_u8";	 // "v_qsad_pk_u16_u8_e64"
          return;
        case 'r':	 // 2 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "p_legacy_f32_e64", 16) != 0)
              break;
            Mnemonic = "v_rcp_legacy_f32";	 // "v_rcp_legacy_f32_e64"
            return;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "q_legacy_f32_e64", 16) != 0)
              break;
            Mnemonic = "v_rsq_legacy_f32";	 // "v_rsq_legacy_f32_e64"
            return;
          }
          break;
        case 't':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "rig_preop_f64_e64", 17) != 0)
            break;
          Mnemonic = "v_trig_preop_f64";	 // "v_trig_preop_f64_e64"
          return;
        }
        break;
      case 21:	 // 5 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "vt_", 3) != 0)
            break;
          switch (Mnemonic[6]) {
          default: break;
          case 'f':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+7, "lr_i32_f32_e64", 14) != 0)
              break;
            Mnemonic = "v_cvt_flr_i32_f32";	 // "v_cvt_flr_i32_f32_e64"
            return;
          case 'r':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+7, "pi_i32_f32_e64", 14) != 0)
              break;
            Mnemonic = "v_cvt_rpi_i32_f32";	 // "v_cvt_rpi_i32_f32_e64"
            return;
          }
          break;
        case 'i':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "nterp_p1l", 9) != 0)
            break;
          switch (Mnemonic[12]) {
          default: break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+13, "_f16_e64", 8) != 0)
              break;
            Mnemonic = "v_interp_p1ll_f16";	 // "v_interp_p1ll_f16_e64"
            return;
          case 'v':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+13, "_f16_e64", 8) != 0)
              break;
            Mnemonic = "v_interp_p1lv_f16";	 // "v_interp_p1lv_f16_e64"
            return;
          }
          break;
        case 'm':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "qsad_pk_u16_u8_e64", 18) != 0)
            break;
          Mnemonic = "v_mqsad_pk_u16_u8";	 // "v_mqsad_pk_u16_u8_e64"
          return;
        }
        break;
      case 22:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_mbcnt_", 8) != 0)
          break;
        switch (Mnemonic[8]) {
        default: break;
        case 'h':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+9, "i_u32_b32_e64", 13) != 0)
            break;
          Mnemonic = "v_mbcnt_hi_u32_b32";	 // "v_mbcnt_hi_u32_b32_e64"
          return;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+9, "o_u32_b32_e64", 13) != 0)
            break;
          Mnemonic = "v_mbcnt_lo_u32_b32";	 // "v_mbcnt_lo_u32_b32_e64"
          return;
        }
        break;
      case 23:	 // 4 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "vt_pkrtz_f16_f32_e64", 20) != 0)
            break;
          Mnemonic = "v_cvt_pkrtz_f16_f32";	 // "v_cvt_pkrtz_f16_f32_e64"
          return;
        case 'f':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "rexp_exp_i", 10) != 0)
            break;
          switch (Mnemonic[13]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+14, "6_f16_e64", 9) != 0)
              break;
            Mnemonic = "v_frexp_exp_i16_f16";	 // "v_frexp_exp_i16_f16_e64"
            return;
          case '3':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+14, "2_f", 3) != 0)
              break;
            switch (Mnemonic[17]) {
            default: break;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+18, "2_e64", 5) != 0)
                break;
              Mnemonic = "v_frexp_exp_i32_f32";	 // "v_frexp_exp_i32_f32_e64"
              return;
            case '6':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+18, "4_e64", 5) != 0)
                break;
              Mnemonic = "v_frexp_exp_i32_f64";	 // "v_frexp_exp_i32_f64_e64"
              return;
            }
            break;
          }
          break;
        }
        break;
      case 24:	 // 3 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_cvt_pk", 8) != 0)
          break;
        switch (Mnemonic[8]) {
        default: break;
        case 'a':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+9, "ccum_u8_f32_e64", 15) != 0)
            break;
          Mnemonic = "v_cvt_pkaccum_u8_f32";	 // "v_cvt_pkaccum_u8_f32_e64"
          return;
        case 'n':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+9, "orm_", 4) != 0)
            break;
          switch (Mnemonic[13]) {
          default: break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+14, "16_f32_e64", 10) != 0)
              break;
            Mnemonic = "v_cvt_pknorm_i16_f32";	 // "v_cvt_pknorm_i16_f32_e64"
            return;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+14, "16_f32_e64", 10) != 0)
              break;
            Mnemonic = "v_cvt_pknorm_u16_f32";	 // "v_cvt_pknorm_u16_f32_e64"
            return;
          }
          break;
        }
        break;
      }
    break;
    case 2:
      switch (Mnemonic.size()) {
      default: break;
      case 10:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_nop_sdwa", 10) != 0)
          break;
        Mnemonic = "v_nop";	 // "v_nop_sdwa"
        return;
      case 13:	 // 1 string to match.
        if (memcmp(Mnemonic.data()+0, "v_or_b32_sdwa", 13) != 0)
          break;
        Mnemonic = "v_or_b32";	 // "v_or_b32_sdwa"
        return;
      case 14:	 // 41 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 5 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 4 strings to match.
            if (memcmp(Mnemonic.data()+4, "d_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_add_f16";	 // "v_add_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_add_f32";	 // "v_add_f32_sdwa"
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_sdwa", 7) != 0)
                break;
              Mnemonic = "v_add_i32";	 // "v_add_i32_sdwa"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "16_sdwa", 7) != 0)
                break;
              Mnemonic = "v_add_u16";	 // "v_add_u16_sdwa"
              return;
            }
            break;
          case 'n':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "d_b32_sdwa", 10) != 0)
              break;
            Mnemonic = "v_and_b32";	 // "v_and_b32_sdwa"
            return;
          }
          break;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "fm_b32_sdwa", 11) != 0)
            break;
          Mnemonic = "v_bfm_b32";	 // "v_bfm_b32_sdwa"
          return;
        case 'c':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "os_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_cos_f16";	 // "v_cos_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_cos_f32";	 // "v_cos_f32_sdwa"
            return;
          }
          break;
        case 'e':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "xp_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_exp_f16";	 // "v_exp_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_exp_f32";	 // "v_exp_f32_sdwa"
            return;
          }
          break;
        case 'l':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "og_f", 4) != 0)
            break;
          switch (Mnemonic[7]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_log_f16";	 // "v_log_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_log_f32";	 // "v_log_f32_sdwa"
            return;
          }
          break;
        case 'm':	 // 17 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 8 strings to match.
            switch (Mnemonic[4]) {
            default: break;
            case 'c':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+5, "_f", 2) != 0)
                break;
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_mac_f16";	 // "v_mac_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_mac_f32";	 // "v_mac_f32_sdwa"
                return;
              }
              break;
            case 'x':	 // 6 strings to match.
              if (Mnemonic[5] != '_')
                break;
              switch (Mnemonic[6]) {
              default: break;
              case 'f':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_max_f16";	 // "v_max_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_max_f32";	 // "v_max_f32_sdwa"
                  return;
                }
                break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_max_i16";	 // "v_max_i16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_max_i32";	 // "v_max_i32_sdwa"
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_max_u16";	 // "v_max_u16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_max_u32";	 // "v_max_u32_sdwa"
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 'i':	 // 6 strings to match.
            if (memcmp(Mnemonic.data()+4, "n_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_min_f16";	 // "v_min_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_min_f32";	 // "v_min_f32_sdwa"
                return;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_min_i16";	 // "v_min_i16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_min_i32";	 // "v_min_i32_sdwa"
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_min_u16";	 // "v_min_u16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_min_u32";	 // "v_min_u32_sdwa"
                return;
              }
              break;
            }
            break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "v_b32_sdwa", 10) != 0)
              break;
            Mnemonic = "v_mov_b32";	 // "v_mov_b32_sdwa"
            return;
          case 'u':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_mul_f16";	 // "v_mul_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_mul_f32";	 // "v_mul_f32_sdwa"
              return;
            }
            break;
          }
          break;
        case 'n':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ot_b32_sdwa", 11) != 0)
            break;
          Mnemonic = "v_not_b32";	 // "v_not_b32_sdwa"
          return;
        case 'r':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "p_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_rcp_f16";	 // "v_rcp_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_rcp_f32";	 // "v_rcp_f32_sdwa"
              return;
            }
            break;
          case 's':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "q_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_rsq_f16";	 // "v_rsq_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_rsq_f32";	 // "v_rsq_f32_sdwa"
              return;
            }
            break;
          }
          break;
        case 's':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'i':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "n_f", 3) != 0)
              break;
            switch (Mnemonic[7]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_sin_f16";	 // "v_sin_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_sin_f32";	 // "v_sin_f32_sdwa"
              return;
            }
            break;
          case 'u':	 // 4 strings to match.
            if (memcmp(Mnemonic.data()+4, "b_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_sub_f16";	 // "v_sub_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_sub_f32";	 // "v_sub_f32_sdwa"
                return;
              }
              break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_sdwa", 7) != 0)
                break;
              Mnemonic = "v_sub_i32";	 // "v_sub_i32_sdwa"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "16_sdwa", 7) != 0)
                break;
              Mnemonic = "v_sub_u16";	 // "v_sub_u16_sdwa"
              return;
            }
            break;
          }
          break;
        case 'x':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "or_b32_sdwa", 11) != 0)
            break;
          Mnemonic = "v_xor_b32";	 // "v_xor_b32_sdwa"
          return;
        }
        break;
      case 15:	 // 12 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 2 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'd':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "dc_u32_sdwa", 11) != 0)
              break;
            Mnemonic = "v_addc_u32";	 // "v_addc_u32_sdwa"
            return;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "hr_i32_sdwa", 11) != 0)
              break;
            Mnemonic = "v_ashr_i32";	 // "v_ashr_i32_sdwa"
            return;
          }
          break;
        case 'c':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "eil_f", 5) != 0)
            break;
          switch (Mnemonic[8]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_ceil_f16";	 // "v_ceil_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+9, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_ceil_f32";	 // "v_ceil_f32_sdwa"
            return;
          }
          break;
        case 'f':	 // 3 strings to match.
          if (memcmp(Mnemonic.data()+3, "fb", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'h':	 // 2 strings to match.
            if (Mnemonic[6] != '_')
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_sdwa", 7) != 0)
                break;
              Mnemonic = "v_ffbh_i32";	 // "v_ffbh_i32_sdwa"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "32_sdwa", 7) != 0)
                break;
              Mnemonic = "v_ffbh_u32";	 // "v_ffbh_u32_sdwa"
              return;
            }
            break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "_b32_sdwa", 9) != 0)
              break;
            Mnemonic = "v_ffbl_b32";	 // "v_ffbl_b32_sdwa"
            return;
          }
          break;
        case 'l':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "sh", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'l':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "_b32_sdwa", 9) != 0)
              break;
            Mnemonic = "v_lshl_b32";	 // "v_lshl_b32_sdwa"
            return;
          case 'r':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+6, "_b32_sdwa", 9) != 0)
              break;
            Mnemonic = "v_lshr_b32";	 // "v_lshr_b32_sdwa"
            return;
          }
          break;
        case 's':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'q':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "rt_f", 4) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_sqrt_f16";	 // "v_sqrt_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_sqrt_f32";	 // "v_sqrt_f32_sdwa"
              return;
            }
            break;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "bb_u32_sdwa", 11) != 0)
              break;
            Mnemonic = "v_subb_u32";	 // "v_subb_u32_sdwa"
            return;
          }
          break;
        }
        break;
      case 16:	 // 25 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "frev_b32_sdwa", 13) != 0)
            break;
          Mnemonic = "v_bfrev_b32";	 // "v_bfrev_b32_sdwa"
          return;
        case 'c':	 // 14 strings to match.
          if (memcmp(Mnemonic.data()+3, "mp_", 3) != 0)
            break;
          switch (Mnemonic[6]) {
          default: break;
          case 'f':	 // 6 strings to match.
            if (Mnemonic[7] != '_')
              break;
            switch (Mnemonic[8]) {
            default: break;
            case 'f':	 // 2 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_f_f16";	 // "v_cmp_f_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_f_f32";	 // "v_cmp_f_f32_sdwa"
                return;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_f_i16";	 // "v_cmp_f_i16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_f_i32";	 // "v_cmp_f_i32_sdwa"
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_f_u16";	 // "v_cmp_f_u16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_f_u32";	 // "v_cmp_f_u32_sdwa"
                return;
              }
              break;
            }
            break;
          case 'o':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+7, "_f", 2) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmp_o_f16";	 // "v_cmp_o_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmp_o_f32";	 // "v_cmp_o_f32_sdwa"
              return;
            }
            break;
          case 't':	 // 4 strings to match.
            if (Mnemonic[7] != '_')
              break;
            switch (Mnemonic[8]) {
            default: break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_t_i16";	 // "v_cmp_t_i16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_t_i32";	 // "v_cmp_t_i32_sdwa"
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_t_u16";	 // "v_cmp_t_u16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmp_t_u32";	 // "v_cmp_t_u32_sdwa"
                return;
              }
              break;
            }
            break;
          case 'u':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+7, "_f", 2) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmp_u_f16";	 // "v_cmp_u_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmp_u_f32";	 // "v_cmp_u_f32_sdwa"
              return;
            }
            break;
          }
          break;
        case 'f':	 // 4 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'l':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "oor_f", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_floor_f16";	 // "v_floor_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_floor_f32";	 // "v_floor_f32_sdwa"
              return;
            }
            break;
          case 'r':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "act_f", 5) != 0)
              break;
            switch (Mnemonic[9]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_fract_f16";	 // "v_fract_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_fract_f32";	 // "v_fract_f32_sdwa"
              return;
            }
            break;
          }
          break;
        case 'l':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "dexp_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_ldexp_f16";	 // "v_ldexp_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_ldexp_f32";	 // "v_ldexp_f32_sdwa"
            return;
          }
          break;
        case 'r':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "ndne_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_rndne_f16";	 // "v_rndne_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_rndne_f32";	 // "v_rndne_f32_sdwa"
            return;
          }
          break;
        case 't':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "runc_f", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_trunc_f16";	 // "v_trunc_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_trunc_f32";	 // "v_trunc_f32_sdwa"
            return;
          }
          break;
        }
        break;
      case 17:	 // 58 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 53 strings to match.
          if (memcmp(Mnemonic.data()+3, "mp", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case '_':	 // 36 strings to match.
            switch (Mnemonic[6]) {
            default: break;
            case 'e':	 // 6 strings to match.
              if (memcmp(Mnemonic.data()+7, "q_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'f':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_eq_f16";	 // "v_cmp_eq_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_eq_f32";	 // "v_cmp_eq_f32_sdwa"
                  return;
                }
                break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_eq_i16";	 // "v_cmp_eq_i16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_eq_i32";	 // "v_cmp_eq_i32_sdwa"
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_eq_u16";	 // "v_cmp_eq_u16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_eq_u32";	 // "v_cmp_eq_u32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 'g':	 // 12 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case 'e':	 // 6 strings to match.
                if (Mnemonic[8] != '_')
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_ge_f16";	 // "v_cmp_ge_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_ge_f32";	 // "v_cmp_ge_f32_sdwa"
                    return;
                  }
                  break;
                case 'i':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_ge_i16";	 // "v_cmp_ge_i16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_ge_i32";	 // "v_cmp_ge_i32_sdwa"
                    return;
                  }
                  break;
                case 'u':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_ge_u16";	 // "v_cmp_ge_u16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_ge_u32";	 // "v_cmp_ge_u32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              case 't':	 // 6 strings to match.
                if (Mnemonic[8] != '_')
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_gt_f16";	 // "v_cmp_gt_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_gt_f32";	 // "v_cmp_gt_f32_sdwa"
                    return;
                  }
                  break;
                case 'i':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_gt_i16";	 // "v_cmp_gt_i16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_gt_i32";	 // "v_cmp_gt_i32_sdwa"
                    return;
                  }
                  break;
                case 'u':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_gt_u16";	 // "v_cmp_gt_u16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_gt_u32";	 // "v_cmp_gt_u32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            case 'l':	 // 14 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case 'e':	 // 6 strings to match.
                if (Mnemonic[8] != '_')
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_le_f16";	 // "v_cmp_le_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_le_f32";	 // "v_cmp_le_f32_sdwa"
                    return;
                  }
                  break;
                case 'i':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_le_i16";	 // "v_cmp_le_i16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_le_i32";	 // "v_cmp_le_i32_sdwa"
                    return;
                  }
                  break;
                case 'u':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_le_u16";	 // "v_cmp_le_u16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_le_u32";	 // "v_cmp_le_u32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              case 'g':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_lg_f16";	 // "v_cmp_lg_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_lg_f32";	 // "v_cmp_lg_f32_sdwa"
                  return;
                }
                break;
              case 't':	 // 6 strings to match.
                if (Mnemonic[8] != '_')
                  break;
                switch (Mnemonic[9]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_lt_f16";	 // "v_cmp_lt_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_lt_f32";	 // "v_cmp_lt_f32_sdwa"
                    return;
                  }
                  break;
                case 'i':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_lt_i16";	 // "v_cmp_lt_i16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_lt_i32";	 // "v_cmp_lt_i32_sdwa"
                    return;
                  }
                  break;
                case 'u':	 // 2 strings to match.
                  switch (Mnemonic[10]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_lt_u16";	 // "v_cmp_lt_u16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_lt_u32";	 // "v_cmp_lt_u32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            case 'n':	 // 4 strings to match.
              if (memcmp(Mnemonic.data()+7, "e_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_ne_i16";	 // "v_cmp_ne_i16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_ne_i32";	 // "v_cmp_ne_i32_sdwa"
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_ne_u16";	 // "v_cmp_ne_u16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_ne_u32";	 // "v_cmp_ne_u32_sdwa"
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 's':	 // 3 strings to match.
            if (Mnemonic[6] != '_')
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'f':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "_f32_sdwa", 9) != 0)
                break;
              Mnemonic = "v_cmps_f_f32";	 // "v_cmps_f_f32_sdwa"
              return;
            case 'o':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "_f32_sdwa", 9) != 0)
                break;
              Mnemonic = "v_cmps_o_f32";	 // "v_cmps_o_f32_sdwa"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+8, "_f32_sdwa", 9) != 0)
                break;
              Mnemonic = "v_cmps_u_f32";	 // "v_cmps_u_f32_sdwa"
              return;
            }
            break;
          case 'x':	 // 14 strings to match.
            if (Mnemonic[6] != '_')
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'f':	 // 6 strings to match.
              if (Mnemonic[8] != '_')
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'f':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_f_f16";	 // "v_cmpx_f_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_f_f32";	 // "v_cmpx_f_f32_sdwa"
                  return;
                }
                break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_f_i16";	 // "v_cmpx_f_i16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_f_i32";	 // "v_cmpx_f_i32_sdwa"
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_f_u16";	 // "v_cmpx_f_u16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_f_u32";	 // "v_cmpx_f_u32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 'o':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                break;
              switch (Mnemonic[10]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmpx_o_f16";	 // "v_cmpx_o_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmpx_o_f32";	 // "v_cmpx_o_f32_sdwa"
                return;
              }
              break;
            case 't':	 // 4 strings to match.
              if (Mnemonic[8] != '_')
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_t_i16";	 // "v_cmpx_t_i16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_t_i32";	 // "v_cmpx_t_i32_sdwa"
                  return;
                }
                break;
              case 'u':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_t_u16";	 // "v_cmpx_t_u16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_t_u32";	 // "v_cmpx_t_u32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 'u':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+8, "_f", 2) != 0)
                break;
              switch (Mnemonic[10]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmpx_u_f16";	 // "v_cmpx_u_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmpx_u_f32";	 // "v_cmpx_u_f32_sdwa"
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'm':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ul_lo_u16_sdwa", 14) != 0)
            break;
          Mnemonic = "v_mul_lo_u16";	 // "v_mul_lo_u16_sdwa"
          return;
        case 's':	 // 4 strings to match.
          if (memcmp(Mnemonic.data()+3, "ubrev_", 6) != 0)
            break;
          switch (Mnemonic[9]) {
          default: break;
          case 'f':	 // 2 strings to match.
            switch (Mnemonic[10]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_subrev_f16";	 // "v_subrev_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+11, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_subrev_f32";	 // "v_subrev_f32_sdwa"
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "32_sdwa", 7) != 0)
              break;
            Mnemonic = "v_subrev_i32";	 // "v_subrev_i32_sdwa"
            return;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+10, "16_sdwa", 7) != 0)
              break;
            Mnemonic = "v_subrev_u16";	 // "v_subrev_u16_sdwa"
            return;
          }
          break;
        }
        break;
      case 18:	 // 79 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'a':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "shrrev_i", 8) != 0)
            break;
          switch (Mnemonic[11]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_ashrrev_i16";	 // "v_ashrrev_i16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_ashrrev_i32";	 // "v_ashrrev_i32_sdwa"
            return;
          }
          break;
        case 'c':	 // 69 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'm':	 // 59 strings to match.
            if (Mnemonic[4] != 'p')
              break;
            switch (Mnemonic[5]) {
            default: break;
            case '_':	 // 14 strings to match.
              switch (Mnemonic[6]) {
              default: break;
              case 'n':	 // 12 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case 'e':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+8, "q_f", 3) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_neq_f16";	 // "v_cmp_neq_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmp_neq_f32";	 // "v_cmp_neq_f32_sdwa"
                    return;
                  }
                  break;
                case 'g':	 // 4 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nge_f16";	 // "v_cmp_nge_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nge_f32";	 // "v_cmp_nge_f32_sdwa"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_ngt_f16";	 // "v_cmp_ngt_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_ngt_f32";	 // "v_cmp_ngt_f32_sdwa"
                      return;
                    }
                    break;
                  }
                  break;
                case 'l':	 // 6 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nle_f16";	 // "v_cmp_nle_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nle_f32";	 // "v_cmp_nle_f32_sdwa"
                      return;
                    }
                    break;
                  case 'g':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nlg_f16";	 // "v_cmp_nlg_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nlg_f32";	 // "v_cmp_nlg_f32_sdwa"
                      return;
                    }
                    break;
                  case 't':	 // 2 strings to match.
                    if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                      break;
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nlt_f16";	 // "v_cmp_nlt_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmp_nlt_f32";	 // "v_cmp_nlt_f32_sdwa"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 't':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+7, "ru_f", 4) != 0)
                  break;
                switch (Mnemonic[11]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_tru_f16";	 // "v_cmp_tru_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmp_tru_f32";	 // "v_cmp_tru_f32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 's':	 // 9 strings to match.
              switch (Mnemonic[6]) {
              default: break;
              case '_':	 // 6 strings to match.
                switch (Mnemonic[7]) {
                default: break;
                case 'e':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+8, "q_f32_sdwa", 10) != 0)
                    break;
                  Mnemonic = "v_cmps_eq_f32";	 // "v_cmps_eq_f32_sdwa"
                  return;
                case 'g':	 // 2 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_ge_f32";	 // "v_cmps_ge_f32_sdwa"
                    return;
                  case 't':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_gt_f32";	 // "v_cmps_gt_f32_sdwa"
                    return;
                  }
                  break;
                case 'l':	 // 3 strings to match.
                  switch (Mnemonic[8]) {
                  default: break;
                  case 'e':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_le_f32";	 // "v_cmps_le_f32_sdwa"
                    return;
                  case 'g':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_lg_f32";	 // "v_cmps_lg_f32_sdwa"
                    return;
                  case 't':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_lt_f32";	 // "v_cmps_lt_f32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              case 'x':	 // 3 strings to match.
                if (Mnemonic[7] != '_')
                  break;
                switch (Mnemonic[8]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_f_f32";	 // "v_cmpsx_f_f32_sdwa"
                  return;
                case 'o':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_o_f32";	 // "v_cmpsx_o_f32_sdwa"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+9, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_u_f32";	 // "v_cmpsx_u_f32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 'x':	 // 36 strings to match.
              if (Mnemonic[6] != '_')
                break;
              switch (Mnemonic[7]) {
              default: break;
              case 'e':	 // 6 strings to match.
                if (memcmp(Mnemonic.data()+8, "q_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 2 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_f16";	 // "v_cmpx_eq_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_f32";	 // "v_cmpx_eq_f32_sdwa"
                    return;
                  }
                  break;
                case 'i':	 // 2 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_i16";	 // "v_cmpx_eq_i16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_i32";	 // "v_cmpx_eq_i32_sdwa"
                    return;
                  }
                  break;
                case 'u':	 // 2 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_u16";	 // "v_cmpx_eq_u16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_eq_u32";	 // "v_cmpx_eq_u32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              case 'g':	 // 12 strings to match.
                switch (Mnemonic[8]) {
                default: break;
                case 'e':	 // 6 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_f16";	 // "v_cmpx_ge_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_f32";	 // "v_cmpx_ge_f32_sdwa"
                      return;
                    }
                    break;
                  case 'i':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_i16";	 // "v_cmpx_ge_i16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_i32";	 // "v_cmpx_ge_i32_sdwa"
                      return;
                    }
                    break;
                  case 'u':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_u16";	 // "v_cmpx_ge_u16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_ge_u32";	 // "v_cmpx_ge_u32_sdwa"
                      return;
                    }
                    break;
                  }
                  break;
                case 't':	 // 6 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_f16";	 // "v_cmpx_gt_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_f32";	 // "v_cmpx_gt_f32_sdwa"
                      return;
                    }
                    break;
                  case 'i':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_i16";	 // "v_cmpx_gt_i16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_i32";	 // "v_cmpx_gt_i32_sdwa"
                      return;
                    }
                    break;
                  case 'u':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_u16";	 // "v_cmpx_gt_u16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_gt_u32";	 // "v_cmpx_gt_u32_sdwa"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 'l':	 // 14 strings to match.
                switch (Mnemonic[8]) {
                default: break;
                case 'e':	 // 6 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_f16";	 // "v_cmpx_le_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_f32";	 // "v_cmpx_le_f32_sdwa"
                      return;
                    }
                    break;
                  case 'i':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_i16";	 // "v_cmpx_le_i16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_i32";	 // "v_cmpx_le_i32_sdwa"
                      return;
                    }
                    break;
                  case 'u':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_u16";	 // "v_cmpx_le_u16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_le_u32";	 // "v_cmpx_le_u32_sdwa"
                      return;
                    }
                    break;
                  }
                  break;
                case 'g':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+9, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_lg_f16";	 // "v_cmpx_lg_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_lg_f32";	 // "v_cmpx_lg_f32_sdwa"
                    return;
                  }
                  break;
                case 't':	 // 6 strings to match.
                  if (Mnemonic[9] != '_')
                    break;
                  switch (Mnemonic[10]) {
                  default: break;
                  case 'f':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_f16";	 // "v_cmpx_lt_f16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_f32";	 // "v_cmpx_lt_f32_sdwa"
                      return;
                    }
                    break;
                  case 'i':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_i16";	 // "v_cmpx_lt_i16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_i32";	 // "v_cmpx_lt_i32_sdwa"
                      return;
                    }
                    break;
                  case 'u':	 // 2 strings to match.
                    switch (Mnemonic[11]) {
                    default: break;
                    case '1':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_u16";	 // "v_cmpx_lt_u16_sdwa"
                      return;
                    case '3':	 // 1 string to match.
                      if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                        break;
                      Mnemonic = "v_cmpx_lt_u32";	 // "v_cmpx_lt_u32_sdwa"
                      return;
                    }
                    break;
                  }
                  break;
                }
                break;
              case 'n':	 // 4 strings to match.
                if (memcmp(Mnemonic.data()+8, "e_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'i':	 // 2 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_i16";	 // "v_cmpx_ne_i16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_i32";	 // "v_cmpx_ne_i32_sdwa"
                    return;
                  }
                  break;
                case 'u':	 // 2 strings to match.
                  switch (Mnemonic[11]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_u16";	 // "v_cmpx_ne_u16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_ne_u32";	 // "v_cmpx_ne_u32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            }
            break;
          case 'v':	 // 10 strings to match.
            if (memcmp(Mnemonic.data()+4, "t_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 6 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "6_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_sdwa", 7) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_f32";	 // "v_cvt_f16_f32_sdwa"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_sdwa", 7) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_i16";	 // "v_cvt_f16_i16_sdwa"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_sdwa", 7) != 0)
                    break;
                  Mnemonic = "v_cvt_f16_u16";	 // "v_cvt_f16_u16_sdwa"
                  return;
                }
                break;
              case '3':	 // 3 strings to match.
                if (memcmp(Mnemonic.data()+8, "2_", 2) != 0)
                  break;
                switch (Mnemonic[10]) {
                default: break;
                case 'f':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "16_sdwa", 7) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_f16";	 // "v_cvt_f32_f16_sdwa"
                  return;
                case 'i':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_sdwa", 7) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_i32";	 // "v_cvt_f32_i32_sdwa"
                  return;
                case 'u':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "32_sdwa", 7) != 0)
                    break;
                  Mnemonic = "v_cvt_f32_u32";	 // "v_cvt_f32_u32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 'i':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_f16_sdwa", 10) != 0)
                  break;
                Mnemonic = "v_cvt_i16_f16";	 // "v_cvt_i16_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_f32_sdwa", 10) != 0)
                  break;
                Mnemonic = "v_cvt_i32_f32";	 // "v_cvt_i32_f32_sdwa"
                return;
              }
              break;
            case 'u':	 // 2 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "6_f16_sdwa", 10) != 0)
                  break;
                Mnemonic = "v_cvt_u16_f16";	 // "v_cvt_u16_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "2_f32_sdwa", 10) != 0)
                  break;
                Mnemonic = "v_cvt_u32_f32";	 // "v_cvt_u32_f32_sdwa"
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'l':	 // 4 strings to match.
          if (memcmp(Mnemonic.data()+3, "sh", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 'l':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "rev_b", 5) != 0)
              break;
            switch (Mnemonic[11]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_lshlrev_b16";	 // "v_lshlrev_b16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_lshlrev_b32";	 // "v_lshlrev_b32_sdwa"
              return;
            }
            break;
          case 'r':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "rev_b", 5) != 0)
              break;
            switch (Mnemonic[11]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_lshrrev_b16";	 // "v_lshrrev_b16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+12, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_lshrrev_b32";	 // "v_lshrrev_b32_sdwa"
              return;
            }
            break;
          }
          break;
        case 'm':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'o':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "v_fed_b32_sdwa", 14) != 0)
              break;
            Mnemonic = "v_mov_fed_b32";	 // "v_mov_fed_b32_sdwa"
            return;
          case 'u':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_i24_sdwa", 11) != 0)
                break;
              Mnemonic = "v_mul_i32_i24";	 // "v_mul_i32_i24_sdwa"
              return;
            case 'u':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "32_u24_sdwa", 11) != 0)
                break;
              Mnemonic = "v_mul_u32_u24";	 // "v_mul_u32_u24_sdwa"
              return;
            }
            break;
          }
          break;
        case 's':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "ubbrev_u32_sdwa", 15) != 0)
            break;
          Mnemonic = "v_subbrev_u32";	 // "v_subbrev_u32_sdwa"
          return;
        }
        break;
      case 19:	 // 28 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'b':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "cnt_u32_b32_sdwa", 16) != 0)
            break;
          Mnemonic = "v_bcnt_u32_b32";	 // "v_bcnt_u32_b32_sdwa"
          return;
        case 'c':	 // 27 strings to match.
          if (memcmp(Mnemonic.data()+3, "mp", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case 's':	 // 13 strings to match.
            switch (Mnemonic[6]) {
            default: break;
            case '_':	 // 7 strings to match.
              switch (Mnemonic[7]) {
              default: break;
              case 'n':	 // 6 strings to match.
                switch (Mnemonic[8]) {
                default: break;
                case 'e':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+9, "q_f32_sdwa", 10) != 0)
                    break;
                  Mnemonic = "v_cmps_neq_f32";	 // "v_cmps_neq_f32_sdwa"
                  return;
                case 'g':	 // 2 strings to match.
                  switch (Mnemonic[9]) {
                  default: break;
                  case 'e':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_nge_f32";	 // "v_cmps_nge_f32_sdwa"
                    return;
                  case 't':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_ngt_f32";	 // "v_cmps_ngt_f32_sdwa"
                    return;
                  }
                  break;
                case 'l':	 // 3 strings to match.
                  switch (Mnemonic[9]) {
                  default: break;
                  case 'e':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_nle_f32";	 // "v_cmps_nle_f32_sdwa"
                    return;
                  case 'g':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_nlg_f32";	 // "v_cmps_nlg_f32_sdwa"
                    return;
                  case 't':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                      break;
                    Mnemonic = "v_cmps_nlt_f32";	 // "v_cmps_nlt_f32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              case 't':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+8, "ru_f32_sdwa", 11) != 0)
                  break;
                Mnemonic = "v_cmps_tru_f32";	 // "v_cmps_tru_f32_sdwa"
                return;
              }
              break;
            case 'x':	 // 6 strings to match.
              if (Mnemonic[7] != '_')
                break;
              switch (Mnemonic[8]) {
              default: break;
              case 'e':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+9, "q_f32_sdwa", 10) != 0)
                  break;
                Mnemonic = "v_cmpsx_eq_f32";	 // "v_cmpsx_eq_f32_sdwa"
                return;
              case 'g':	 // 2 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_ge_f32";	 // "v_cmpsx_ge_f32_sdwa"
                  return;
                case 't':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_gt_f32";	 // "v_cmpsx_gt_f32_sdwa"
                  return;
                }
                break;
              case 'l':	 // 3 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_le_f32";	 // "v_cmpsx_le_f32_sdwa"
                  return;
                case 'g':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_lg_f32";	 // "v_cmpsx_lg_f32_sdwa"
                  return;
                case 't':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+10, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_lt_f32";	 // "v_cmpsx_lt_f32_sdwa"
                  return;
                }
                break;
              }
              break;
            }
            break;
          case 'x':	 // 14 strings to match.
            if (Mnemonic[6] != '_')
              break;
            switch (Mnemonic[7]) {
            default: break;
            case 'n':	 // 12 strings to match.
              switch (Mnemonic[8]) {
              default: break;
              case 'e':	 // 2 strings to match.
                if (memcmp(Mnemonic.data()+9, "q_f", 3) != 0)
                  break;
                switch (Mnemonic[12]) {
                default: break;
                case '1':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "6_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_neq_f16";	 // "v_cmpx_neq_f16_sdwa"
                  return;
                case '3':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+13, "2_sdwa", 6) != 0)
                    break;
                  Mnemonic = "v_cmpx_neq_f32";	 // "v_cmpx_neq_f32_sdwa"
                  return;
                }
                break;
              case 'g':	 // 4 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_nge_f16";	 // "v_cmpx_nge_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_nge_f32";	 // "v_cmpx_nge_f32_sdwa"
                    return;
                  }
                  break;
                case 't':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_ngt_f16";	 // "v_cmpx_ngt_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_ngt_f32";	 // "v_cmpx_ngt_f32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              case 'l':	 // 6 strings to match.
                switch (Mnemonic[9]) {
                default: break;
                case 'e':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_nle_f16";	 // "v_cmpx_nle_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_nle_f32";	 // "v_cmpx_nle_f32_sdwa"
                    return;
                  }
                  break;
                case 'g':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlg_f16";	 // "v_cmpx_nlg_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlg_f32";	 // "v_cmpx_nlg_f32_sdwa"
                    return;
                  }
                  break;
                case 't':	 // 2 strings to match.
                  if (memcmp(Mnemonic.data()+10, "_f", 2) != 0)
                    break;
                  switch (Mnemonic[12]) {
                  default: break;
                  case '1':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "6_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlt_f16";	 // "v_cmpx_nlt_f16_sdwa"
                    return;
                  case '3':	 // 1 string to match.
                    if (memcmp(Mnemonic.data()+13, "2_sdwa", 6) != 0)
                      break;
                    Mnemonic = "v_cmpx_nlt_f32";	 // "v_cmpx_nlt_f32_sdwa"
                    return;
                  }
                  break;
                }
                break;
              }
              break;
            case 't':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+8, "ru_f", 4) != 0)
                break;
              switch (Mnemonic[12]) {
              default: break;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+13, "6_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmpx_tru_f16";	 // "v_cmpx_tru_f16_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+13, "2_sdwa", 6) != 0)
                  break;
                Mnemonic = "v_cmpx_tru_f32";	 // "v_cmpx_tru_f32_sdwa"
                return;
              }
              break;
            }
            break;
          }
          break;
        }
        break;
      case 20:	 // 13 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 9 strings to match.
          if (memcmp(Mnemonic.data()+3, "mp", 2) != 0)
            break;
          switch (Mnemonic[5]) {
          default: break;
          case '_':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+6, "class_f", 7) != 0)
              break;
            switch (Mnemonic[13]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmp_class_f16";	 // "v_cmp_class_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+14, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmp_class_f32";	 // "v_cmp_class_f32_sdwa"
              return;
            }
            break;
          case 's':	 // 7 strings to match.
            if (memcmp(Mnemonic.data()+6, "x_", 2) != 0)
              break;
            switch (Mnemonic[8]) {
            default: break;
            case 'n':	 // 6 strings to match.
              switch (Mnemonic[9]) {
              default: break;
              case 'e':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "q_f32_sdwa", 10) != 0)
                  break;
                Mnemonic = "v_cmpsx_neq_f32";	 // "v_cmpsx_neq_f32_sdwa"
                return;
              case 'g':	 // 2 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case 'e':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_nge_f32";	 // "v_cmpsx_nge_f32_sdwa"
                  return;
                case 't':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_ngt_f32";	 // "v_cmpsx_ngt_f32_sdwa"
                  return;
                }
                break;
              case 'l':	 // 3 strings to match.
                switch (Mnemonic[10]) {
                default: break;
                case 'e':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_nle_f32";	 // "v_cmpsx_nle_f32_sdwa"
                  return;
                case 'g':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_nlg_f32";	 // "v_cmpsx_nlg_f32_sdwa"
                  return;
                case 't':	 // 1 string to match.
                  if (memcmp(Mnemonic.data()+11, "_f32_sdwa", 9) != 0)
                    break;
                  Mnemonic = "v_cmpsx_nlt_f32";	 // "v_cmpsx_nlt_f32_sdwa"
                  return;
                }
                break;
              }
              break;
            case 't':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+9, "ru_f32_sdwa", 11) != 0)
                break;
              Mnemonic = "v_cmpsx_tru_f32";	 // "v_cmpsx_tru_f32_sdwa"
              return;
            }
            break;
          }
          break;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "og_clamp_f32_sdwa", 17) != 0)
            break;
          Mnemonic = "v_log_clamp_f32";	 // "v_log_clamp_f32_sdwa"
          return;
        case 'r':	 // 3 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "p_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'c':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "lamp_f32_sdwa", 13) != 0)
                break;
              Mnemonic = "v_rcp_clamp_f32";	 // "v_rcp_clamp_f32_sdwa"
              return;
            case 'i':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "flag_f32_sdwa", 13) != 0)
                break;
              Mnemonic = "v_rcp_iflag_f32";	 // "v_rcp_iflag_f32_sdwa"
              return;
            }
            break;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "q_clamp_f32_sdwa", 16) != 0)
              break;
            Mnemonic = "v_rsq_clamp_f32";	 // "v_rsq_clamp_f32_sdwa"
            return;
          }
          break;
        }
        break;
      case 21:	 // 21 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 9 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'm':	 // 2 strings to match.
            if (memcmp(Mnemonic.data()+4, "px_class_f", 10) != 0)
              break;
            switch (Mnemonic[14]) {
            default: break;
            case '1':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+15, "6_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmpx_class_f16";	 // "v_cmpx_class_f16_sdwa"
              return;
            case '3':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+15, "2_sdwa", 6) != 0)
                break;
              Mnemonic = "v_cmpx_class_f32";	 // "v_cmpx_class_f32_sdwa"
              return;
            }
            break;
          case 'v':	 // 7 strings to match.
            if (memcmp(Mnemonic.data()+4, "t_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'f':	 // 4 strings to match.
              if (memcmp(Mnemonic.data()+7, "32_ubyte", 8) != 0)
                break;
              switch (Mnemonic[15]) {
              default: break;
              case '0':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_sdwa", 5) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte0";	 // "v_cvt_f32_ubyte0_sdwa"
                return;
              case '1':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_sdwa", 5) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte1";	 // "v_cvt_f32_ubyte1_sdwa"
                return;
              case '2':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_sdwa", 5) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte2";	 // "v_cvt_f32_ubyte2_sdwa"
                return;
              case '3':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+16, "_sdwa", 5) != 0)
                  break;
                Mnemonic = "v_cvt_f32_ubyte3";	 // "v_cvt_f32_ubyte3_sdwa"
                return;
              }
              break;
            case 'o':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "ff_f32_i4_sdwa", 14) != 0)
                break;
              Mnemonic = "v_cvt_off_f32_i4";	 // "v_cvt_off_f32_i4_sdwa"
              return;
            case 'p':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "k_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "16_i32_sdwa", 11) != 0)
                  break;
                Mnemonic = "v_cvt_pk_i16_i32";	 // "v_cvt_pk_i16_i32_sdwa"
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "16_u32_sdwa", 11) != 0)
                  break;
                Mnemonic = "v_cvt_pk_u16_u32";	 // "v_cvt_pk_u16_u32_sdwa"
                return;
              }
              break;
            }
            break;
          }
          break;
        case 'e':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "xp_legacy_f32_sdwa", 18) != 0)
            break;
          Mnemonic = "v_exp_legacy_f32";	 // "v_exp_legacy_f32_sdwa"
          return;
        case 'f':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "rexp_mant_f", 11) != 0)
            break;
          switch (Mnemonic[14]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "6_sdwa", 6) != 0)
              break;
            Mnemonic = "v_frexp_mant_f16";	 // "v_frexp_mant_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+15, "2_sdwa", 6) != 0)
              break;
            Mnemonic = "v_frexp_mant_f32";	 // "v_frexp_mant_f32_sdwa"
            return;
          }
          break;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "og_legacy_f32_sdwa", 18) != 0)
            break;
          Mnemonic = "v_log_legacy_f32";	 // "v_log_legacy_f32_sdwa"
          return;
        case 'm':	 // 6 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'a':	 // 2 strings to match.
            switch (Mnemonic[4]) {
            default: break;
            case 'c':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_sdwa", 16) != 0)
                break;
              Mnemonic = "v_mac_legacy_f32";	 // "v_mac_legacy_f32_sdwa"
              return;
            case 'x':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+5, "_legacy_f32_sdwa", 16) != 0)
                break;
              Mnemonic = "v_max_legacy_f32";	 // "v_max_legacy_f32_sdwa"
              return;
            }
            break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "n_legacy_f32_sdwa", 17) != 0)
              break;
            Mnemonic = "v_min_legacy_f32";	 // "v_min_legacy_f32_sdwa"
            return;
          case 'u':	 // 3 strings to match.
            if (memcmp(Mnemonic.data()+4, "l_", 2) != 0)
              break;
            switch (Mnemonic[6]) {
            default: break;
            case 'h':	 // 2 strings to match.
              if (memcmp(Mnemonic.data()+7, "i_", 2) != 0)
                break;
              switch (Mnemonic[9]) {
              default: break;
              case 'i':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_i24_sdwa", 11) != 0)
                  break;
                Mnemonic = "v_mul_hi_i32_i24";	 // "v_mul_hi_i32_i24_sdwa"
                return;
              case 'u':	 // 1 string to match.
                if (memcmp(Mnemonic.data()+10, "32_u24_sdwa", 11) != 0)
                  break;
                Mnemonic = "v_mul_hi_u32_u24";	 // "v_mul_hi_u32_u24_sdwa"
                return;
              }
              break;
            case 'l':	 // 1 string to match.
              if (memcmp(Mnemonic.data()+7, "egacy_f32_sdwa", 14) != 0)
                break;
              Mnemonic = "v_mul_legacy_f32";	 // "v_mul_legacy_f32_sdwa"
              return;
            }
            break;
          }
          break;
        case 'r':	 // 2 strings to match.
          switch (Mnemonic[3]) {
          default: break;
          case 'c':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "p_legacy_f32_sdwa", 17) != 0)
              break;
            Mnemonic = "v_rcp_legacy_f32";	 // "v_rcp_legacy_f32_sdwa"
            return;
          case 's':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+4, "q_legacy_f32_sdwa", 17) != 0)
              break;
            Mnemonic = "v_rsq_legacy_f32";	 // "v_rsq_legacy_f32_sdwa"
            return;
          }
          break;
        }
        break;
      case 22:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_cvt_", 6) != 0)
          break;
        switch (Mnemonic[6]) {
        default: break;
        case 'f':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+7, "lr_i32_f32_sdwa", 15) != 0)
            break;
          Mnemonic = "v_cvt_flr_i32_f32";	 // "v_cvt_flr_i32_f32_sdwa"
          return;
        case 'r':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+7, "pi_i32_f32_sdwa", 15) != 0)
            break;
          Mnemonic = "v_cvt_rpi_i32_f32";	 // "v_cvt_rpi_i32_f32_sdwa"
          return;
        }
        break;
      case 23:	 // 2 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_mbcnt_", 8) != 0)
          break;
        switch (Mnemonic[8]) {
        default: break;
        case 'h':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+9, "i_u32_b32_sdwa", 14) != 0)
            break;
          Mnemonic = "v_mbcnt_hi_u32_b32";	 // "v_mbcnt_hi_u32_b32_sdwa"
          return;
        case 'l':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+9, "o_u32_b32_sdwa", 14) != 0)
            break;
          Mnemonic = "v_mbcnt_lo_u32_b32";	 // "v_mbcnt_lo_u32_b32_sdwa"
          return;
        }
        break;
      case 24:	 // 3 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
          break;
        switch (Mnemonic[2]) {
        default: break;
        case 'c':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+3, "vt_pkrtz_f16_f32_sdwa", 21) != 0)
            break;
          Mnemonic = "v_cvt_pkrtz_f16_f32";	 // "v_cvt_pkrtz_f16_f32_sdwa"
          return;
        case 'f':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+3, "rexp_exp_i", 10) != 0)
            break;
          switch (Mnemonic[13]) {
          default: break;
          case '1':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+14, "6_f16_sdwa", 10) != 0)
              break;
            Mnemonic = "v_frexp_exp_i16_f16";	 // "v_frexp_exp_i16_f16_sdwa"
            return;
          case '3':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+14, "2_f32_sdwa", 10) != 0)
              break;
            Mnemonic = "v_frexp_exp_i32_f32";	 // "v_frexp_exp_i32_f32_sdwa"
            return;
          }
          break;
        }
        break;
      case 25:	 // 3 strings to match.
        if (memcmp(Mnemonic.data()+0, "v_cvt_pk", 8) != 0)
          break;
        switch (Mnemonic[8]) {
        default: break;
        case 'a':	 // 1 string to match.
          if (memcmp(Mnemonic.data()+9, "ccum_u8_f32_sdwa", 16) != 0)
            break;
          Mnemonic = "v_cvt_pkaccum_u8_f32";	 // "v_cvt_pkaccum_u8_f32_sdwa"
          return;
        case 'n':	 // 2 strings to match.
          if (memcmp(Mnemonic.data()+9, "orm_", 4) != 0)
            break;
          switch (Mnemonic[13]) {
          default: break;
          case 'i':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+14, "16_f32_sdwa", 11) != 0)
              break;
            Mnemonic = "v_cvt_pknorm_i16_f32";	 // "v_cvt_pknorm_i16_f32_sdwa"
            return;
          case 'u':	 // 1 string to match.
            if (memcmp(Mnemonic.data()+14, "16_f32_sdwa", 11) != 0)
              break;
            Mnemonic = "v_cvt_pknorm_u16_f32";	 // "v_cvt_pknorm_u16_f32_sdwa"
            return;
          }
          break;
        }
        break;
      }
    break;
    case 3:
    break;
  }
  switch (Mnemonic.size()) {
  default: break;
  case 9:	 // 2 strings to match.
    if (memcmp(Mnemonic.data()+0, "v_", 2) != 0)
      break;
    switch (Mnemonic[2]) {
    default: break;
    case 'a':	 // 1 string to match.
      if (memcmp(Mnemonic.data()+3, "dd_u32", 6) != 0)
        break;
      if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_add_u32"
        Mnemonic = "v_add_i32";
      return;
    case 's':	 // 1 string to match.
      if (memcmp(Mnemonic.data()+3, "ub_u32", 6) != 0)
        break;
      if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_sub_u32"
        Mnemonic = "v_sub_i32";
      return;
    }
    break;
  case 12:	 // 1 string to match.
    if (memcmp(Mnemonic.data()+0, "v_subrev_u32", 12) != 0)
      break;
    if ((Features & Feature_isGCN) == Feature_isGCN)	 // "v_subrev_u32"
      Mnemonic = "v_subrev_i32";
    return;
  }
}

namespace {
enum OperatorConversionKind {
  CVT_Done,
  CVT_Reg,
  CVT_Tied,
  CVT_95_addImmOperands,
  CVT_95_Reg,
  CVT_imm_95_0,
  CVT_cvtMubufAtomic,
  CVT_cvtMubufAtomicReturn,
  CVT_cvtMubuf,
  CVT_cvtDS,
  CVT_cvtDSOffset01,
  CVT_cvtExp,
  CVT_95_addImmOperands_95_defaultSLC,
  CVT_95_addImmOperands_95_defaultTFE,
  CVT_95_addImmOperands_95_defaultGLC,
  CVT_cvtMIMGAtomic,
  CVT_95_addImmOperands_95_defaultDMask,
  CVT_95_addImmOperands_95_defaultUNorm,
  CVT_95_addImmOperands_95_defaultR128,
  CVT_95_addImmOperands_95_defaultLWE,
  CVT_95_addImmOperands_95_defaultDA,
  CVT_cvtMIMG,
  CVT_95_addRegOrImmOperands,
  CVT_95_addSoppBrTargetOperands,
  CVT_95_addImmOperands_95_defaultSMRDOffset8,
  CVT_95_addImmOperands_95_defaultSMRDOffset20,
  CVT_95_addImmOperands_95_defaultSMRDLiteralOffset,
  CVT_cvtVOP3_95_2_95_mod,
  CVT_cvtDPP,
  CVT_cvtSdwaVOP2,
  CVT_cvtVOP3,
  CVT_95_addImmOperands_95_defaultRowMask,
  CVT_95_addImmOperands_95_defaultBankMask,
  CVT_95_addImmOperands_95_defaultBoundCtrl,
  CVT_cvtSdwaVOP1,
  CVT_cvtSdwaVOPC,
  CVT_95_addKImmFP16Operands,
  CVT_95_addKImmFP32Operands,
  CVT_NUM_CONVERTERS
};

enum InstructionConversionKind {
  Convert_NoOperands,
  Convert__Imm1_1,
  Convert__Imm1_1__Imm1_3,
  Convert__Reg1_2__Imm1_0,
  Convert__Reg1_4__imm_95_0__Imm1_0__Reg1_1__Reg1_2,
  Convert__Reg1_0,
  Convert__Imm1_2__Imm1_0,
  ConvertCustom_cvtMubufAtomic,
  ConvertCustom_cvtMubufAtomicReturn,
  ConvertCustom_cvtMubuf,
  ConvertCustom_cvtDS,
  ConvertCustom_cvtDSOffset01,
  ConvertCustom_cvtExp,
  Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3,
  Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5,
  Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4,
  ConvertCustom_cvtMIMGAtomic,
  Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11,
  ConvertCustom_cvtMIMG,
  Convert__Reg1_0__SSrcB321_1,
  Convert__Reg1_0__SSrcB321_1__SSrcB321_2,
  Convert__Reg1_0__Tie0__Imm1_1,
  Convert__Reg1_0__SSrcB641_1__SSrcB641_2,
  Convert__Reg1_0__SSrcB641_1,
  Convert__Reg1_0__SSrcB641_1__SSrcB321_2,
  Convert__SSrcB321_0__SSrcB321_1,
  Convert__SSrcB641_0__SSrcB321_1,
  Convert__SoppBrTarget1_0,
  Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3,
  Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3,
  Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3,
  Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3,
  Convert__Reg1_0__Reg1_1,
  Convert__Reg1_0__Imm1_1,
  Convert__SSrcB641_0__SSrcB641_1,
  Convert__Imm1_0,
  Convert__Reg1_0__ImmHwreg1_1,
  Convert__SendMsg1_0,
  Convert__SSrcB321_0,
  Convert__GPRIdxMode1_0,
  Convert__SSrcB321_0__GPRIdxMode1_1,
  Convert__Reg1_1__ImmHwreg1_0,
  Convert__Imm1_1__ImmHwreg1_0,
  Convert__SWaitCnt1_0,
  Convert__Reg1_0__Imm1_1__Imm1_2__Imm1_3__Imm1_4__Imm1_5__Imm1_6__Imm1_7__Reg1_8__Reg1_9__Imm1_10__Imm1_11__SCSrcB321_12,
  Convert__Reg1_0__VSrcF161_1__Reg1_2,
  ConvertCustom_cvtVOP3_2_mod,
  ConvertCustom_cvtDPP,
  ConvertCustom_cvtSdwaVOP2,
  Convert__Reg1_0__VSrcF321_1__Reg1_2,
  ConvertCustom_cvtVOP3,
  Convert__Reg1_0__VSrcB321_2__Reg1_3,
  Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3,
  Convert__Reg1_0__Reg1_2__Reg1_3__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7,
  Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2,
  Convert__Reg1_0__VSrcB321_1__Reg1_2,
  Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6,
  Convert__Reg1_0__VCSrcB321_2__Reg1_3,
  Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__SCSrcB641_4,
  Convert__Reg1_0__imm_95_0__Reg1_2__imm_95_0__Reg1_3__ImmDPPCtrl1_5__ImmRowMask1_6__ImmBankMask1_7__ImmBoundCtrl1_8,
  Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3,
  Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2,
  Convert__Reg1_0__VCSrcB321_1__VCSrcB641_2,
  Convert__Reg1_0__VCSrcB321_1,
  Convert__Reg1_0__VSrcB321_1,
  Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5,
  ConvertCustom_cvtSdwaVOP1,
  Convert__Reg1_0__VSrcF161_1,
  Convert__Reg1_0__VSrcF321_1,
  Convert__Reg1_0__VSrcF641_1,
  Convert__VSrcF161_1__Reg1_2,
  ConvertCustom_cvtSdwaVOPC,
  Convert__VSrcF321_1__Reg1_2,
  Convert__VSrcF641_1__Reg1_2,
  Convert__VSrcB161_1__Reg1_2,
  Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2,
  Convert__VSrcB321_1__Reg1_2,
  Convert__VSrcB641_1__Reg1_2,
  Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2,
  Convert__Reg1_0__VCSrcB321_1__Reg1_2,
  Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__SCSrcB641_3,
  Convert__Reg1_0__VCSrcB161_1,
  Convert__Reg1_0__VSrcB161_1,
  Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0__imm_95_0,
  Convert__Reg1_0__Reg1_1__VCSrcF321_2__VCSrcF321_3__VCSrcF321_4,
  Convert__Reg1_0__Reg1_1__VCSrcF641_2__VCSrcF641_3__VCSrcF641_4,
  Convert__Reg1_0__InterpSlot1_1__Attr1_2__AttrChan1_3,
  Convert__Reg1_0__Reg1_1__Attr1_2__AttrChan1_3,
  Convert__Reg1_0__Tie0__Reg1_1__Attr1_2__AttrChan1_3,
  Convert__Reg1_0__VSrcF161_1__Reg1_2__Tie0,
  Convert__Reg1_0__VSrcF321_1__Reg1_2__Tie0,
  Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB641_3,
  Convert__Reg1_0__VCSrcF321_1__Reg1_2__KImmFP161_3,
  Convert__Reg1_0__VCSrcF321_1__Reg1_2__KImmFP321_3,
  Convert__Reg1_0__VCSrcF321_1__KImmFP161_2__Reg1_3,
  Convert__Reg1_0__VCSrcF321_1__KImmFP321_2__Reg1_3,
  Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2__VCSrcB641_3,
  Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2__Reg1_3,
  Convert__ImmDPPCtrl1_0__ImmRowMask1_1__ImmBankMask1_2__ImmBoundCtrl1_3,
  Convert__Reg1_0__Reg1_1__SCSrcB321_2,
  CVT_NUM_SIGNATURES
};

} // end anonymous namespace

static const uint8_t ConversionTable[CVT_NUM_SIGNATURES][27] = {
  // Convert_NoOperands
  { CVT_Done },
  // Convert__Imm1_1
  { CVT_95_addImmOperands, 2, CVT_Done },
  // Convert__Imm1_1__Imm1_3
  { CVT_95_addImmOperands, 2, CVT_95_addImmOperands, 4, CVT_Done },
  // Convert__Reg1_2__Imm1_0
  { CVT_95_Reg, 3, CVT_95_addImmOperands, 1, CVT_Done },
  // Convert__Reg1_4__imm_95_0__Imm1_0__Reg1_1__Reg1_2
  { CVT_95_Reg, 5, CVT_imm_95_0, 0, CVT_95_addImmOperands, 1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__Reg1_0
  { CVT_95_Reg, 1, CVT_Done },
  // Convert__Imm1_2__Imm1_0
  { CVT_95_addImmOperands, 3, CVT_95_addImmOperands, 1, CVT_Done },
  // ConvertCustom_cvtMubufAtomic
  { CVT_cvtMubufAtomic, 0, CVT_Done },
  // ConvertCustom_cvtMubufAtomicReturn
  { CVT_cvtMubufAtomicReturn, 0, CVT_Done },
  // ConvertCustom_cvtMubuf
  { CVT_cvtMubuf, 0, CVT_Done },
  // ConvertCustom_cvtDS
  { CVT_cvtDS, 0, CVT_Done },
  // ConvertCustom_cvtDSOffset01
  { CVT_cvtDSOffset01, 0, CVT_Done },
  // ConvertCustom_cvtExp
  { CVT_cvtExp, 0, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultSLC, 3, CVT_95_addImmOperands_95_defaultTFE, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_95_addImmOperands_95_defaultSLC, 5, CVT_95_addImmOperands_95_defaultTFE, 6, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultGLC, 3, CVT_95_addImmOperands_95_defaultSLC, 4, CVT_95_addImmOperands_95_defaultTFE, 5, CVT_Done },
  // ConvertCustom_cvtMIMGAtomic
  { CVT_cvtMIMGAtomic, 0, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_95_Reg, 4, CVT_95_addImmOperands_95_defaultDMask, 5, CVT_95_addImmOperands_95_defaultUNorm, 6, CVT_95_addImmOperands_95_defaultGLC, 7, CVT_95_addImmOperands_95_defaultSLC, 8, CVT_95_addImmOperands_95_defaultR128, 9, CVT_95_addImmOperands_95_defaultTFE, 10, CVT_95_addImmOperands_95_defaultLWE, 11, CVT_95_addImmOperands_95_defaultDA, 12, CVT_Done },
  // ConvertCustom_cvtMIMG
  { CVT_cvtMIMG, 0, CVT_Done },
  // Convert__Reg1_0__SSrcB321_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__SSrcB321_1__SSrcB321_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Reg1_0__Tie0__Imm1_1
  { CVT_95_Reg, 1, CVT_Tied, 0, CVT_95_addImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__SSrcB641_1__SSrcB641_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Reg1_0__SSrcB641_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__SSrcB641_1__SSrcB321_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__SSrcB321_0__SSrcB321_1
  { CVT_95_addRegOrImmOperands, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__SSrcB641_0__SSrcB321_1
  { CVT_95_addRegOrImmOperands, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__SoppBrTarget1_0
  { CVT_95_addSoppBrTargetOperands, 1, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_95_addImmOperands_95_defaultGLC, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultSMRDOffset8, 3, CVT_95_addImmOperands_95_defaultGLC, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultSMRDOffset20, 3, CVT_95_addImmOperands_95_defaultGLC, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands_95_defaultSMRDLiteralOffset, 3, CVT_95_addImmOperands_95_defaultGLC, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_Done },
  // Convert__Reg1_0__Imm1_1
  { CVT_95_Reg, 1, CVT_95_addImmOperands, 2, CVT_Done },
  // Convert__SSrcB641_0__SSrcB641_1
  { CVT_95_addRegOrImmOperands, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Imm1_0
  { CVT_95_addImmOperands, 1, CVT_Done },
  // Convert__Reg1_0__ImmHwreg1_1
  { CVT_95_Reg, 1, CVT_95_addImmOperands, 2, CVT_Done },
  // Convert__SendMsg1_0
  { CVT_95_addImmOperands, 1, CVT_Done },
  // Convert__SSrcB321_0
  { CVT_95_addRegOrImmOperands, 1, CVT_Done },
  // Convert__GPRIdxMode1_0
  { CVT_95_addImmOperands, 1, CVT_Done },
  // Convert__SSrcB321_0__GPRIdxMode1_1
  { CVT_95_addRegOrImmOperands, 1, CVT_95_addImmOperands, 2, CVT_Done },
  // Convert__Reg1_1__ImmHwreg1_0
  { CVT_95_Reg, 2, CVT_95_addImmOperands, 1, CVT_Done },
  // Convert__Imm1_1__ImmHwreg1_0
  { CVT_95_addImmOperands, 2, CVT_95_addImmOperands, 1, CVT_Done },
  // Convert__SWaitCnt1_0
  { CVT_95_addImmOperands, 1, CVT_Done },
  // Convert__Reg1_0__Imm1_1__Imm1_2__Imm1_3__Imm1_4__Imm1_5__Imm1_6__Imm1_7__Reg1_8__Reg1_9__Imm1_10__Imm1_11__SCSrcB321_12
  { CVT_95_Reg, 1, CVT_95_addImmOperands, 2, CVT_95_addImmOperands, 3, CVT_95_addImmOperands, 4, CVT_95_addImmOperands, 5, CVT_95_addImmOperands, 6, CVT_95_addImmOperands, 7, CVT_95_addImmOperands, 8, CVT_95_Reg, 9, CVT_95_Reg, 10, CVT_95_addImmOperands, 11, CVT_95_addImmOperands, 12, CVT_95_addRegOrImmOperands, 13, CVT_Done },
  // Convert__Reg1_0__VSrcF161_1__Reg1_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // ConvertCustom_cvtVOP3_2_mod
  { CVT_cvtVOP3_95_2_95_mod, 0, CVT_Done },
  // ConvertCustom_cvtDPP
  { CVT_cvtDPP, 0, CVT_Done },
  // ConvertCustom_cvtSdwaVOP2
  { CVT_cvtSdwaVOP2, 0, CVT_Done },
  // Convert__Reg1_0__VSrcF321_1__Reg1_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // ConvertCustom_cvtVOP3
  { CVT_cvtVOP3, 0, CVT_Done },
  // Convert__Reg1_0__VSrcB321_2__Reg1_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 3, CVT_95_Reg, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_addRegOrImmOperands, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_2__Reg1_3__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7
  { CVT_95_Reg, 1, CVT_95_Reg, 3, CVT_95_Reg, 4, CVT_95_addImmOperands, 5, CVT_95_addImmOperands_95_defaultRowMask, 6, CVT_95_addImmOperands_95_defaultBankMask, 7, CVT_95_addImmOperands_95_defaultBoundCtrl, 8, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Reg1_0__VSrcB321_1__Reg1_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_Reg, 3, CVT_95_addImmOperands, 4, CVT_95_addImmOperands_95_defaultRowMask, 5, CVT_95_addImmOperands_95_defaultBankMask, 6, CVT_95_addImmOperands_95_defaultBoundCtrl, 7, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_2__Reg1_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 3, CVT_95_Reg, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__SCSrcB641_4
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_addRegOrImmOperands, 4, CVT_95_addRegOrImmOperands, 5, CVT_Done },
  // Convert__Reg1_0__imm_95_0__Reg1_2__imm_95_0__Reg1_3__ImmDPPCtrl1_5__ImmRowMask1_6__ImmBankMask1_7__ImmBoundCtrl1_8
  { CVT_95_Reg, 1, CVT_imm_95_0, 0, CVT_95_Reg, 3, CVT_imm_95_0, 0, CVT_95_Reg, 4, CVT_95_addImmOperands, 6, CVT_95_addImmOperands_95_defaultRowMask, 7, CVT_95_addImmOperands_95_defaultBankMask, 8, CVT_95_addImmOperands_95_defaultBoundCtrl, 9, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_addRegOrImmOperands, 4, CVT_Done },
  // Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_1__VCSrcB641_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__VSrcB321_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands, 3, CVT_95_addImmOperands_95_defaultRowMask, 4, CVT_95_addImmOperands_95_defaultBankMask, 5, CVT_95_addImmOperands_95_defaultBoundCtrl, 6, CVT_Done },
  // ConvertCustom_cvtSdwaVOP1
  { CVT_cvtSdwaVOP1, 0, CVT_Done },
  // Convert__Reg1_0__VSrcF161_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__VSrcF321_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__VSrcF641_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__VSrcF161_1__Reg1_2
  { CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // ConvertCustom_cvtSdwaVOPC
  { CVT_cvtSdwaVOPC, 0, CVT_Done },
  // Convert__VSrcF321_1__Reg1_2
  { CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__VSrcF641_1__Reg1_2
  { CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__VSrcB161_1__Reg1_2
  { CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__VSrcB321_1__Reg1_2
  { CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__VSrcB641_1__Reg1_2
  { CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_1__Reg1_2
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__SCSrcB641_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_addRegOrImmOperands, 4, CVT_Done },
  // Convert__Reg1_0__VCSrcB161_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__VSrcB161_1
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_Done },
  // Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0__imm_95_0
  { CVT_95_Reg, 1, CVT_imm_95_0, 0, CVT_95_addRegOrImmOperands, 2, CVT_imm_95_0, 0, CVT_95_addRegOrImmOperands, 3, CVT_imm_95_0, 0, CVT_imm_95_0, 0, CVT_Done },
  // Convert__Reg1_0__Reg1_1__VCSrcF321_2__VCSrcF321_3__VCSrcF321_4
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_addRegOrImmOperands, 4, CVT_95_addRegOrImmOperands, 5, CVT_Done },
  // Convert__Reg1_0__Reg1_1__VCSrcF641_2__VCSrcF641_3__VCSrcF641_4
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_addRegOrImmOperands, 4, CVT_95_addRegOrImmOperands, 5, CVT_Done },
  // Convert__Reg1_0__InterpSlot1_1__Attr1_2__AttrChan1_3
  { CVT_95_Reg, 1, CVT_95_addImmOperands, 2, CVT_95_addImmOperands, 3, CVT_95_addImmOperands, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__Attr1_2__AttrChan1_3
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addImmOperands, 3, CVT_95_addImmOperands, 4, CVT_Done },
  // Convert__Reg1_0__Tie0__Reg1_1__Attr1_2__AttrChan1_3
  { CVT_95_Reg, 1, CVT_Tied, 0, CVT_95_Reg, 2, CVT_95_addImmOperands, 3, CVT_95_addImmOperands, 4, CVT_Done },
  // Convert__Reg1_0__VSrcF161_1__Reg1_2__Tie0
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Tied, 0, CVT_Done },
  // Convert__Reg1_0__VSrcF321_1__Reg1_2__Tie0
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_Tied, 0, CVT_Done },
  // Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB641_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_addRegOrImmOperands, 4, CVT_Done },
  // Convert__Reg1_0__VCSrcF321_1__Reg1_2__KImmFP161_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_95_addKImmFP16Operands, 4, CVT_Done },
  // Convert__Reg1_0__VCSrcF321_1__Reg1_2__KImmFP321_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_Reg, 3, CVT_95_addKImmFP32Operands, 4, CVT_Done },
  // Convert__Reg1_0__VCSrcF321_1__KImmFP161_2__Reg1_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addKImmFP16Operands, 3, CVT_95_Reg, 4, CVT_Done },
  // Convert__Reg1_0__VCSrcF321_1__KImmFP321_2__Reg1_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addKImmFP32Operands, 3, CVT_95_Reg, 4, CVT_Done },
  // Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2__VCSrcB641_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_addRegOrImmOperands, 4, CVT_Done },
  // Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2__Reg1_3
  { CVT_95_Reg, 1, CVT_95_addRegOrImmOperands, 2, CVT_95_addRegOrImmOperands, 3, CVT_95_Reg, 4, CVT_Done },
  // Convert__ImmDPPCtrl1_0__ImmRowMask1_1__ImmBankMask1_2__ImmBoundCtrl1_3
  { CVT_95_addImmOperands, 1, CVT_95_addImmOperands_95_defaultRowMask, 2, CVT_95_addImmOperands_95_defaultBankMask, 3, CVT_95_addImmOperands_95_defaultBoundCtrl, 4, CVT_Done },
  // Convert__Reg1_0__Reg1_1__SCSrcB321_2
  { CVT_95_Reg, 1, CVT_95_Reg, 2, CVT_95_addRegOrImmOperands, 3, CVT_Done },
};

void AMDGPUAsmParser::
convertToMCInst(unsigned Kind, MCInst &Inst, unsigned Opcode,
                const OperandVector &Operands,
                const SmallBitVector &OptionalOperandsMask) {
  assert(Kind < CVT_NUM_SIGNATURES && "Invalid signature!");
  const uint8_t *Converter = ConversionTable[Kind];
  unsigned NumDefaults = 0;
  unsigned OpIdx;
  Inst.setOpcode(Opcode);
  for (const uint8_t *p = Converter; *p; p+= 2) {
    OpIdx = *(p + 1) - NumDefaults;
    switch (*p) {
    default: llvm_unreachable("invalid conversion entry!");
    case CVT_Reg:
      static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addRegOperands(Inst, 1);
      break;
    case CVT_Tied:
      Inst.addOperand(Inst.getOperand(OpIdx));
      break;
    case CVT_95_addImmOperands:
      static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      break;
    case CVT_95_Reg:
      static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addRegOperands(Inst, 1);
      break;
    case CVT_imm_95_0:
      Inst.addOperand(MCOperand::createImm(0));
      break;
    case CVT_cvtMubufAtomic:
      cvtMubufAtomic(Inst, Operands);
      break;
    case CVT_cvtMubufAtomicReturn:
      cvtMubufAtomicReturn(Inst, Operands);
      break;
    case CVT_cvtMubuf:
      cvtMubuf(Inst, Operands);
      break;
    case CVT_cvtDS:
      cvtDS(Inst, Operands);
      break;
    case CVT_cvtDSOffset01:
      cvtDSOffset01(Inst, Operands);
      break;
    case CVT_cvtExp:
      cvtExp(Inst, Operands);
      break;
    case CVT_95_addImmOperands_95_defaultSLC:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultSLC()->addImmOperands(Inst, 1);
        ++NumDefaults;
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultTFE:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultTFE()->addImmOperands(Inst, 1);
        ++NumDefaults;
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultGLC:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultGLC()->addImmOperands(Inst, 1);
        ++NumDefaults;
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_cvtMIMGAtomic:
      cvtMIMGAtomic(Inst, Operands);
      break;
    case CVT_95_addImmOperands_95_defaultDMask:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultDMask()->addImmOperands(Inst, 1);
        ++NumDefaults;
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultUNorm:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultUNorm()->addImmOperands(Inst, 1);
        ++NumDefaults;
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultR128:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultR128()->addImmOperands(Inst, 1);
        ++NumDefaults;
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultLWE:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultLWE()->addImmOperands(Inst, 1);
        ++NumDefaults;
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultDA:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultDA()->addImmOperands(Inst, 1);
        ++NumDefaults;
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_cvtMIMG:
      cvtMIMG(Inst, Operands);
      break;
    case CVT_95_addRegOrImmOperands:
      static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addRegOrImmOperands(Inst, 1);
      break;
    case CVT_95_addSoppBrTargetOperands:
      static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addSoppBrTargetOperands(Inst, 1);
      break;
    case CVT_95_addImmOperands_95_defaultSMRDOffset8:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultSMRDOffset8()->addImmOperands(Inst, 1);
        ++NumDefaults;
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultSMRDOffset20:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultSMRDOffset20()->addImmOperands(Inst, 1);
        ++NumDefaults;
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultSMRDLiteralOffset:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultSMRDLiteralOffset()->addImmOperands(Inst, 1);
        ++NumDefaults;
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_cvtVOP3_95_2_95_mod:
      cvtVOP3_2_mod(Inst, Operands);
      break;
    case CVT_cvtDPP:
      cvtDPP(Inst, Operands);
      break;
    case CVT_cvtSdwaVOP2:
      cvtSdwaVOP2(Inst, Operands);
      break;
    case CVT_cvtVOP3:
      cvtVOP3(Inst, Operands);
      break;
    case CVT_95_addImmOperands_95_defaultRowMask:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultRowMask()->addImmOperands(Inst, 1);
        ++NumDefaults;
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultBankMask:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultBankMask()->addImmOperands(Inst, 1);
        ++NumDefaults;
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_95_addImmOperands_95_defaultBoundCtrl:
      if (OptionalOperandsMask[*(p + 1) - 1]) {
        defaultBoundCtrl()->addImmOperands(Inst, 1);
        ++NumDefaults;
      } else {
        static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addImmOperands(Inst, 1);
      }
      break;
    case CVT_cvtSdwaVOP1:
      cvtSdwaVOP1(Inst, Operands);
      break;
    case CVT_cvtSdwaVOPC:
      cvtSdwaVOPC(Inst, Operands);
      break;
    case CVT_95_addKImmFP16Operands:
      static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addKImmFP16Operands(Inst, 1);
      break;
    case CVT_95_addKImmFP32Operands:
      static_cast<AMDGPUOperand&>(*Operands[OpIdx]).addKImmFP32Operands(Inst, 1);
      break;
    }
  }
}

void AMDGPUAsmParser::
convertToMapAndConstraints(unsigned Kind,
                           const OperandVector &Operands) {
  assert(Kind < CVT_NUM_SIGNATURES && "Invalid signature!");
  unsigned NumMCOperands = 0;
  const uint8_t *Converter = ConversionTable[Kind];
  for (const uint8_t *p = Converter; *p; p+= 2) {
    switch (*p) {
    default: llvm_unreachable("invalid conversion entry!");
    case CVT_Reg:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("r");
      ++NumMCOperands;
      break;
    case CVT_Tied:
      ++NumMCOperands;
      break;
    case CVT_95_addImmOperands:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_Reg:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("r");
      NumMCOperands += 1;
      break;
    case CVT_imm_95_0:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("");
      ++NumMCOperands;
      break;
    case CVT_95_addImmOperands_95_defaultSLC:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultTFE:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultGLC:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultDMask:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultUNorm:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultR128:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultLWE:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultDA:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addRegOrImmOperands:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addSoppBrTargetOperands:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultSMRDOffset8:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultSMRDOffset20:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultSMRDLiteralOffset:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultRowMask:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultBankMask:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addImmOperands_95_defaultBoundCtrl:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addKImmFP16Operands:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    case CVT_95_addKImmFP32Operands:
      Operands[*(p + 1)]->setMCOperandNum(NumMCOperands);
      Operands[*(p + 1)]->setConstraint("m");
      NumMCOperands += 1;
      break;
    }
  }
}

namespace {

/// MatchClassKind - The kinds of classes which participate in
/// instruction matching.
enum MatchClassKind {
  InvalidMatchClass = 0,
  OptionalMatchClass = 1,
  MCK__COLON_, // ':'
  MCK__64_, // '@'
  MCK_POP_COLON_, // 'POP:'
  MCK_addr64, // 'addr64'
  MCK_done, // 'done'
  MCK_dst1, // 'dst1'
  MCK_gds, // 'gds'
  MCK_glc, // 'glc'
  MCK_idxen, // 'idxen'
  MCK_off, // 'off'
  MCK_offen, // 'offen'
  MCK_Reg12, // derived register class
  MCK_Reg14, // derived register class
  MCK_Reg15, // derived register class
  MCK_Reg16, // derived register class
  MCK_Reg34, // derived register class
  MCK_M0_CLASS, // register class 'M0_CLASS'
  MCK_R600_Addr_W, // register class 'R600_Addr_W'
  MCK_R600_Addr_Y, // register class 'R600_Addr_Y'
  MCK_R600_Addr_Z, // register class 'R600_Addr_Z'
  MCK_R600_Predicate_Bit, // register class 'R600_Predicate_Bit'
  MCK_SCC_CLASS, // register class 'SCC_CLASS'
  MCK_VCC, // register class 'VCC'
  MCK_Reg18, // derived register class
  MCK_Reg19, // derived register class
  MCK_Reg20, // derived register class
  MCK_Reg21, // derived register class
  MCK_R600_Predicate, // register class 'R600_Predicate'
  MCK_TTMP_128, // register class 'TTMP_128'
  MCK_R600_Reg128Vertical, // register class 'R600_Reg128Vertical'
  MCK_R600_LDS_SRC_REG, // register class 'R600_LDS_SRC_REG'
  MCK_TTMP_64, // register class 'TTMP_64'
  MCK_R600_Reg64Vertical, // register class 'R600_Reg64Vertical'
  MCK_TTMP_32, // register class 'TTMP_32'
  MCK_SReg_512, // register class 'SReg_512'
  MCK_SReg_256, // register class 'SReg_256'
  MCK_SGPR_128, // register class 'SGPR_128'
  MCK_SReg_128, // register class 'SReg_128'
  MCK_R600_KC0_W, // register class 'R600_KC0_W'
  MCK_R600_KC0_X, // register class 'R600_KC0_X'
  MCK_R600_KC0_Y, // register class 'R600_KC0_Y'
  MCK_R600_KC0_Z, // register class 'R600_KC0_Z'
  MCK_R600_KC1_W, // register class 'R600_KC1_W'
  MCK_R600_KC1_X, // register class 'R600_KC1_X'
  MCK_R600_KC1_Y, // register class 'R600_KC1_Y'
  MCK_R600_KC1_Z, // register class 'R600_KC1_Z'
  MCK_R600_ArrayBase, // register class 'R600_ArrayBase'
  MCK_SGPR_64, // register class 'SGPR_64'
  MCK_SReg_64_XEXEC, // register class 'SReg_64_XEXEC'
  MCK_SReg_64, // register class 'SReg_64'
  MCK_R600_Reg64, // register class 'R600_Reg64'
  MCK_SGPR_32, // register class 'SGPR_32'
  MCK_SReg_32_XM0_XEXEC, // register class 'SReg_32_XM0_XEXEC'
  MCK_SReg_32_XM0, // register class 'SReg_32_XM0'
  MCK_SReg_32, // register class 'SReg_32'
  MCK_R600_Addr, // register class 'R600_Addr'
  MCK_R600_KC0, // register class 'R600_KC0'
  MCK_R600_KC1, // register class 'R600_KC1'
  MCK_R600_Reg128, // register class 'R600_Reg128'
  MCK_R600_TReg32_W, // register class 'R600_TReg32_W'
  MCK_R600_TReg32_Y, // register class 'R600_TReg32_Y'
  MCK_R600_TReg32_Z, // register class 'R600_TReg32_Z'
  MCK_R600_TReg32_X, // register class 'R600_TReg32_X'
  MCK_VReg_512, // register class 'VReg_512'
  MCK_VReg_256, // register class 'VReg_256'
  MCK_VReg_128, // register class 'VReg_128'
  MCK_VReg_96, // register class 'VReg_96'
  MCK_VReg_64, // register class 'VReg_64'
  MCK_VGPR_32, // register class 'VGPR_32,VReg_1'
  MCK_VS_64, // register class 'VS_64'
  MCK_VS_32, // register class 'VS_32'
  MCK_R600_TReg32, // register class 'R600_TReg32'
  MCK_R600_Reg32, // register class 'R600_Reg32'
  MCK_AttrChan, // user defined class 'AttrChanMatchClass'
  MCK_Attr, // user defined class 'AttrMatchClass'
  MCK_ExpTgt, // user defined class 'ExpTgtMatchClass'
  MCK_RegOrImmWithFP16InputMods, // user defined class 'FP16InputModsMatchClass'
  MCK_RegOrImmWithFP32InputMods, // user defined class 'FP32InputModsMatchClass'
  MCK_RegOrImmWithFP64InputMods, // user defined class 'FP64InputModsMatchClass'
  MCK_VRegWithFPInputMods, // user defined class 'FPVRegInputModsMatchClass'
  MCK_GPRIdxMode, // user defined class 'GPRIdxModeMatchClass'
  MCK_Imm, // user defined class 'ImmAsmOperand'
  MCK_RegOrImmWithInt32InputMods, // user defined class 'Int32InputModsMatchClass'
  MCK_RegOrImmWithInt64InputMods, // user defined class 'Int64InputModsMatchClass'
  MCK_VRegWithIntInputMods, // user defined class 'IntVRegInputModsMatchClass'
  MCK_InterpSlot, // user defined class 'InterpSlotMatchClass'
  MCK_KImmFP16, // user defined class 'KImmFP16MatchClass'
  MCK_KImmFP32, // user defined class 'KImmFP32MatchClass'
  MCK_SCSrcB16, // user defined class 'SCSrcanonymous_691'
  MCK_SCSrcF16, // user defined class 'SCSrcanonymous_692'
  MCK_SCSrcB32, // user defined class 'SCSrcanonymous_693'
  MCK_SCSrcF32, // user defined class 'SCSrcanonymous_694'
  MCK_SCSrcB64, // user defined class 'SCSrcanonymous_695'
  MCK_SCSrcF64, // user defined class 'SCSrcanonymous_696'
  MCK_SSrcB16, // user defined class 'SSrcanonymous_691'
  MCK_SSrcF16, // user defined class 'SSrcanonymous_692'
  MCK_SSrcB32, // user defined class 'SSrcanonymous_693'
  MCK_SSrcF32, // user defined class 'SSrcanonymous_694'
  MCK_SSrcB64, // user defined class 'SSrcanonymous_695'
  MCK_SSrcF64, // user defined class 'SSrcanonymous_696'
  MCK_SWaitCnt, // user defined class 'SWaitMatchClass'
  MCK_SendMsg, // user defined class 'SendMsgMatchClass'
  MCK_SoppBrTarget, // user defined class 'SoppBrTarget'
  MCK_VCSrcB16, // user defined class 'VCSrcanonymous_691'
  MCK_VCSrcF16, // user defined class 'VCSrcanonymous_692'
  MCK_VCSrcB32, // user defined class 'VCSrcanonymous_693'
  MCK_VCSrcF32, // user defined class 'VCSrcanonymous_694'
  MCK_VCSrcB64, // user defined class 'VCSrcanonymous_695'
  MCK_VCSrcF64, // user defined class 'VCSrcanonymous_696'
  MCK_VReg32OrOff, // user defined class 'VReg32OrOffClass'
  MCK_VSrcB16, // user defined class 'VSrcanonymous_691'
  MCK_VSrcF16, // user defined class 'VSrcanonymous_692'
  MCK_VSrcB32, // user defined class 'VSrcanonymous_693'
  MCK_VSrcF32, // user defined class 'VSrcanonymous_694'
  MCK_VSrcB64, // user defined class 'VSrcanonymous_695'
  MCK_VSrcF64, // user defined class 'VSrcanonymous_696'
  MCK_ImmSMRDOffset8, // user defined class 'anonymous_1146'
  MCK_ImmSMRDOffset20, // user defined class 'anonymous_1147'
  MCK_ImmSMRDLiteralOffset, // user defined class 'anonymous_1159'
  MCK_ImmOffen, // user defined class 'anonymous_881'
  MCK_ImmIdxen, // user defined class 'anonymous_882'
  MCK_ImmAddr64, // user defined class 'anonymous_883'
  MCK_ImmOffset, // user defined class 'anonymous_884'
  MCK_ImmOffset0, // user defined class 'anonymous_885'
  MCK_ImmOffset1, // user defined class 'anonymous_886'
  MCK_ImmGDS, // user defined class 'anonymous_887'
  MCK_ImmOModSI, // user defined class 'anonymous_888'
  MCK_ImmClampSI, // user defined class 'anonymous_889'
  MCK_ImmGLC, // user defined class 'anonymous_890'
  MCK_ImmSLC, // user defined class 'anonymous_891'
  MCK_ImmTFE, // user defined class 'anonymous_892'
  MCK_ImmUNorm, // user defined class 'anonymous_893'
  MCK_ImmDA, // user defined class 'anonymous_894'
  MCK_ImmR128, // user defined class 'anonymous_895'
  MCK_ImmLWE, // user defined class 'anonymous_896'
  MCK_ImmExpCompr, // user defined class 'anonymous_897'
  MCK_ImmExpVM, // user defined class 'anonymous_898'
  MCK_ImmDMask, // user defined class 'anonymous_899'
  MCK_ImmDPPCtrl, // user defined class 'anonymous_900'
  MCK_ImmRowMask, // user defined class 'anonymous_901'
  MCK_ImmBankMask, // user defined class 'anonymous_902'
  MCK_ImmBoundCtrl, // user defined class 'anonymous_903'
  MCK_ImmSDWADstSel, // user defined class 'anonymous_904'
  MCK_ImmSDWASrc0Sel, // user defined class 'anonymous_905'
  MCK_ImmSDWASrc1Sel, // user defined class 'anonymous_906'
  MCK_ImmSDWADstUnused, // user defined class 'anonymous_907'
  MCK_ImmHwreg, // user defined class 'anonymous_908'
  MCK_ImmExpTgt, // user defined class 'anonymous_909'
  NumMatchClassKinds
};

}

static MatchClassKind matchTokenString(StringRef Name) {
  switch (Name.size()) {
  default: break;
  case 1:	 // 2 strings to match.
    switch (Name[0]) {
    default: break;
    case ':':	 // 1 string to match.
      return MCK__COLON_;	 // ":"
    case '@':	 // 1 string to match.
      return MCK__64_;	 // "@"
    }
    break;
  case 3:	 // 3 strings to match.
    switch (Name[0]) {
    default: break;
    case 'g':	 // 2 strings to match.
      switch (Name[1]) {
      default: break;
      case 'd':	 // 1 string to match.
        if (Name[2] != 's')
          break;
        return MCK_gds;	 // "gds"
      case 'l':	 // 1 string to match.
        if (Name[2] != 'c')
          break;
        return MCK_glc;	 // "glc"
      }
      break;
    case 'o':	 // 1 string to match.
      if (memcmp(Name.data()+1, "ff", 2) != 0)
        break;
      return MCK_off;	 // "off"
    }
    break;
  case 4:	 // 3 strings to match.
    switch (Name[0]) {
    default: break;
    case 'P':	 // 1 string to match.
      if (memcmp(Name.data()+1, "OP:", 3) != 0)
        break;
      return MCK_POP_COLON_;	 // "POP:"
    case 'd':	 // 2 strings to match.
      switch (Name[1]) {
      default: break;
      case 'o':	 // 1 string to match.
        if (memcmp(Name.data()+2, "ne", 2) != 0)
          break;
        return MCK_done;	 // "done"
      case 's':	 // 1 string to match.
        if (memcmp(Name.data()+2, "t1", 2) != 0)
          break;
        return MCK_dst1;	 // "dst1"
      }
      break;
    }
    break;
  case 5:	 // 2 strings to match.
    switch (Name[0]) {
    default: break;
    case 'i':	 // 1 string to match.
      if (memcmp(Name.data()+1, "dxen", 4) != 0)
        break;
      return MCK_idxen;	 // "idxen"
    case 'o':	 // 1 string to match.
      if (memcmp(Name.data()+1, "ffen", 4) != 0)
        break;
      return MCK_offen;	 // "offen"
    }
    break;
  case 6:	 // 1 string to match.
    if (memcmp(Name.data()+0, "addr64", 6) != 0)
      break;
    return MCK_addr64;	 // "addr64"
  }
  return InvalidMatchClass;
}

/// isSubclass - Compute whether \p A is a subclass of \p B.
static bool isSubclass(MatchClassKind A, MatchClassKind B) {
  if (A == B)
    return true;

  switch (A) {
  default:
    return false;

  case MCK_Reg12:
    return B == MCK_R600_Reg128Vertical;

  case MCK_Reg14:
    return B == MCK_R600_Reg128Vertical;

  case MCK_Reg15:
    return B == MCK_R600_Reg128Vertical;

  case MCK_Reg16:
    return B == MCK_R600_Reg128Vertical;

  case MCK_Reg34:
    switch (B) {
    default: return false;
    case MCK_R600_LDS_SRC_REG: return true;
    case MCK_R600_Reg32: return true;
    }

  case MCK_M0_CLASS:
    switch (B) {
    default: return false;
    case MCK_SReg_32: return true;
    case MCK_VS_32: return true;
    }

  case MCK_VCC:
    switch (B) {
    default: return false;
    case MCK_SReg_64_XEXEC: return true;
    case MCK_SReg_64: return true;
    case MCK_VS_64: return true;
    }

  case MCK_Reg18:
    return B == MCK_R600_Reg64Vertical;

  case MCK_Reg19:
    return B == MCK_R600_Reg64Vertical;

  case MCK_Reg20:
    return B == MCK_R600_Reg64Vertical;

  case MCK_Reg21:
    return B == MCK_R600_Reg64Vertical;

  case MCK_TTMP_128:
    return B == MCK_SReg_128;

  case MCK_TTMP_64:
    switch (B) {
    default: return false;
    case MCK_SReg_64_XEXEC: return true;
    case MCK_SReg_64: return true;
    case MCK_VS_64: return true;
    }

  case MCK_TTMP_32:
    switch (B) {
    default: return false;
    case MCK_SReg_32_XM0_XEXEC: return true;
    case MCK_SReg_32_XM0: return true;
    case MCK_SReg_32: return true;
    case MCK_VS_32: return true;
    }

  case MCK_SGPR_128:
    return B == MCK_SReg_128;

  case MCK_R600_KC0_W:
    switch (B) {
    default: return false;
    case MCK_R600_KC0: return true;
    case MCK_R600_Reg32: return true;
    }

  case MCK_R600_KC0_X:
    switch (B) {
    default: return false;
    case MCK_R600_KC0: return true;
    case MCK_R600_Reg32: return true;
    }

  case MCK_R600_KC0_Y:
    switch (B) {
    default: return false;
    case MCK_R600_KC0: return true;
    case MCK_R600_Reg32: return true;
    }

  case MCK_R600_KC0_Z:
    switch (B) {
    default: return false;
    case MCK_R600_KC0: return true;
    case MCK_R600_Reg32: return true;
    }

  case MCK_R600_KC1_W:
    switch (B) {
    default: return false;
    case MCK_R600_KC1: return true;
    case MCK_R600_Reg32: return true;
    }

  case MCK_R600_KC1_X:
    switch (B) {
    default: return false;
    case MCK_R600_KC1: return true;
    case MCK_R600_Reg32: return true;
    }

  case MCK_R600_KC1_Y:
    switch (B) {
    default: return false;
    case MCK_R600_KC1: return true;
    case MCK_R600_Reg32: return true;
    }

  case MCK_R600_KC1_Z:
    switch (B) {
    default: return false;
    case MCK_R600_KC1: return true;
    case MCK_R600_Reg32: return true;
    }

  case MCK_R600_ArrayBase:
    return B == MCK_R600_Reg32;

  case MCK_SGPR_64:
    switch (B) {
    default: return false;
    case MCK_SReg_64_XEXEC: return true;
    case MCK_SReg_64: return true;
    case MCK_VS_64: return true;
    }

  case MCK_SReg_64_XEXEC:
    switch (B) {
    default: return false;
    case MCK_SReg_64: return true;
    case MCK_VS_64: return true;
    }

  case MCK_SReg_64:
    return B == MCK_VS_64;

  case MCK_SGPR_32:
    switch (B) {
    default: return false;
    case MCK_SReg_32_XM0_XEXEC: return true;
    case MCK_SReg_32_XM0: return true;
    case MCK_SReg_32: return true;
    case MCK_VS_32: return true;
    }

  case MCK_SReg_32_XM0_XEXEC:
    switch (B) {
    default: return false;
    case MCK_SReg_32_XM0: return true;
    case MCK_SReg_32: return true;
    case MCK_VS_32: return true;
    }

  case MCK_SReg_32_XM0:
    switch (B) {
    default: return false;
    case MCK_SReg_32: return true;
    case MCK_VS_32: return true;
    }

  case MCK_SReg_32:
    return B == MCK_VS_32;

  case MCK_R600_Addr:
    return B == MCK_R600_Reg32;

  case MCK_R600_KC0:
    return B == MCK_R600_Reg32;

  case MCK_R600_KC1:
    return B == MCK_R600_Reg32;

  case MCK_R600_TReg32_W:
    switch (B) {
    default: return false;
    case MCK_R600_TReg32: return true;
    case MCK_R600_Reg32: return true;
    }

  case MCK_R600_TReg32_Y:
    switch (B) {
    default: return false;
    case MCK_R600_TReg32: return true;
    case MCK_R600_Reg32: return true;
    }

  case MCK_R600_TReg32_Z:
    switch (B) {
    default: return false;
    case MCK_R600_TReg32: return true;
    case MCK_R600_Reg32: return true;
    }

  case MCK_R600_TReg32_X:
    switch (B) {
    default: return false;
    case MCK_R600_TReg32: return true;
    case MCK_R600_Reg32: return true;
    }

  case MCK_VReg_64:
    return B == MCK_VS_64;

  case MCK_VGPR_32:
    return B == MCK_VS_32;

  case MCK_R600_TReg32:
    return B == MCK_R600_Reg32;

  case MCK_ImmSMRDOffset8:
    return B == OptionalMatchClass;

  case MCK_ImmSMRDOffset20:
    return B == OptionalMatchClass;

  case MCK_ImmSMRDLiteralOffset:
    return B == OptionalMatchClass;

  case MCK_ImmOffen:
    return B == OptionalMatchClass;

  case MCK_ImmIdxen:
    return B == OptionalMatchClass;

  case MCK_ImmAddr64:
    return B == OptionalMatchClass;

  case MCK_ImmOffset:
    return B == OptionalMatchClass;

  case MCK_ImmOffset0:
    return B == OptionalMatchClass;

  case MCK_ImmOffset1:
    return B == OptionalMatchClass;

  case MCK_ImmGDS:
    return B == OptionalMatchClass;

  case MCK_ImmOModSI:
    return B == OptionalMatchClass;

  case MCK_ImmClampSI:
    return B == OptionalMatchClass;

  case MCK_ImmGLC:
    return B == OptionalMatchClass;

  case MCK_ImmSLC:
    return B == OptionalMatchClass;

  case MCK_ImmTFE:
    return B == OptionalMatchClass;

  case MCK_ImmUNorm:
    return B == OptionalMatchClass;

  case MCK_ImmDA:
    return B == OptionalMatchClass;

  case MCK_ImmR128:
    return B == OptionalMatchClass;

  case MCK_ImmLWE:
    return B == OptionalMatchClass;

  case MCK_ImmExpCompr:
    return B == OptionalMatchClass;

  case MCK_ImmExpVM:
    return B == OptionalMatchClass;

  case MCK_ImmDMask:
    return B == OptionalMatchClass;

  case MCK_ImmRowMask:
    return B == OptionalMatchClass;

  case MCK_ImmBankMask:
    return B == OptionalMatchClass;

  case MCK_ImmBoundCtrl:
    return B == OptionalMatchClass;

  case MCK_ImmSDWADstSel:
    return B == OptionalMatchClass;

  case MCK_ImmSDWASrc0Sel:
    return B == OptionalMatchClass;

  case MCK_ImmSDWASrc1Sel:
    return B == OptionalMatchClass;

  case MCK_ImmSDWADstUnused:
    return B == OptionalMatchClass;
  }
}

static unsigned validateOperandClass(MCParsedAsmOperand &GOp, MatchClassKind Kind) {
  AMDGPUOperand &Operand = (AMDGPUOperand&)GOp;
  if (Kind == InvalidMatchClass)
    return MCTargetAsmParser::Match_InvalidOperand;

  if (Operand.isToken())
    return isSubclass(matchTokenString(Operand.getToken()), Kind) ?
             MCTargetAsmParser::Match_Success :
             MCTargetAsmParser::Match_InvalidOperand;

  switch (Kind) {
  default: break;
  // 'AttrChan' class
  case MCK_AttrChan:
    if (Operand.isAttrChan())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'Attr' class
  case MCK_Attr:
    if (Operand.isInterpAttr())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ExpTgt' class
  case MCK_ExpTgt:
    if (Operand.isExpTgt())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'RegOrImmWithFP16InputMods' class
  case MCK_RegOrImmWithFP16InputMods:
    if (Operand.isRegOrImmWithFP16InputMods())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'RegOrImmWithFP32InputMods' class
  case MCK_RegOrImmWithFP32InputMods:
    if (Operand.isRegOrImmWithFP32InputMods())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'RegOrImmWithFP64InputMods' class
  case MCK_RegOrImmWithFP64InputMods:
    if (Operand.isRegOrImmWithFP64InputMods())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VRegWithFPInputMods' class
  case MCK_VRegWithFPInputMods:
    if (Operand.isVReg())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'GPRIdxMode' class
  case MCK_GPRIdxMode:
    if (Operand.isGPRIdxMode())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'Imm' class
  case MCK_Imm:
    if (Operand.isImm())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'RegOrImmWithInt32InputMods' class
  case MCK_RegOrImmWithInt32InputMods:
    if (Operand.isRegOrImmWithInt32InputMods())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'RegOrImmWithInt64InputMods' class
  case MCK_RegOrImmWithInt64InputMods:
    if (Operand.isRegOrImmWithInt64InputMods())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VRegWithIntInputMods' class
  case MCK_VRegWithIntInputMods:
    if (Operand.isVReg())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'InterpSlot' class
  case MCK_InterpSlot:
    if (Operand.isInterpSlot())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'KImmFP16' class
  case MCK_KImmFP16:
    if (Operand.isKImmFP16())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'KImmFP32' class
  case MCK_KImmFP32:
    if (Operand.isKImmFP32())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SCSrcB16' class
  case MCK_SCSrcB16:
    if (Operand.isSCSrcB16())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SCSrcF16' class
  case MCK_SCSrcF16:
    if (Operand.isSCSrcF16())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SCSrcB32' class
  case MCK_SCSrcB32:
    if (Operand.isSCSrcB32())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SCSrcF32' class
  case MCK_SCSrcF32:
    if (Operand.isSCSrcF32())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SCSrcB64' class
  case MCK_SCSrcB64:
    if (Operand.isSCSrcB64())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SCSrcF64' class
  case MCK_SCSrcF64:
    if (Operand.isSCSrcF64())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SSrcB16' class
  case MCK_SSrcB16:
    if (Operand.isSSrcB16())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SSrcF16' class
  case MCK_SSrcF16:
    if (Operand.isSSrcF16())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SSrcB32' class
  case MCK_SSrcB32:
    if (Operand.isSSrcB32())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SSrcF32' class
  case MCK_SSrcF32:
    if (Operand.isSSrcF32())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SSrcB64' class
  case MCK_SSrcB64:
    if (Operand.isSSrcB64())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SSrcF64' class
  case MCK_SSrcF64:
    if (Operand.isSSrcF64())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SWaitCnt' class
  case MCK_SWaitCnt:
    if (Operand.isSWaitCnt())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SendMsg' class
  case MCK_SendMsg:
    if (Operand.isSendMsg())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'SoppBrTarget' class
  case MCK_SoppBrTarget:
    if (Operand.isSoppBrTarget())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VCSrcB16' class
  case MCK_VCSrcB16:
    if (Operand.isVCSrcB16())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VCSrcF16' class
  case MCK_VCSrcF16:
    if (Operand.isVCSrcF16())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VCSrcB32' class
  case MCK_VCSrcB32:
    if (Operand.isVCSrcB32())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VCSrcF32' class
  case MCK_VCSrcF32:
    if (Operand.isVCSrcF32())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VCSrcB64' class
  case MCK_VCSrcB64:
    if (Operand.isVCSrcB64())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VCSrcF64' class
  case MCK_VCSrcF64:
    if (Operand.isVCSrcF64())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VReg32OrOff' class
  case MCK_VReg32OrOff:
    if (Operand.isVReg32OrOff())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VSrcB16' class
  case MCK_VSrcB16:
    if (Operand.isVSrcB16())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VSrcF16' class
  case MCK_VSrcF16:
    if (Operand.isVSrcF16())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VSrcB32' class
  case MCK_VSrcB32:
    if (Operand.isVSrcB32())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VSrcF32' class
  case MCK_VSrcF32:
    if (Operand.isVSrcF32())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VSrcB64' class
  case MCK_VSrcB64:
    if (Operand.isVSrcB64())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'VSrcF64' class
  case MCK_VSrcF64:
    if (Operand.isVSrcF64())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmSMRDOffset8' class
  case MCK_ImmSMRDOffset8:
    if (Operand.isSMRDOffset8())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmSMRDOffset20' class
  case MCK_ImmSMRDOffset20:
    if (Operand.isSMRDOffset20())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmSMRDLiteralOffset' class
  case MCK_ImmSMRDLiteralOffset:
    if (Operand.isSMRDLiteralOffset())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmOffen' class
  case MCK_ImmOffen:
    if (Operand.isOffen())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmIdxen' class
  case MCK_ImmIdxen:
    if (Operand.isIdxen())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmAddr64' class
  case MCK_ImmAddr64:
    if (Operand.isAddr64())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmOffset' class
  case MCK_ImmOffset:
    if (Operand.isOffset())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmOffset0' class
  case MCK_ImmOffset0:
    if (Operand.isOffset0())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmOffset1' class
  case MCK_ImmOffset1:
    if (Operand.isOffset1())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmGDS' class
  case MCK_ImmGDS:
    if (Operand.isGDS())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmOModSI' class
  case MCK_ImmOModSI:
    if (Operand.isOModSI())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmClampSI' class
  case MCK_ImmClampSI:
    if (Operand.isClampSI())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmGLC' class
  case MCK_ImmGLC:
    if (Operand.isGLC())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmSLC' class
  case MCK_ImmSLC:
    if (Operand.isSLC())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmTFE' class
  case MCK_ImmTFE:
    if (Operand.isTFE())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmUNorm' class
  case MCK_ImmUNorm:
    if (Operand.isUNorm())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmDA' class
  case MCK_ImmDA:
    if (Operand.isDA())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmR128' class
  case MCK_ImmR128:
    if (Operand.isR128())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmLWE' class
  case MCK_ImmLWE:
    if (Operand.isLWE())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmExpCompr' class
  case MCK_ImmExpCompr:
    if (Operand.isExpCompr())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmExpVM' class
  case MCK_ImmExpVM:
    if (Operand.isExpVM())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmDMask' class
  case MCK_ImmDMask:
    if (Operand.isDMask())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmDPPCtrl' class
  case MCK_ImmDPPCtrl:
    if (Operand.isDPPCtrl())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmRowMask' class
  case MCK_ImmRowMask:
    if (Operand.isRowMask())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmBankMask' class
  case MCK_ImmBankMask:
    if (Operand.isBankMask())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmBoundCtrl' class
  case MCK_ImmBoundCtrl:
    if (Operand.isBoundCtrl())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmSDWADstSel' class
  case MCK_ImmSDWADstSel:
    if (Operand.isSDWADstSel())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmSDWASrc0Sel' class
  case MCK_ImmSDWASrc0Sel:
    if (Operand.isSDWASrc0Sel())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmSDWASrc1Sel' class
  case MCK_ImmSDWASrc1Sel:
    if (Operand.isSDWASrc1Sel())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmSDWADstUnused' class
  case MCK_ImmSDWADstUnused:
    if (Operand.isSDWADstUnused())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmHwreg' class
  case MCK_ImmHwreg:
    if (Operand.isHwreg())
      return MCTargetAsmParser::Match_Success;
    break;
  // 'ImmExpTgt' class
  case MCK_ImmExpTgt:
    if (Operand.isExpTgt())
      return MCTargetAsmParser::Match_Success;
    break;
  } // end switch (Kind)

  if (Operand.isReg()) {
    MatchClassKind OpKind;
    switch (Operand.getReg()) {
    default: OpKind = InvalidMatchClass; break;
    case AMDGPU::T0_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T0_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T0_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T0_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T1_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T1_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T1_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T1_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T2_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T2_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T2_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T2_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T3_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T3_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T3_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T3_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T4_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T4_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T4_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T4_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T5_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T5_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T5_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T5_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T6_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T6_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T6_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T6_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T7_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T7_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T7_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T7_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T8_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T8_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T8_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T8_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T9_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T9_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T9_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T9_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T10_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T10_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T10_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T10_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T11_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T11_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T11_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T11_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T12_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T12_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T12_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T12_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T13_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T13_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T13_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T13_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T14_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T14_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T14_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T14_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T15_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T15_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T15_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T15_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T16_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T16_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T16_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T16_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T17_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T17_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T17_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T17_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T18_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T18_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T18_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T18_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T19_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T19_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T19_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T19_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T20_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T20_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T20_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T20_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T21_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T21_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T21_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T21_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T22_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T22_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T22_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T22_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T23_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T23_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T23_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T23_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T24_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T24_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T24_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T24_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T25_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T25_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T25_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T25_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T26_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T26_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T26_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T26_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T27_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T27_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T27_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T27_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T28_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T28_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T28_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T28_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T29_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T29_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T29_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T29_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T30_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T30_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T30_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T30_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T31_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T31_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T31_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T31_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T32_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T32_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T32_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T32_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T33_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T33_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T33_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T33_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T34_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T34_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T34_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T34_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T35_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T35_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T35_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T35_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T36_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T36_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T36_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T36_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T37_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T37_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T37_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T37_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T38_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T38_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T38_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T38_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T39_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T39_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T39_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T39_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T40_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T40_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T40_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T40_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T41_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T41_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T41_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T41_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T42_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T42_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T42_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T42_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T43_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T43_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T43_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T43_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T44_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T44_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T44_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T44_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T45_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T45_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T45_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T45_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T46_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T46_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T46_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T46_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T47_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T47_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T47_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T47_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T48_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T48_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T48_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T48_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T49_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T49_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T49_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T49_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T50_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T50_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T50_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T50_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T51_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T51_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T51_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T51_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T52_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T52_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T52_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T52_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T53_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T53_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T53_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T53_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T54_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T54_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T54_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T54_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T55_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T55_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T55_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T55_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T56_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T56_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T56_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T56_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T57_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T57_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T57_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T57_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T58_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T58_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T58_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T58_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T59_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T59_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T59_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T59_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T60_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T60_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T60_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T60_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T61_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T61_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T61_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T61_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T62_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T62_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T62_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T62_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T63_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T63_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T63_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T63_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T64_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T64_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T64_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T64_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T65_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T65_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T65_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T65_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T66_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T66_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T66_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T66_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T67_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T67_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T67_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T67_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T68_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T68_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T68_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T68_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T69_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T69_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T69_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T69_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T70_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T70_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T70_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T70_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T71_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T71_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T71_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T71_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T72_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T72_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T72_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T72_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T73_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T73_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T73_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T73_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T74_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T74_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T74_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T74_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T75_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T75_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T75_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T75_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T76_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T76_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T76_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T76_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T77_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T77_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T77_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T77_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T78_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T78_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T78_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T78_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T79_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T79_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T79_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T79_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T80_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T80_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T80_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T80_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T81_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T81_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T81_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T81_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T82_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T82_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T82_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T82_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T83_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T83_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T83_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T83_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T84_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T84_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T84_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T84_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T85_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T85_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T85_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T85_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T86_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T86_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T86_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T86_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T87_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T87_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T87_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T87_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T88_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T88_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T88_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T88_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T89_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T89_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T89_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T89_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T90_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T90_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T90_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T90_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T91_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T91_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T91_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T91_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T92_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T92_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T92_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T92_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T93_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T93_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T93_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T93_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T94_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T94_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T94_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T94_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T95_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T95_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T95_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T95_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T96_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T96_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T96_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T96_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T97_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T97_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T97_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T97_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T98_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T98_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T98_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T98_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T99_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T99_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T99_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T99_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T100_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T100_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T100_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T100_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T101_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T101_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T101_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T101_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T102_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T102_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T102_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T102_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T103_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T103_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T103_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T103_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T104_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T104_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T104_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T104_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T105_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T105_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T105_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T105_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T106_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T106_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T106_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T106_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T107_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T107_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T107_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T107_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T108_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T108_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T108_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T108_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T109_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T109_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T109_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T109_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T110_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T110_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T110_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T110_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T111_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T111_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T111_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T111_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T112_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T112_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T112_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T112_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T113_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T113_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T113_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T113_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T114_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T114_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T114_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T114_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T115_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T115_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T115_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T115_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T116_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T116_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T116_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T116_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T117_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T117_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T117_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T117_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T118_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T118_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T118_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T118_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T119_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T119_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T119_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T119_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T120_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T120_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T120_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T120_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T121_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T121_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T121_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T121_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T122_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T122_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T122_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T122_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T123_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T123_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T123_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T123_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T124_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T124_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T124_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T124_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T125_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T125_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T125_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T125_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T126_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T126_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T126_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T126_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::T127_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::T127_Y: OpKind = MCK_R600_TReg32_Y; break;
    case AMDGPU::T127_Z: OpKind = MCK_R600_TReg32_Z; break;
    case AMDGPU::T127_W: OpKind = MCK_R600_TReg32_W; break;
    case AMDGPU::Addr0_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr0_Y: OpKind = MCK_R600_Addr_Y; break;
    case AMDGPU::Addr0_Z: OpKind = MCK_R600_Addr_Z; break;
    case AMDGPU::Addr0_W: OpKind = MCK_R600_Addr_W; break;
    case AMDGPU::Addr1_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr2_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr3_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr4_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr5_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr6_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr7_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr8_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr9_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr10_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr11_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr12_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr13_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr14_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr15_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr16_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr17_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr18_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr19_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr20_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr21_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr22_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr23_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr24_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr25_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr26_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr27_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr28_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr29_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr30_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr31_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr32_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr33_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr34_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr35_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr36_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr37_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr38_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr39_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr40_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr41_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr42_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr43_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr44_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr45_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr46_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr47_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr48_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr49_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr50_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr51_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr52_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr53_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr54_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr55_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr56_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr57_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr58_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr59_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr60_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr61_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr62_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr63_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr64_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr65_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr66_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr67_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr68_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr69_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr70_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr71_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr72_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr73_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr74_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr75_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr76_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr77_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr78_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr79_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr80_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr81_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr82_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr83_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr84_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr85_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr86_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr87_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr88_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr89_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr90_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr91_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr92_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr93_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr94_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr95_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr96_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr97_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr98_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr99_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr100_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr101_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr102_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr103_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr104_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr105_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr106_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr107_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr108_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr109_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr110_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr111_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr112_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr113_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr114_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr115_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr116_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr117_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr118_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr119_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr120_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr121_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr122_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr123_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr124_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr125_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr126_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::Addr127_X: OpKind = MCK_R600_Addr; break;
    case AMDGPU::T0_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T1_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T2_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T3_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T4_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T5_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T6_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T7_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T8_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T9_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T10_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T11_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T12_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T13_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T14_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T15_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T16_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T17_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T18_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T19_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T20_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T21_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T22_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T23_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T24_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T25_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T26_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T27_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T28_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T29_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T30_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T31_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T32_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T33_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T34_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T35_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T36_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T37_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T38_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T39_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T40_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T41_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T42_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T43_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T44_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T45_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T46_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T47_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T48_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T49_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T50_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T51_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T52_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T53_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T54_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T55_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T56_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T57_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T58_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T59_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T60_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T61_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T62_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T63_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T64_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T65_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T66_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T67_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T68_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T69_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T70_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T71_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T72_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T73_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T74_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T75_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T76_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T77_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T78_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T79_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T80_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T81_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T82_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T83_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T84_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T85_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T86_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T87_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T88_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T89_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T90_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T91_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T92_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T93_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T94_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T95_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T96_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T97_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T98_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T99_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T100_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T101_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T102_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T103_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T104_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T105_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T106_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T107_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T108_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T109_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T110_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T111_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T112_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T113_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T114_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T115_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T116_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T117_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T118_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T119_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T120_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T121_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T122_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T123_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T124_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T125_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T126_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T127_XYZW: OpKind = MCK_R600_Reg128; break;
    case AMDGPU::T0_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T1_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T2_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T3_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T4_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T5_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T6_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T7_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T8_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T9_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T10_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T11_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T12_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T13_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T14_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T15_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T16_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T17_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T18_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T19_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T20_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T21_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T22_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T23_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T24_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T25_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T26_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T27_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T28_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T29_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T30_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T31_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T32_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T33_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T34_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T35_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T36_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T37_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T38_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T39_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T40_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T41_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T42_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T43_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T44_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T45_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T46_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T47_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T48_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T49_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T50_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T51_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T52_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T53_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T54_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T55_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T56_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T57_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T58_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T59_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T60_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T61_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T62_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::T63_XY: OpKind = MCK_R600_Reg64; break;
    case AMDGPU::V0123_X: OpKind = MCK_Reg12; break;
    case AMDGPU::V0123_Y: OpKind = MCK_Reg14; break;
    case AMDGPU::V0123_Z: OpKind = MCK_Reg15; break;
    case AMDGPU::V0123_W: OpKind = MCK_Reg16; break;
    case AMDGPU::V01_X: OpKind = MCK_Reg18; break;
    case AMDGPU::V01_Y: OpKind = MCK_Reg19; break;
    case AMDGPU::V01_Z: OpKind = MCK_Reg20; break;
    case AMDGPU::V01_W: OpKind = MCK_Reg21; break;
    case AMDGPU::V23_X: OpKind = MCK_Reg18; break;
    case AMDGPU::V23_Y: OpKind = MCK_Reg19; break;
    case AMDGPU::V23_Z: OpKind = MCK_Reg20; break;
    case AMDGPU::V23_W: OpKind = MCK_Reg21; break;
    case AMDGPU::KC0_159_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_159_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_159_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_159_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_158_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_158_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_158_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_158_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_157_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_157_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_157_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_157_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_156_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_156_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_156_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_156_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_155_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_155_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_155_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_155_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_154_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_154_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_154_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_154_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_153_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_153_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_153_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_153_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_152_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_152_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_152_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_152_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_151_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_151_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_151_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_151_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_150_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_150_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_150_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_150_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_149_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_149_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_149_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_149_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_148_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_148_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_148_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_148_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_147_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_147_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_147_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_147_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_146_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_146_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_146_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_146_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_145_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_145_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_145_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_145_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_144_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_144_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_144_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_144_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_143_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_143_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_143_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_143_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_142_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_142_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_142_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_142_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_141_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_141_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_141_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_141_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_140_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_140_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_140_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_140_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_139_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_139_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_139_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_139_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_138_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_138_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_138_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_138_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_137_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_137_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_137_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_137_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_136_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_136_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_136_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_136_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_135_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_135_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_135_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_135_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_134_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_134_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_134_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_134_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_133_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_133_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_133_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_133_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_132_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_132_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_132_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_132_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_131_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_131_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_131_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_131_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_130_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_130_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_130_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_130_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_129_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_129_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_129_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_129_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC0_128_X: OpKind = MCK_R600_KC0_X; break;
    case AMDGPU::KC0_128_Y: OpKind = MCK_R600_KC0_Y; break;
    case AMDGPU::KC0_128_Z: OpKind = MCK_R600_KC0_Z; break;
    case AMDGPU::KC0_128_W: OpKind = MCK_R600_KC0_W; break;
    case AMDGPU::KC1_191_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_191_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_191_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_191_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_190_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_190_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_190_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_190_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_189_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_189_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_189_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_189_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_188_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_188_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_188_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_188_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_187_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_187_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_187_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_187_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_186_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_186_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_186_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_186_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_185_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_185_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_185_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_185_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_184_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_184_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_184_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_184_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_183_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_183_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_183_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_183_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_182_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_182_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_182_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_182_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_181_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_181_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_181_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_181_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_180_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_180_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_180_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_180_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_179_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_179_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_179_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_179_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_178_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_178_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_178_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_178_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_177_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_177_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_177_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_177_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_176_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_176_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_176_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_176_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_175_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_175_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_175_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_175_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_174_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_174_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_174_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_174_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_173_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_173_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_173_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_173_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_172_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_172_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_172_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_172_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_171_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_171_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_171_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_171_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_170_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_170_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_170_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_170_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_169_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_169_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_169_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_169_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_168_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_168_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_168_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_168_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_167_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_167_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_167_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_167_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_166_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_166_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_166_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_166_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_165_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_165_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_165_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_165_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_164_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_164_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_164_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_164_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_163_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_163_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_163_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_163_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_162_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_162_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_162_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_162_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_161_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_161_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_161_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_161_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::KC1_160_X: OpKind = MCK_R600_KC1_X; break;
    case AMDGPU::KC1_160_Y: OpKind = MCK_R600_KC1_Y; break;
    case AMDGPU::KC1_160_Z: OpKind = MCK_R600_KC1_Z; break;
    case AMDGPU::KC1_160_W: OpKind = MCK_R600_KC1_W; break;
    case AMDGPU::ArrayBase448: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase449: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase450: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase451: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase452: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase453: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase454: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase455: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase456: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase457: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase458: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase459: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase460: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase461: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase462: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase463: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase464: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase465: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase466: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase467: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase468: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase469: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase470: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase471: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase472: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase473: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase474: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase475: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase476: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase477: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase478: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase479: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::ArrayBase480: OpKind = MCK_R600_ArrayBase; break;
    case AMDGPU::OQA: OpKind = MCK_R600_LDS_SRC_REG; break;
    case AMDGPU::OQB: OpKind = MCK_R600_LDS_SRC_REG; break;
    case AMDGPU::OQAP: OpKind = MCK_Reg34; break;
    case AMDGPU::OQBP: OpKind = MCK_R600_LDS_SRC_REG; break;
    case AMDGPU::LDS_DIRECT_A: OpKind = MCK_R600_LDS_SRC_REG; break;
    case AMDGPU::LDS_DIRECT_B: OpKind = MCK_R600_LDS_SRC_REG; break;
    case AMDGPU::ZERO: OpKind = MCK_R600_Reg32; break;
    case AMDGPU::ONE: OpKind = MCK_R600_Reg32; break;
    case AMDGPU::NEG_ONE: OpKind = MCK_R600_Reg32; break;
    case AMDGPU::ONE_INT: OpKind = MCK_R600_Reg32; break;
    case AMDGPU::HALF: OpKind = MCK_R600_Reg32; break;
    case AMDGPU::NEG_HALF: OpKind = MCK_R600_Reg32; break;
    case AMDGPU::ALU_LITERAL_X: OpKind = MCK_R600_Reg32; break;
    case AMDGPU::PV_X: OpKind = MCK_R600_Reg32; break;
    case AMDGPU::PREDICATE_BIT: OpKind = MCK_R600_Predicate_Bit; break;
    case AMDGPU::PRED_SEL_OFF: OpKind = MCK_R600_Predicate; break;
    case AMDGPU::PRED_SEL_ZERO: OpKind = MCK_R600_Predicate; break;
    case AMDGPU::PRED_SEL_ONE: OpKind = MCK_R600_Predicate; break;
    case AMDGPU::AR_X: OpKind = MCK_R600_TReg32_X; break;
    case AMDGPU::ALU_CONST: OpKind = MCK_R600_Reg32; break;
    case AMDGPU::ALU_PARAM: OpKind = MCK_R600_Reg32; break;
    case AMDGPU::VCC_LO: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::VCC_HI: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::VCC: OpKind = MCK_VCC; break;
    case AMDGPU::EXEC_LO: OpKind = MCK_SReg_32_XM0; break;
    case AMDGPU::EXEC_HI: OpKind = MCK_SReg_32_XM0; break;
    case AMDGPU::EXEC: OpKind = MCK_SReg_64; break;
    case AMDGPU::SCC: OpKind = MCK_SCC_CLASS; break;
    case AMDGPU::M0: OpKind = MCK_M0_CLASS; break;
    case AMDGPU::TBA_LO: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::TBA_HI: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::TBA: OpKind = MCK_SReg_64_XEXEC; break;
    case AMDGPU::TMA_LO: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::TMA_HI: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::TMA: OpKind = MCK_SReg_64_XEXEC; break;
    case AMDGPU::TTMP0: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP1: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP2: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP3: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP4: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP5: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP6: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP7: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP8: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP9: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP10: OpKind = MCK_TTMP_32; break;
    case AMDGPU::TTMP11: OpKind = MCK_TTMP_32; break;
    case AMDGPU::FLAT_SCR_LO: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::FLAT_SCR_HI: OpKind = MCK_SReg_32_XM0_XEXEC; break;
    case AMDGPU::FLAT_SCR: OpKind = MCK_SReg_64_XEXEC; break;
    case AMDGPU::SGPR0: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR1: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR2: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR3: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR4: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR5: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR6: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR7: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR8: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR9: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR10: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR11: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR12: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR13: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR14: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR15: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR16: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR17: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR18: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR19: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR20: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR21: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR22: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR23: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR24: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR25: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR26: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR27: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR28: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR29: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR30: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR31: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR32: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR33: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR34: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR35: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR36: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR37: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR38: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR39: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR40: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR41: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR42: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR43: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR44: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR45: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR46: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR47: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR48: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR49: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR50: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR51: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR52: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR53: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR54: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR55: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR56: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR57: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR58: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR59: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR60: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR61: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR62: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR63: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR64: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR65: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR66: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR67: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR68: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR69: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR70: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR71: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR72: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR73: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR74: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR75: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR76: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR77: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR78: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR79: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR80: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR81: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR82: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR83: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR84: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR85: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR86: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR87: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR88: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR89: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR90: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR91: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR92: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR93: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR94: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR95: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR96: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR97: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR98: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR99: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR100: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR101: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR102: OpKind = MCK_SGPR_32; break;
    case AMDGPU::SGPR103: OpKind = MCK_SGPR_32; break;
    case AMDGPU::VGPR0: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR1: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR2: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR3: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR4: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR5: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR6: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR7: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR8: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR9: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR10: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR11: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR12: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR13: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR14: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR15: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR16: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR17: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR18: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR19: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR20: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR21: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR22: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR23: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR24: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR25: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR26: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR27: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR28: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR29: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR30: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR31: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR32: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR33: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR34: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR35: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR36: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR37: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR38: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR39: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR40: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR41: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR42: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR43: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR44: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR45: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR46: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR47: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR48: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR49: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR50: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR51: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR52: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR53: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR54: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR55: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR56: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR57: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR58: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR59: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR60: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR61: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR62: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR63: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR64: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR65: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR66: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR67: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR68: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR69: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR70: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR71: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR72: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR73: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR74: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR75: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR76: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR77: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR78: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR79: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR80: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR81: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR82: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR83: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR84: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR85: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR86: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR87: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR88: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR89: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR90: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR91: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR92: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR93: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR94: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR95: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR96: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR97: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR98: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR99: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR100: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR101: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR102: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR103: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR104: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR105: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR106: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR107: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR108: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR109: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR110: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR111: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR112: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR113: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR114: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR115: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR116: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR117: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR118: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR119: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR120: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR121: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR122: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR123: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR124: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR125: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR126: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR127: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR128: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR129: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR130: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR131: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR132: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR133: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR134: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR135: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR136: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR137: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR138: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR139: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR140: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR141: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR142: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR143: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR144: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR145: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR146: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR147: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR148: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR149: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR150: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR151: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR152: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR153: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR154: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR155: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR156: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR157: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR158: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR159: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR160: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR161: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR162: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR163: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR164: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR165: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR166: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR167: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR168: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR169: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR170: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR171: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR172: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR173: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR174: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR175: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR176: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR177: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR178: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR179: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR180: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR181: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR182: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR183: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR184: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR185: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR186: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR187: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR188: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR189: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR190: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR191: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR192: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR193: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR194: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR195: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR196: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR197: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR198: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR199: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR200: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR201: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR202: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR203: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR204: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR205: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR206: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR207: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR208: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR209: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR210: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR211: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR212: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR213: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR214: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR215: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR216: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR217: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR218: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR219: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR220: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR221: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR222: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR223: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR224: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR225: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR226: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR227: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR228: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR229: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR230: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR231: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR232: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR233: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR234: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR235: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR236: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR237: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR238: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR239: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR240: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR241: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR242: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR243: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR244: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR245: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR246: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR247: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR248: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR249: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR250: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR251: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR252: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR253: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR254: OpKind = MCK_VGPR_32; break;
    case AMDGPU::VGPR255: OpKind = MCK_VGPR_32; break;
    case AMDGPU::SGPR0_SGPR1_SGPR2_SGPR3: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR4_SGPR5_SGPR6_SGPR7: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR8_SGPR9_SGPR10_SGPR11: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR12_SGPR13_SGPR14_SGPR15: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR16_SGPR17_SGPR18_SGPR19: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR20_SGPR21_SGPR22_SGPR23: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR24_SGPR25_SGPR26_SGPR27: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR28_SGPR29_SGPR30_SGPR31: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR32_SGPR33_SGPR34_SGPR35: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR36_SGPR37_SGPR38_SGPR39: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR40_SGPR41_SGPR42_SGPR43: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR44_SGPR45_SGPR46_SGPR47: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR48_SGPR49_SGPR50_SGPR51: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR52_SGPR53_SGPR54_SGPR55: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR56_SGPR57_SGPR58_SGPR59: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR60_SGPR61_SGPR62_SGPR63: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR64_SGPR65_SGPR66_SGPR67: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR68_SGPR69_SGPR70_SGPR71: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR72_SGPR73_SGPR74_SGPR75: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR76_SGPR77_SGPR78_SGPR79: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR80_SGPR81_SGPR82_SGPR83: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR84_SGPR85_SGPR86_SGPR87: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR88_SGPR89_SGPR90_SGPR91: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR92_SGPR93_SGPR94_SGPR95: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR96_SGPR97_SGPR98_SGPR99: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR100_SGPR101_SGPR102_SGPR103: OpKind = MCK_SGPR_128; break;
    case AMDGPU::SGPR0_SGPR1_SGPR2_SGPR3_SGPR4_SGPR5_SGPR6_SGPR7: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR4_SGPR5_SGPR6_SGPR7_SGPR8_SGPR9_SGPR10_SGPR11: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR8_SGPR9_SGPR10_SGPR11_SGPR12_SGPR13_SGPR14_SGPR15: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR12_SGPR13_SGPR14_SGPR15_SGPR16_SGPR17_SGPR18_SGPR19: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR16_SGPR17_SGPR18_SGPR19_SGPR20_SGPR21_SGPR22_SGPR23: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR20_SGPR21_SGPR22_SGPR23_SGPR24_SGPR25_SGPR26_SGPR27: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR24_SGPR25_SGPR26_SGPR27_SGPR28_SGPR29_SGPR30_SGPR31: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR28_SGPR29_SGPR30_SGPR31_SGPR32_SGPR33_SGPR34_SGPR35: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR32_SGPR33_SGPR34_SGPR35_SGPR36_SGPR37_SGPR38_SGPR39: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR36_SGPR37_SGPR38_SGPR39_SGPR40_SGPR41_SGPR42_SGPR43: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR40_SGPR41_SGPR42_SGPR43_SGPR44_SGPR45_SGPR46_SGPR47: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR44_SGPR45_SGPR46_SGPR47_SGPR48_SGPR49_SGPR50_SGPR51: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR48_SGPR49_SGPR50_SGPR51_SGPR52_SGPR53_SGPR54_SGPR55: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR52_SGPR53_SGPR54_SGPR55_SGPR56_SGPR57_SGPR58_SGPR59: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR56_SGPR57_SGPR58_SGPR59_SGPR60_SGPR61_SGPR62_SGPR63: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR60_SGPR61_SGPR62_SGPR63_SGPR64_SGPR65_SGPR66_SGPR67: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR64_SGPR65_SGPR66_SGPR67_SGPR68_SGPR69_SGPR70_SGPR71: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR68_SGPR69_SGPR70_SGPR71_SGPR72_SGPR73_SGPR74_SGPR75: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR72_SGPR73_SGPR74_SGPR75_SGPR76_SGPR77_SGPR78_SGPR79: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR76_SGPR77_SGPR78_SGPR79_SGPR80_SGPR81_SGPR82_SGPR83: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR80_SGPR81_SGPR82_SGPR83_SGPR84_SGPR85_SGPR86_SGPR87: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR84_SGPR85_SGPR86_SGPR87_SGPR88_SGPR89_SGPR90_SGPR91: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR88_SGPR89_SGPR90_SGPR91_SGPR92_SGPR93_SGPR94_SGPR95: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR92_SGPR93_SGPR94_SGPR95_SGPR96_SGPR97_SGPR98_SGPR99: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR96_SGPR97_SGPR98_SGPR99_SGPR100_SGPR101_SGPR102_SGPR103: OpKind = MCK_SReg_256; break;
    case AMDGPU::SGPR0_SGPR1_SGPR2_SGPR3_SGPR4_SGPR5_SGPR6_SGPR7_SGPR8_SGPR9_SGPR10_SGPR11_SGPR12_SGPR13_SGPR14_SGPR15: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR4_SGPR5_SGPR6_SGPR7_SGPR8_SGPR9_SGPR10_SGPR11_SGPR12_SGPR13_SGPR14_SGPR15_SGPR16_SGPR17_SGPR18_SGPR19: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR8_SGPR9_SGPR10_SGPR11_SGPR12_SGPR13_SGPR14_SGPR15_SGPR16_SGPR17_SGPR18_SGPR19_SGPR20_SGPR21_SGPR22_SGPR23: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR12_SGPR13_SGPR14_SGPR15_SGPR16_SGPR17_SGPR18_SGPR19_SGPR20_SGPR21_SGPR22_SGPR23_SGPR24_SGPR25_SGPR26_SGPR27: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR16_SGPR17_SGPR18_SGPR19_SGPR20_SGPR21_SGPR22_SGPR23_SGPR24_SGPR25_SGPR26_SGPR27_SGPR28_SGPR29_SGPR30_SGPR31: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR20_SGPR21_SGPR22_SGPR23_SGPR24_SGPR25_SGPR26_SGPR27_SGPR28_SGPR29_SGPR30_SGPR31_SGPR32_SGPR33_SGPR34_SGPR35: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR24_SGPR25_SGPR26_SGPR27_SGPR28_SGPR29_SGPR30_SGPR31_SGPR32_SGPR33_SGPR34_SGPR35_SGPR36_SGPR37_SGPR38_SGPR39: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR28_SGPR29_SGPR30_SGPR31_SGPR32_SGPR33_SGPR34_SGPR35_SGPR36_SGPR37_SGPR38_SGPR39_SGPR40_SGPR41_SGPR42_SGPR43: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR32_SGPR33_SGPR34_SGPR35_SGPR36_SGPR37_SGPR38_SGPR39_SGPR40_SGPR41_SGPR42_SGPR43_SGPR44_SGPR45_SGPR46_SGPR47: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR36_SGPR37_SGPR38_SGPR39_SGPR40_SGPR41_SGPR42_SGPR43_SGPR44_SGPR45_SGPR46_SGPR47_SGPR48_SGPR49_SGPR50_SGPR51: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR40_SGPR41_SGPR42_SGPR43_SGPR44_SGPR45_SGPR46_SGPR47_SGPR48_SGPR49_SGPR50_SGPR51_SGPR52_SGPR53_SGPR54_SGPR55: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR44_SGPR45_SGPR46_SGPR47_SGPR48_SGPR49_SGPR50_SGPR51_SGPR52_SGPR53_SGPR54_SGPR55_SGPR56_SGPR57_SGPR58_SGPR59: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR48_SGPR49_SGPR50_SGPR51_SGPR52_SGPR53_SGPR54_SGPR55_SGPR56_SGPR57_SGPR58_SGPR59_SGPR60_SGPR61_SGPR62_SGPR63: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR52_SGPR53_SGPR54_SGPR55_SGPR56_SGPR57_SGPR58_SGPR59_SGPR60_SGPR61_SGPR62_SGPR63_SGPR64_SGPR65_SGPR66_SGPR67: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR56_SGPR57_SGPR58_SGPR59_SGPR60_SGPR61_SGPR62_SGPR63_SGPR64_SGPR65_SGPR66_SGPR67_SGPR68_SGPR69_SGPR70_SGPR71: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR60_SGPR61_SGPR62_SGPR63_SGPR64_SGPR65_SGPR66_SGPR67_SGPR68_SGPR69_SGPR70_SGPR71_SGPR72_SGPR73_SGPR74_SGPR75: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR64_SGPR65_SGPR66_SGPR67_SGPR68_SGPR69_SGPR70_SGPR71_SGPR72_SGPR73_SGPR74_SGPR75_SGPR76_SGPR77_SGPR78_SGPR79: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR68_SGPR69_SGPR70_SGPR71_SGPR72_SGPR73_SGPR74_SGPR75_SGPR76_SGPR77_SGPR78_SGPR79_SGPR80_SGPR81_SGPR82_SGPR83: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR72_SGPR73_SGPR74_SGPR75_SGPR76_SGPR77_SGPR78_SGPR79_SGPR80_SGPR81_SGPR82_SGPR83_SGPR84_SGPR85_SGPR86_SGPR87: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR76_SGPR77_SGPR78_SGPR79_SGPR80_SGPR81_SGPR82_SGPR83_SGPR84_SGPR85_SGPR86_SGPR87_SGPR88_SGPR89_SGPR90_SGPR91: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR80_SGPR81_SGPR82_SGPR83_SGPR84_SGPR85_SGPR86_SGPR87_SGPR88_SGPR89_SGPR90_SGPR91_SGPR92_SGPR93_SGPR94_SGPR95: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR84_SGPR85_SGPR86_SGPR87_SGPR88_SGPR89_SGPR90_SGPR91_SGPR92_SGPR93_SGPR94_SGPR95_SGPR96_SGPR97_SGPR98_SGPR99: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR88_SGPR89_SGPR90_SGPR91_SGPR92_SGPR93_SGPR94_SGPR95_SGPR96_SGPR97_SGPR98_SGPR99_SGPR100_SGPR101_SGPR102_SGPR103: OpKind = MCK_SReg_512; break;
    case AMDGPU::SGPR0_SGPR1: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR2_SGPR3: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR4_SGPR5: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR6_SGPR7: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR8_SGPR9: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR10_SGPR11: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR12_SGPR13: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR14_SGPR15: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR16_SGPR17: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR18_SGPR19: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR20_SGPR21: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR22_SGPR23: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR24_SGPR25: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR26_SGPR27: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR28_SGPR29: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR30_SGPR31: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR32_SGPR33: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR34_SGPR35: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR36_SGPR37: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR38_SGPR39: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR40_SGPR41: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR42_SGPR43: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR44_SGPR45: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR46_SGPR47: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR48_SGPR49: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR50_SGPR51: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR52_SGPR53: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR54_SGPR55: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR56_SGPR57: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR58_SGPR59: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR60_SGPR61: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR62_SGPR63: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR64_SGPR65: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR66_SGPR67: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR68_SGPR69: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR70_SGPR71: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR72_SGPR73: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR74_SGPR75: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR76_SGPR77: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR78_SGPR79: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR80_SGPR81: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR82_SGPR83: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR84_SGPR85: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR86_SGPR87: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR88_SGPR89: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR90_SGPR91: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR92_SGPR93: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR94_SGPR95: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR96_SGPR97: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR98_SGPR99: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR100_SGPR101: OpKind = MCK_SGPR_64; break;
    case AMDGPU::SGPR102_SGPR103: OpKind = MCK_SGPR_64; break;
    case AMDGPU::TTMP0_TTMP1_TTMP2_TTMP3: OpKind = MCK_TTMP_128; break;
    case AMDGPU::TTMP4_TTMP5_TTMP6_TTMP7: OpKind = MCK_TTMP_128; break;
    case AMDGPU::TTMP8_TTMP9_TTMP10_TTMP11: OpKind = MCK_TTMP_128; break;
    case AMDGPU::TTMP0_TTMP1: OpKind = MCK_TTMP_64; break;
    case AMDGPU::TTMP2_TTMP3: OpKind = MCK_TTMP_64; break;
    case AMDGPU::TTMP4_TTMP5: OpKind = MCK_TTMP_64; break;
    case AMDGPU::TTMP6_TTMP7: OpKind = MCK_TTMP_64; break;
    case AMDGPU::TTMP8_TTMP9: OpKind = MCK_TTMP_64; break;
    case AMDGPU::TTMP10_TTMP11: OpKind = MCK_TTMP_64; break;
    case AMDGPU::VGPR0_VGPR1_VGPR2_VGPR3: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR1_VGPR2_VGPR3_VGPR4: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR2_VGPR3_VGPR4_VGPR5: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR3_VGPR4_VGPR5_VGPR6: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR4_VGPR5_VGPR6_VGPR7: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR5_VGPR6_VGPR7_VGPR8: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR6_VGPR7_VGPR8_VGPR9: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR7_VGPR8_VGPR9_VGPR10: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR8_VGPR9_VGPR10_VGPR11: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR9_VGPR10_VGPR11_VGPR12: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR10_VGPR11_VGPR12_VGPR13: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR11_VGPR12_VGPR13_VGPR14: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR12_VGPR13_VGPR14_VGPR15: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR13_VGPR14_VGPR15_VGPR16: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR14_VGPR15_VGPR16_VGPR17: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR15_VGPR16_VGPR17_VGPR18: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR16_VGPR17_VGPR18_VGPR19: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR17_VGPR18_VGPR19_VGPR20: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR18_VGPR19_VGPR20_VGPR21: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR19_VGPR20_VGPR21_VGPR22: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR20_VGPR21_VGPR22_VGPR23: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR21_VGPR22_VGPR23_VGPR24: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR22_VGPR23_VGPR24_VGPR25: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR23_VGPR24_VGPR25_VGPR26: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR24_VGPR25_VGPR26_VGPR27: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR25_VGPR26_VGPR27_VGPR28: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR26_VGPR27_VGPR28_VGPR29: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR27_VGPR28_VGPR29_VGPR30: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR28_VGPR29_VGPR30_VGPR31: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR29_VGPR30_VGPR31_VGPR32: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR30_VGPR31_VGPR32_VGPR33: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR31_VGPR32_VGPR33_VGPR34: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR32_VGPR33_VGPR34_VGPR35: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR33_VGPR34_VGPR35_VGPR36: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR34_VGPR35_VGPR36_VGPR37: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR35_VGPR36_VGPR37_VGPR38: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR36_VGPR37_VGPR38_VGPR39: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR37_VGPR38_VGPR39_VGPR40: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR38_VGPR39_VGPR40_VGPR41: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR39_VGPR40_VGPR41_VGPR42: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR40_VGPR41_VGPR42_VGPR43: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR41_VGPR42_VGPR43_VGPR44: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR42_VGPR43_VGPR44_VGPR45: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR43_VGPR44_VGPR45_VGPR46: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR44_VGPR45_VGPR46_VGPR47: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR45_VGPR46_VGPR47_VGPR48: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR46_VGPR47_VGPR48_VGPR49: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR47_VGPR48_VGPR49_VGPR50: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR48_VGPR49_VGPR50_VGPR51: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR49_VGPR50_VGPR51_VGPR52: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR50_VGPR51_VGPR52_VGPR53: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR51_VGPR52_VGPR53_VGPR54: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR52_VGPR53_VGPR54_VGPR55: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR53_VGPR54_VGPR55_VGPR56: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR54_VGPR55_VGPR56_VGPR57: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR55_VGPR56_VGPR57_VGPR58: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR56_VGPR57_VGPR58_VGPR59: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR57_VGPR58_VGPR59_VGPR60: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR58_VGPR59_VGPR60_VGPR61: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR59_VGPR60_VGPR61_VGPR62: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR60_VGPR61_VGPR62_VGPR63: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR61_VGPR62_VGPR63_VGPR64: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR62_VGPR63_VGPR64_VGPR65: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR63_VGPR64_VGPR65_VGPR66: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR64_VGPR65_VGPR66_VGPR67: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR65_VGPR66_VGPR67_VGPR68: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR66_VGPR67_VGPR68_VGPR69: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR67_VGPR68_VGPR69_VGPR70: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR68_VGPR69_VGPR70_VGPR71: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR69_VGPR70_VGPR71_VGPR72: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR70_VGPR71_VGPR72_VGPR73: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR71_VGPR72_VGPR73_VGPR74: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR72_VGPR73_VGPR74_VGPR75: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR73_VGPR74_VGPR75_VGPR76: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR74_VGPR75_VGPR76_VGPR77: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR75_VGPR76_VGPR77_VGPR78: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR76_VGPR77_VGPR78_VGPR79: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR77_VGPR78_VGPR79_VGPR80: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR78_VGPR79_VGPR80_VGPR81: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR79_VGPR80_VGPR81_VGPR82: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR80_VGPR81_VGPR82_VGPR83: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR81_VGPR82_VGPR83_VGPR84: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR82_VGPR83_VGPR84_VGPR85: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR83_VGPR84_VGPR85_VGPR86: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR84_VGPR85_VGPR86_VGPR87: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR85_VGPR86_VGPR87_VGPR88: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR86_VGPR87_VGPR88_VGPR89: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR87_VGPR88_VGPR89_VGPR90: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR88_VGPR89_VGPR90_VGPR91: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR89_VGPR90_VGPR91_VGPR92: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR90_VGPR91_VGPR92_VGPR93: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR91_VGPR92_VGPR93_VGPR94: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR92_VGPR93_VGPR94_VGPR95: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR93_VGPR94_VGPR95_VGPR96: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR94_VGPR95_VGPR96_VGPR97: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR95_VGPR96_VGPR97_VGPR98: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR96_VGPR97_VGPR98_VGPR99: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR97_VGPR98_VGPR99_VGPR100: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR98_VGPR99_VGPR100_VGPR101: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR99_VGPR100_VGPR101_VGPR102: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR100_VGPR101_VGPR102_VGPR103: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR101_VGPR102_VGPR103_VGPR104: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR102_VGPR103_VGPR104_VGPR105: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR103_VGPR104_VGPR105_VGPR106: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR104_VGPR105_VGPR106_VGPR107: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR105_VGPR106_VGPR107_VGPR108: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR106_VGPR107_VGPR108_VGPR109: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR107_VGPR108_VGPR109_VGPR110: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR108_VGPR109_VGPR110_VGPR111: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR109_VGPR110_VGPR111_VGPR112: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR110_VGPR111_VGPR112_VGPR113: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR111_VGPR112_VGPR113_VGPR114: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR112_VGPR113_VGPR114_VGPR115: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR113_VGPR114_VGPR115_VGPR116: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR114_VGPR115_VGPR116_VGPR117: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR115_VGPR116_VGPR117_VGPR118: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR116_VGPR117_VGPR118_VGPR119: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR117_VGPR118_VGPR119_VGPR120: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR118_VGPR119_VGPR120_VGPR121: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR119_VGPR120_VGPR121_VGPR122: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR120_VGPR121_VGPR122_VGPR123: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR121_VGPR122_VGPR123_VGPR124: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR122_VGPR123_VGPR124_VGPR125: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR123_VGPR124_VGPR125_VGPR126: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR124_VGPR125_VGPR126_VGPR127: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR125_VGPR126_VGPR127_VGPR128: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR126_VGPR127_VGPR128_VGPR129: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR127_VGPR128_VGPR129_VGPR130: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR128_VGPR129_VGPR130_VGPR131: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR129_VGPR130_VGPR131_VGPR132: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR130_VGPR131_VGPR132_VGPR133: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR131_VGPR132_VGPR133_VGPR134: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR132_VGPR133_VGPR134_VGPR135: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR133_VGPR134_VGPR135_VGPR136: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR134_VGPR135_VGPR136_VGPR137: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR135_VGPR136_VGPR137_VGPR138: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR136_VGPR137_VGPR138_VGPR139: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR137_VGPR138_VGPR139_VGPR140: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR138_VGPR139_VGPR140_VGPR141: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR139_VGPR140_VGPR141_VGPR142: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR140_VGPR141_VGPR142_VGPR143: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR141_VGPR142_VGPR143_VGPR144: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR142_VGPR143_VGPR144_VGPR145: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR143_VGPR144_VGPR145_VGPR146: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR144_VGPR145_VGPR146_VGPR147: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR145_VGPR146_VGPR147_VGPR148: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR146_VGPR147_VGPR148_VGPR149: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR147_VGPR148_VGPR149_VGPR150: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR148_VGPR149_VGPR150_VGPR151: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR149_VGPR150_VGPR151_VGPR152: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR150_VGPR151_VGPR152_VGPR153: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR151_VGPR152_VGPR153_VGPR154: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR152_VGPR153_VGPR154_VGPR155: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR153_VGPR154_VGPR155_VGPR156: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR154_VGPR155_VGPR156_VGPR157: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR155_VGPR156_VGPR157_VGPR158: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR156_VGPR157_VGPR158_VGPR159: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR157_VGPR158_VGPR159_VGPR160: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR158_VGPR159_VGPR160_VGPR161: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR159_VGPR160_VGPR161_VGPR162: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR160_VGPR161_VGPR162_VGPR163: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR161_VGPR162_VGPR163_VGPR164: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR162_VGPR163_VGPR164_VGPR165: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR163_VGPR164_VGPR165_VGPR166: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR164_VGPR165_VGPR166_VGPR167: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR165_VGPR166_VGPR167_VGPR168: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR166_VGPR167_VGPR168_VGPR169: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR167_VGPR168_VGPR169_VGPR170: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR168_VGPR169_VGPR170_VGPR171: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR169_VGPR170_VGPR171_VGPR172: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR170_VGPR171_VGPR172_VGPR173: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR171_VGPR172_VGPR173_VGPR174: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR172_VGPR173_VGPR174_VGPR175: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR173_VGPR174_VGPR175_VGPR176: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR174_VGPR175_VGPR176_VGPR177: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR175_VGPR176_VGPR177_VGPR178: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR176_VGPR177_VGPR178_VGPR179: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR177_VGPR178_VGPR179_VGPR180: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR178_VGPR179_VGPR180_VGPR181: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR179_VGPR180_VGPR181_VGPR182: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR180_VGPR181_VGPR182_VGPR183: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR181_VGPR182_VGPR183_VGPR184: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR182_VGPR183_VGPR184_VGPR185: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR183_VGPR184_VGPR185_VGPR186: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR184_VGPR185_VGPR186_VGPR187: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR185_VGPR186_VGPR187_VGPR188: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR186_VGPR187_VGPR188_VGPR189: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR187_VGPR188_VGPR189_VGPR190: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR188_VGPR189_VGPR190_VGPR191: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR189_VGPR190_VGPR191_VGPR192: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR190_VGPR191_VGPR192_VGPR193: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR191_VGPR192_VGPR193_VGPR194: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR192_VGPR193_VGPR194_VGPR195: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR193_VGPR194_VGPR195_VGPR196: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR194_VGPR195_VGPR196_VGPR197: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR195_VGPR196_VGPR197_VGPR198: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR196_VGPR197_VGPR198_VGPR199: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR197_VGPR198_VGPR199_VGPR200: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR198_VGPR199_VGPR200_VGPR201: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR199_VGPR200_VGPR201_VGPR202: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR200_VGPR201_VGPR202_VGPR203: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR201_VGPR202_VGPR203_VGPR204: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR202_VGPR203_VGPR204_VGPR205: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR203_VGPR204_VGPR205_VGPR206: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR204_VGPR205_VGPR206_VGPR207: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR205_VGPR206_VGPR207_VGPR208: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR206_VGPR207_VGPR208_VGPR209: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR207_VGPR208_VGPR209_VGPR210: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR208_VGPR209_VGPR210_VGPR211: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR209_VGPR210_VGPR211_VGPR212: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR210_VGPR211_VGPR212_VGPR213: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR211_VGPR212_VGPR213_VGPR214: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR212_VGPR213_VGPR214_VGPR215: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR213_VGPR214_VGPR215_VGPR216: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR214_VGPR215_VGPR216_VGPR217: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR215_VGPR216_VGPR217_VGPR218: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR216_VGPR217_VGPR218_VGPR219: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR217_VGPR218_VGPR219_VGPR220: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR218_VGPR219_VGPR220_VGPR221: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR219_VGPR220_VGPR221_VGPR222: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR220_VGPR221_VGPR222_VGPR223: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR221_VGPR222_VGPR223_VGPR224: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR222_VGPR223_VGPR224_VGPR225: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR223_VGPR224_VGPR225_VGPR226: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR224_VGPR225_VGPR226_VGPR227: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR225_VGPR226_VGPR227_VGPR228: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR226_VGPR227_VGPR228_VGPR229: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR227_VGPR228_VGPR229_VGPR230: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR228_VGPR229_VGPR230_VGPR231: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR229_VGPR230_VGPR231_VGPR232: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR230_VGPR231_VGPR232_VGPR233: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR231_VGPR232_VGPR233_VGPR234: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR232_VGPR233_VGPR234_VGPR235: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR233_VGPR234_VGPR235_VGPR236: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR234_VGPR235_VGPR236_VGPR237: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR235_VGPR236_VGPR237_VGPR238: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR236_VGPR237_VGPR238_VGPR239: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR237_VGPR238_VGPR239_VGPR240: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR238_VGPR239_VGPR240_VGPR241: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR239_VGPR240_VGPR241_VGPR242: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR240_VGPR241_VGPR242_VGPR243: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR241_VGPR242_VGPR243_VGPR244: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR242_VGPR243_VGPR244_VGPR245: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR243_VGPR244_VGPR245_VGPR246: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR244_VGPR245_VGPR246_VGPR247: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR245_VGPR246_VGPR247_VGPR248: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR246_VGPR247_VGPR248_VGPR249: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR247_VGPR248_VGPR249_VGPR250: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR248_VGPR249_VGPR250_VGPR251: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR249_VGPR250_VGPR251_VGPR252: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR250_VGPR251_VGPR252_VGPR253: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR251_VGPR252_VGPR253_VGPR254: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR252_VGPR253_VGPR254_VGPR255: OpKind = MCK_VReg_128; break;
    case AMDGPU::VGPR0_VGPR1_VGPR2_VGPR3_VGPR4_VGPR5_VGPR6_VGPR7: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR1_VGPR2_VGPR3_VGPR4_VGPR5_VGPR6_VGPR7_VGPR8: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR2_VGPR3_VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR3_VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251_VGPR252: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251_VGPR252_VGPR253: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR247_VGPR248_VGPR249_VGPR250_VGPR251_VGPR252_VGPR253_VGPR254: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR248_VGPR249_VGPR250_VGPR251_VGPR252_VGPR253_VGPR254_VGPR255: OpKind = MCK_VReg_256; break;
    case AMDGPU::VGPR0_VGPR1_VGPR2_VGPR3_VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR1_VGPR2_VGPR3_VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR2_VGPR3_VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR3_VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR4_VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR5_VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR6_VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR7_VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR8_VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR9_VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR10_VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR11_VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR12_VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR13_VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR14_VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR15_VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR16_VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR17_VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR18_VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR19_VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR20_VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR21_VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR22_VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR23_VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR24_VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR25_VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR26_VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR27_VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR28_VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR29_VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR30_VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR31_VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR32_VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR33_VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR34_VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR35_VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR36_VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR37_VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR38_VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR39_VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR40_VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR41_VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR42_VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR43_VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR44_VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR45_VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR46_VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR47_VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR48_VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR49_VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR50_VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR51_VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR52_VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR53_VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR54_VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR55_VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR56_VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR57_VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR58_VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR59_VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR60_VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR61_VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR62_VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR63_VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR64_VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR65_VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR66_VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR67_VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR68_VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR69_VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR70_VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR71_VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR72_VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR73_VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR74_VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR75_VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR76_VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR77_VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR78_VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR79_VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR80_VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR81_VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR82_VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR83_VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR84_VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR85_VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR86_VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR87_VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR88_VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR89_VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR90_VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR91_VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR92_VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR93_VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR94_VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR95_VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR96_VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR97_VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR98_VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR99_VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR100_VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR101_VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR102_VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR103_VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR104_VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR105_VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR106_VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR107_VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR108_VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR109_VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR110_VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR111_VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR112_VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR113_VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR114_VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR115_VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR116_VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR117_VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR118_VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR119_VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR120_VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR121_VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR122_VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR123_VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR124_VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR125_VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR126_VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR127_VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR128_VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR129_VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR130_VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR131_VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR132_VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR133_VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR134_VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR135_VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR136_VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR137_VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR138_VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR139_VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR140_VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR141_VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR142_VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR143_VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR144_VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR145_VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR146_VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR147_VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR148_VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR149_VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR150_VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR151_VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR152_VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR153_VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR154_VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR155_VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR156_VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR157_VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR158_VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR159_VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR160_VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR161_VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR162_VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR163_VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR164_VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR165_VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR166_VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR167_VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR168_VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR169_VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR170_VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR171_VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR172_VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR173_VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR174_VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR175_VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR176_VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR177_VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR178_VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR179_VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR180_VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR181_VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR182_VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR183_VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR184_VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR185_VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR186_VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR187_VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR188_VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR189_VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR190_VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR191_VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR192_VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR193_VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR194_VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR195_VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR196_VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR197_VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR198_VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR199_VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR200_VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR201_VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR202_VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR203_VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR204_VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR205_VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR206_VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR207_VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR208_VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR209_VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR210_VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR211_VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR212_VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR213_VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR214_VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR215_VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR216_VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR217_VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR218_VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR219_VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR220_VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR221_VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR222_VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR223_VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR224_VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR225_VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR226_VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR227_VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR228_VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR229_VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR230_VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR231_VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR232_VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR233_VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR234_VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR235_VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR236_VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR237_VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251_VGPR252: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR238_VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251_VGPR252_VGPR253: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR239_VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251_VGPR252_VGPR253_VGPR254: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR240_VGPR241_VGPR242_VGPR243_VGPR244_VGPR245_VGPR246_VGPR247_VGPR248_VGPR249_VGPR250_VGPR251_VGPR252_VGPR253_VGPR254_VGPR255: OpKind = MCK_VReg_512; break;
    case AMDGPU::VGPR0_VGPR1: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR1_VGPR2: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR2_VGPR3: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR3_VGPR4: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR4_VGPR5: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR5_VGPR6: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR6_VGPR7: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR7_VGPR8: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR8_VGPR9: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR9_VGPR10: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR10_VGPR11: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR11_VGPR12: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR12_VGPR13: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR13_VGPR14: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR14_VGPR15: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR15_VGPR16: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR16_VGPR17: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR17_VGPR18: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR18_VGPR19: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR19_VGPR20: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR20_VGPR21: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR21_VGPR22: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR22_VGPR23: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR23_VGPR24: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR24_VGPR25: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR25_VGPR26: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR26_VGPR27: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR27_VGPR28: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR28_VGPR29: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR29_VGPR30: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR30_VGPR31: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR31_VGPR32: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR32_VGPR33: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR33_VGPR34: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR34_VGPR35: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR35_VGPR36: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR36_VGPR37: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR37_VGPR38: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR38_VGPR39: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR39_VGPR40: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR40_VGPR41: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR41_VGPR42: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR42_VGPR43: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR43_VGPR44: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR44_VGPR45: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR45_VGPR46: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR46_VGPR47: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR47_VGPR48: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR48_VGPR49: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR49_VGPR50: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR50_VGPR51: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR51_VGPR52: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR52_VGPR53: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR53_VGPR54: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR54_VGPR55: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR55_VGPR56: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR56_VGPR57: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR57_VGPR58: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR58_VGPR59: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR59_VGPR60: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR60_VGPR61: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR61_VGPR62: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR62_VGPR63: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR63_VGPR64: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR64_VGPR65: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR65_VGPR66: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR66_VGPR67: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR67_VGPR68: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR68_VGPR69: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR69_VGPR70: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR70_VGPR71: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR71_VGPR72: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR72_VGPR73: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR73_VGPR74: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR74_VGPR75: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR75_VGPR76: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR76_VGPR77: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR77_VGPR78: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR78_VGPR79: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR79_VGPR80: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR80_VGPR81: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR81_VGPR82: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR82_VGPR83: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR83_VGPR84: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR84_VGPR85: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR85_VGPR86: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR86_VGPR87: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR87_VGPR88: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR88_VGPR89: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR89_VGPR90: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR90_VGPR91: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR91_VGPR92: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR92_VGPR93: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR93_VGPR94: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR94_VGPR95: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR95_VGPR96: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR96_VGPR97: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR97_VGPR98: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR98_VGPR99: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR99_VGPR100: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR100_VGPR101: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR101_VGPR102: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR102_VGPR103: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR103_VGPR104: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR104_VGPR105: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR105_VGPR106: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR106_VGPR107: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR107_VGPR108: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR108_VGPR109: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR109_VGPR110: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR110_VGPR111: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR111_VGPR112: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR112_VGPR113: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR113_VGPR114: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR114_VGPR115: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR115_VGPR116: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR116_VGPR117: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR117_VGPR118: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR118_VGPR119: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR119_VGPR120: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR120_VGPR121: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR121_VGPR122: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR122_VGPR123: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR123_VGPR124: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR124_VGPR125: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR125_VGPR126: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR126_VGPR127: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR127_VGPR128: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR128_VGPR129: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR129_VGPR130: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR130_VGPR131: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR131_VGPR132: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR132_VGPR133: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR133_VGPR134: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR134_VGPR135: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR135_VGPR136: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR136_VGPR137: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR137_VGPR138: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR138_VGPR139: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR139_VGPR140: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR140_VGPR141: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR141_VGPR142: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR142_VGPR143: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR143_VGPR144: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR144_VGPR145: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR145_VGPR146: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR146_VGPR147: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR147_VGPR148: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR148_VGPR149: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR149_VGPR150: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR150_VGPR151: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR151_VGPR152: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR152_VGPR153: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR153_VGPR154: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR154_VGPR155: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR155_VGPR156: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR156_VGPR157: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR157_VGPR158: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR158_VGPR159: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR159_VGPR160: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR160_VGPR161: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR161_VGPR162: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR162_VGPR163: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR163_VGPR164: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR164_VGPR165: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR165_VGPR166: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR166_VGPR167: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR167_VGPR168: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR168_VGPR169: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR169_VGPR170: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR170_VGPR171: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR171_VGPR172: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR172_VGPR173: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR173_VGPR174: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR174_VGPR175: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR175_VGPR176: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR176_VGPR177: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR177_VGPR178: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR178_VGPR179: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR179_VGPR180: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR180_VGPR181: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR181_VGPR182: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR182_VGPR183: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR183_VGPR184: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR184_VGPR185: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR185_VGPR186: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR186_VGPR187: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR187_VGPR188: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR188_VGPR189: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR189_VGPR190: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR190_VGPR191: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR191_VGPR192: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR192_VGPR193: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR193_VGPR194: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR194_VGPR195: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR195_VGPR196: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR196_VGPR197: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR197_VGPR198: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR198_VGPR199: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR199_VGPR200: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR200_VGPR201: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR201_VGPR202: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR202_VGPR203: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR203_VGPR204: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR204_VGPR205: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR205_VGPR206: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR206_VGPR207: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR207_VGPR208: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR208_VGPR209: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR209_VGPR210: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR210_VGPR211: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR211_VGPR212: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR212_VGPR213: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR213_VGPR214: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR214_VGPR215: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR215_VGPR216: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR216_VGPR217: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR217_VGPR218: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR218_VGPR219: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR219_VGPR220: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR220_VGPR221: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR221_VGPR222: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR222_VGPR223: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR223_VGPR224: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR224_VGPR225: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR225_VGPR226: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR226_VGPR227: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR227_VGPR228: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR228_VGPR229: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR229_VGPR230: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR230_VGPR231: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR231_VGPR232: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR232_VGPR233: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR233_VGPR234: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR234_VGPR235: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR235_VGPR236: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR236_VGPR237: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR237_VGPR238: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR238_VGPR239: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR239_VGPR240: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR240_VGPR241: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR241_VGPR242: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR242_VGPR243: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR243_VGPR244: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR244_VGPR245: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR245_VGPR246: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR246_VGPR247: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR247_VGPR248: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR248_VGPR249: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR249_VGPR250: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR250_VGPR251: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR251_VGPR252: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR252_VGPR253: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR253_VGPR254: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR254_VGPR255: OpKind = MCK_VReg_64; break;
    case AMDGPU::VGPR0_VGPR1_VGPR2: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR1_VGPR2_VGPR3: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR2_VGPR3_VGPR4: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR3_VGPR4_VGPR5: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR4_VGPR5_VGPR6: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR5_VGPR6_VGPR7: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR6_VGPR7_VGPR8: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR7_VGPR8_VGPR9: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR8_VGPR9_VGPR10: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR9_VGPR10_VGPR11: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR10_VGPR11_VGPR12: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR11_VGPR12_VGPR13: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR12_VGPR13_VGPR14: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR13_VGPR14_VGPR15: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR14_VGPR15_VGPR16: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR15_VGPR16_VGPR17: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR16_VGPR17_VGPR18: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR17_VGPR18_VGPR19: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR18_VGPR19_VGPR20: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR19_VGPR20_VGPR21: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR20_VGPR21_VGPR22: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR21_VGPR22_VGPR23: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR22_VGPR23_VGPR24: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR23_VGPR24_VGPR25: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR24_VGPR25_VGPR26: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR25_VGPR26_VGPR27: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR26_VGPR27_VGPR28: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR27_VGPR28_VGPR29: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR28_VGPR29_VGPR30: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR29_VGPR30_VGPR31: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR30_VGPR31_VGPR32: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR31_VGPR32_VGPR33: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR32_VGPR33_VGPR34: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR33_VGPR34_VGPR35: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR34_VGPR35_VGPR36: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR35_VGPR36_VGPR37: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR36_VGPR37_VGPR38: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR37_VGPR38_VGPR39: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR38_VGPR39_VGPR40: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR39_VGPR40_VGPR41: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR40_VGPR41_VGPR42: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR41_VGPR42_VGPR43: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR42_VGPR43_VGPR44: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR43_VGPR44_VGPR45: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR44_VGPR45_VGPR46: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR45_VGPR46_VGPR47: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR46_VGPR47_VGPR48: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR47_VGPR48_VGPR49: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR48_VGPR49_VGPR50: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR49_VGPR50_VGPR51: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR50_VGPR51_VGPR52: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR51_VGPR52_VGPR53: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR52_VGPR53_VGPR54: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR53_VGPR54_VGPR55: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR54_VGPR55_VGPR56: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR55_VGPR56_VGPR57: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR56_VGPR57_VGPR58: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR57_VGPR58_VGPR59: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR58_VGPR59_VGPR60: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR59_VGPR60_VGPR61: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR60_VGPR61_VGPR62: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR61_VGPR62_VGPR63: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR62_VGPR63_VGPR64: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR63_VGPR64_VGPR65: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR64_VGPR65_VGPR66: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR65_VGPR66_VGPR67: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR66_VGPR67_VGPR68: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR67_VGPR68_VGPR69: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR68_VGPR69_VGPR70: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR69_VGPR70_VGPR71: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR70_VGPR71_VGPR72: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR71_VGPR72_VGPR73: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR72_VGPR73_VGPR74: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR73_VGPR74_VGPR75: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR74_VGPR75_VGPR76: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR75_VGPR76_VGPR77: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR76_VGPR77_VGPR78: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR77_VGPR78_VGPR79: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR78_VGPR79_VGPR80: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR79_VGPR80_VGPR81: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR80_VGPR81_VGPR82: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR81_VGPR82_VGPR83: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR82_VGPR83_VGPR84: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR83_VGPR84_VGPR85: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR84_VGPR85_VGPR86: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR85_VGPR86_VGPR87: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR86_VGPR87_VGPR88: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR87_VGPR88_VGPR89: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR88_VGPR89_VGPR90: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR89_VGPR90_VGPR91: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR90_VGPR91_VGPR92: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR91_VGPR92_VGPR93: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR92_VGPR93_VGPR94: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR93_VGPR94_VGPR95: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR94_VGPR95_VGPR96: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR95_VGPR96_VGPR97: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR96_VGPR97_VGPR98: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR97_VGPR98_VGPR99: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR98_VGPR99_VGPR100: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR99_VGPR100_VGPR101: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR100_VGPR101_VGPR102: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR101_VGPR102_VGPR103: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR102_VGPR103_VGPR104: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR103_VGPR104_VGPR105: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR104_VGPR105_VGPR106: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR105_VGPR106_VGPR107: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR106_VGPR107_VGPR108: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR107_VGPR108_VGPR109: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR108_VGPR109_VGPR110: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR109_VGPR110_VGPR111: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR110_VGPR111_VGPR112: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR111_VGPR112_VGPR113: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR112_VGPR113_VGPR114: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR113_VGPR114_VGPR115: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR114_VGPR115_VGPR116: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR115_VGPR116_VGPR117: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR116_VGPR117_VGPR118: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR117_VGPR118_VGPR119: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR118_VGPR119_VGPR120: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR119_VGPR120_VGPR121: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR120_VGPR121_VGPR122: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR121_VGPR122_VGPR123: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR122_VGPR123_VGPR124: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR123_VGPR124_VGPR125: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR124_VGPR125_VGPR126: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR125_VGPR126_VGPR127: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR126_VGPR127_VGPR128: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR127_VGPR128_VGPR129: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR128_VGPR129_VGPR130: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR129_VGPR130_VGPR131: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR130_VGPR131_VGPR132: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR131_VGPR132_VGPR133: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR132_VGPR133_VGPR134: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR133_VGPR134_VGPR135: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR134_VGPR135_VGPR136: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR135_VGPR136_VGPR137: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR136_VGPR137_VGPR138: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR137_VGPR138_VGPR139: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR138_VGPR139_VGPR140: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR139_VGPR140_VGPR141: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR140_VGPR141_VGPR142: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR141_VGPR142_VGPR143: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR142_VGPR143_VGPR144: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR143_VGPR144_VGPR145: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR144_VGPR145_VGPR146: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR145_VGPR146_VGPR147: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR146_VGPR147_VGPR148: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR147_VGPR148_VGPR149: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR148_VGPR149_VGPR150: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR149_VGPR150_VGPR151: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR150_VGPR151_VGPR152: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR151_VGPR152_VGPR153: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR152_VGPR153_VGPR154: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR153_VGPR154_VGPR155: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR154_VGPR155_VGPR156: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR155_VGPR156_VGPR157: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR156_VGPR157_VGPR158: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR157_VGPR158_VGPR159: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR158_VGPR159_VGPR160: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR159_VGPR160_VGPR161: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR160_VGPR161_VGPR162: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR161_VGPR162_VGPR163: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR162_VGPR163_VGPR164: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR163_VGPR164_VGPR165: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR164_VGPR165_VGPR166: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR165_VGPR166_VGPR167: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR166_VGPR167_VGPR168: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR167_VGPR168_VGPR169: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR168_VGPR169_VGPR170: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR169_VGPR170_VGPR171: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR170_VGPR171_VGPR172: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR171_VGPR172_VGPR173: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR172_VGPR173_VGPR174: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR173_VGPR174_VGPR175: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR174_VGPR175_VGPR176: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR175_VGPR176_VGPR177: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR176_VGPR177_VGPR178: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR177_VGPR178_VGPR179: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR178_VGPR179_VGPR180: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR179_VGPR180_VGPR181: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR180_VGPR181_VGPR182: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR181_VGPR182_VGPR183: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR182_VGPR183_VGPR184: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR183_VGPR184_VGPR185: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR184_VGPR185_VGPR186: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR185_VGPR186_VGPR187: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR186_VGPR187_VGPR188: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR187_VGPR188_VGPR189: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR188_VGPR189_VGPR190: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR189_VGPR190_VGPR191: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR190_VGPR191_VGPR192: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR191_VGPR192_VGPR193: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR192_VGPR193_VGPR194: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR193_VGPR194_VGPR195: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR194_VGPR195_VGPR196: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR195_VGPR196_VGPR197: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR196_VGPR197_VGPR198: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR197_VGPR198_VGPR199: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR198_VGPR199_VGPR200: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR199_VGPR200_VGPR201: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR200_VGPR201_VGPR202: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR201_VGPR202_VGPR203: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR202_VGPR203_VGPR204: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR203_VGPR204_VGPR205: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR204_VGPR205_VGPR206: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR205_VGPR206_VGPR207: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR206_VGPR207_VGPR208: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR207_VGPR208_VGPR209: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR208_VGPR209_VGPR210: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR209_VGPR210_VGPR211: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR210_VGPR211_VGPR212: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR211_VGPR212_VGPR213: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR212_VGPR213_VGPR214: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR213_VGPR214_VGPR215: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR214_VGPR215_VGPR216: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR215_VGPR216_VGPR217: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR216_VGPR217_VGPR218: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR217_VGPR218_VGPR219: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR218_VGPR219_VGPR220: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR219_VGPR220_VGPR221: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR220_VGPR221_VGPR222: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR221_VGPR222_VGPR223: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR222_VGPR223_VGPR224: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR223_VGPR224_VGPR225: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR224_VGPR225_VGPR226: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR225_VGPR226_VGPR227: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR226_VGPR227_VGPR228: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR227_VGPR228_VGPR229: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR228_VGPR229_VGPR230: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR229_VGPR230_VGPR231: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR230_VGPR231_VGPR232: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR231_VGPR232_VGPR233: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR232_VGPR233_VGPR234: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR233_VGPR234_VGPR235: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR234_VGPR235_VGPR236: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR235_VGPR236_VGPR237: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR236_VGPR237_VGPR238: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR237_VGPR238_VGPR239: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR238_VGPR239_VGPR240: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR239_VGPR240_VGPR241: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR240_VGPR241_VGPR242: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR241_VGPR242_VGPR243: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR242_VGPR243_VGPR244: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR243_VGPR244_VGPR245: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR244_VGPR245_VGPR246: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR245_VGPR246_VGPR247: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR246_VGPR247_VGPR248: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR247_VGPR248_VGPR249: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR248_VGPR249_VGPR250: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR249_VGPR250_VGPR251: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR250_VGPR251_VGPR252: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR251_VGPR252_VGPR253: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR252_VGPR253_VGPR254: OpKind = MCK_VReg_96; break;
    case AMDGPU::VGPR253_VGPR254_VGPR255: OpKind = MCK_VReg_96; break;
    }
    return isSubclass(OpKind, Kind) ? MCTargetAsmParser::Match_Success :
                                      MCTargetAsmParser::Match_InvalidOperand;
  }

  return MCTargetAsmParser::Match_InvalidOperand;
}

uint64_t AMDGPUAsmParser::
ComputeAvailableFeatures(const FeatureBitset& FB) const {
  uint64_t Features = 0;
  if ((FB[AMDGPU::FeatureGCN1Encoding]))
    Features |= Feature_isSICI;
  if ((FB[AMDGPU::FeatureGCN3Encoding]))
    Features |= Feature_isVI;
  if ((FB[AMDGPU::FeatureCIInsts]))
    Features |= Feature_isCIVI;
  if ((FB[AMDGPU::FeatureSeaIslands]))
    Features |= Feature_isCIOnly;
  if ((FB[AMDGPU::FeatureDisable]))
    Features |= Feature_DisableInst;
  if ((FB[AMDGPU::FeatureGCN]))
    Features |= Feature_isGCN;
  if ((FB[AMDGPU::FeatureSouthernIslands]))
    Features |= Feature_isSI;
  if ((FB[AMDGPU::FeatureVGPRIndexMode]))
    Features |= Feature_HasVGPRIndexMode;
  if ((FB[AMDGPU::FeatureMovrel]))
    Features |= Feature_HasMovrel;
  return Features;
}

static const char *const MnemonicTable =
    "\007CALL_FS\006CF_END\010CONTINUE\004ELSE\010END_LOOP\013INTERP_LOAD\016"
    "INTERP_PAIR_XY\016INTERP_PAIR_ZW\004JUMP\nLOOP_BREAK\017LOOP_START_DX10"
    "\nMASK_WRITE\003PAD\003POP\004PUSH\tPUSH_ELSE\003TEX\003VTX\021buffer_a"
    "tomic_add\024buffer_atomic_add_x2\021buffer_atomic_and\024buffer_atomic"
    "_and_x2\025buffer_atomic_cmpswap\030buffer_atomic_cmpswap_x2\021buffer_"
    "atomic_dec\024buffer_atomic_dec_x2\021buffer_atomic_inc\024buffer_atomi"
    "c_inc_x2\020buffer_atomic_or\023buffer_atomic_or_x2\022buffer_atomic_sm"
    "ax\025buffer_atomic_smax_x2\022buffer_atomic_smin\025buffer_atomic_smin"
    "_x2\021buffer_atomic_sub\024buffer_atomic_sub_x2\022buffer_atomic_swap\025"
    "buffer_atomic_swap_x2\022buffer_atomic_umax\025buffer_atomic_umax_x2\022"
    "buffer_atomic_umin\025buffer_atomic_umin_x2\021buffer_atomic_xor\024buf"
    "fer_atomic_xor_x2\021buffer_load_dword\023buffer_load_dwordx2\023buffer"
    "_load_dwordx3\023buffer_load_dwordx4\024buffer_load_format_x\025buffer_"
    "load_format_xy\026buffer_load_format_xyz\027buffer_load_format_xyzw\021"
    "buffer_load_sbyte\022buffer_load_sshort\021buffer_load_ubyte\022buffer_"
    "load_ushort\021buffer_store_byte\022buffer_store_dword\024buffer_store_"
    "dwordx2\024buffer_store_dwordx3\024buffer_store_dwordx4\025buffer_store"
    "_format_x\026buffer_store_format_xy\027buffer_store_format_xyz\030buffe"
    "r_store_format_xyzw\022buffer_store_short\016buffer_wbinvl1\021buffer_w"
    "binvl1_sc\022buffer_wbinvl1_vol\nds_add_f32\016ds_add_rtn_f32\016ds_add"
    "_rtn_u32\016ds_add_rtn_u64\017ds_add_src2_u32\017ds_add_src2_u64\nds_ad"
    "d_u32\nds_add_u64\nds_and_b32\nds_and_b64\016ds_and_rtn_b32\016ds_and_r"
    "tn_b64\017ds_and_src2_b64\016ds_and_src_b32\tds_append\017ds_bpermute_b"
    "32\014ds_cmpst_b32\014ds_cmpst_b64\014ds_cmpst_f32\014ds_cmpst_f64\020d"
    "s_cmpst_rtn_b32\020ds_cmpst_rtn_b64\020ds_cmpst_rtn_f32\020ds_cmpst_rtn"
    "_f64\nds_consume\016ds_dec_rtn_u32\016ds_dec_rtn_u64\017ds_dec_src2_u32"
    "\017ds_dec_src2_u64\nds_dec_u32\nds_dec_u64\016ds_gws_barrier\013ds_gws"
    "_init\016ds_gws_sema_br\015ds_gws_sema_p\015ds_gws_sema_v\016ds_inc_rtn"
    "_u32\016ds_inc_rtn_u64\017ds_inc_src2_u32\017ds_inc_src2_u64\nds_inc_u3"
    "2\nds_inc_u64\nds_max_f32\nds_max_f64\nds_max_i32\nds_max_i64\016ds_max"
    "_rtn_f32\016ds_max_rtn_f64\016ds_max_rtn_i32\016ds_max_rtn_i64\016ds_ma"
    "x_rtn_u32\016ds_max_rtn_u64\017ds_max_src2_f32\017ds_max_src2_f64\017ds"
    "_max_src2_i32\017ds_max_src2_i64\017ds_max_src2_u32\017ds_max_src2_u64\n"
    "ds_max_u32\nds_max_u64\nds_min_f32\nds_min_f64\nds_min_i32\nds_min_i64\016"
    "ds_min_rtn_f32\016ds_min_rtn_f64\016ds_min_rtn_i32\016ds_min_rtn_i64\016"
    "ds_min_rtn_u32\016ds_min_rtn_u64\017ds_min_src2_f32\017ds_min_src2_f64\017"
    "ds_min_src2_i32\017ds_min_src2_i64\017ds_min_src2_u32\017ds_min_src2_u6"
    "4\nds_min_u32\nds_min_u64\014ds_mskor_b32\014ds_mskor_b64\020ds_mskor_r"
    "tn_b32\020ds_mskor_rtn_b64\tds_or_b32\tds_or_b64\015ds_or_rtn_b32\015ds"
    "_or_rtn_b64\016ds_or_src2_b32\016ds_or_src2_b64\020ds_ordered_count\016"
    "ds_permute_b32\014ds_read2_b32\014ds_read2_b64\020ds_read2st64_b32\020d"
    "s_read2st64_b64\013ds_read_b32\013ds_read_b64\013ds_read_i16\nds_read_i"
    "8\013ds_read_u16\nds_read_u8\017ds_rsub_rtn_u32\017ds_rsub_rtn_u64\020d"
    "s_rsub_src2_u32\020ds_rsub_src2_u64\013ds_rsub_u32\013ds_rsub_u64\016ds"
    "_sub_rtn_u32\016ds_sub_rtn_u64\017ds_sub_src2_u32\017ds_sub_src2_u64\nd"
    "s_sub_u32\nds_sub_u64\016ds_swizzle_b32\017ds_wrap_rtn_f32\015ds_write2"
    "_b32\015ds_write2_b64\021ds_write2st64_b32\021ds_write2st64_b64\014ds_w"
    "rite_b16\014ds_write_b32\014ds_write_b64\013ds_write_b8\021ds_write_src"
    "2_b32\021ds_write_src2_b64\022ds_wrxchg2_rtn_b32\022ds_wrxchg2_rtn_b64\026"
    "ds_wrxchg2st64_rtn_b32\026ds_wrxchg2st64_rtn_b64\021ds_wrxchg_rtn_b32\021"
    "ds_wrxchg_rtn_b64\nds_xor_b32\nds_xor_b64\016ds_xor_rtn_b32\016ds_xor_r"
    "tn_b64\017ds_xor_src2_b32\017ds_xor_src2_b64\003exp\017flat_atomic_add\022"
    "flat_atomic_add_x2\017flat_atomic_and\022flat_atomic_and_x2\023flat_ato"
    "mic_cmpswap\026flat_atomic_cmpswap_x2\017flat_atomic_dec\022flat_atomic"
    "_dec_x2\024flat_atomic_fcmpswap\027flat_atomic_fcmpswap_x2\020flat_atom"
    "ic_fmax\023flat_atomic_fmax_x2\020flat_atomic_fmin\023flat_atomic_fmin_"
    "x2\017flat_atomic_inc\022flat_atomic_inc_x2\016flat_atomic_or\021flat_a"
    "tomic_or_x2\020flat_atomic_smax\023flat_atomic_smax_x2\020flat_atomic_s"
    "min\023flat_atomic_smin_x2\017flat_atomic_sub\022flat_atomic_sub_x2\020"
    "flat_atomic_swap\023flat_atomic_swap_x2\020flat_atomic_umax\023flat_ato"
    "mic_umax_x2\020flat_atomic_umin\023flat_atomic_umin_x2\017flat_atomic_x"
    "or\022flat_atomic_xor_x2\017flat_load_dword\021flat_load_dwordx2\021fla"
    "t_load_dwordx3\021flat_load_dwordx4\017flat_load_sbyte\020flat_load_ssh"
    "ort\017flat_load_ubyte\020flat_load_ushort\017flat_store_byte\020flat_s"
    "tore_dword\022flat_store_dwordx2\022flat_store_dwordx3\022flat_store_dw"
    "ordx4\020flat_store_short\020image_atomic_add\020image_atomic_and\024im"
    "age_atomic_cmpswap\020image_atomic_dec\020image_atomic_inc\017image_ato"
    "mic_or\021image_atomic_smax\021image_atomic_smin\020image_atomic_sub\021"
    "image_atomic_swap\021image_atomic_umax\021image_atomic_umin\020image_at"
    "omic_xor\015image_gather4\017image_gather4_b\022image_gather4_b_cl\024i"
    "mage_gather4_b_cl_o\021image_gather4_b_o\017image_gather4_c\021image_ga"
    "ther4_c_b\024image_gather4_c_b_cl\026image_gather4_c_b_cl_o\023image_ga"
    "ther4_c_b_o\022image_gather4_c_cl\024image_gather4_c_cl_o\021image_gath"
    "er4_c_l\023image_gather4_c_l_o\022image_gather4_c_lz\024image_gather4_c"
    "_lz_o\021image_gather4_c_o\020image_gather4_cl\022image_gather4_cl_o\017"
    "image_gather4_l\021image_gather4_l_o\020image_gather4_lz\022image_gathe"
    "r4_lz_o\017image_gather4_o\015image_get_lod\021image_get_resinfo\nimage"
    "_load\016image_load_mip\014image_sample\016image_sample_b\021image_samp"
    "le_b_cl\023image_sample_b_cl_o\020image_sample_b_o\016image_sample_c\020"
    "image_sample_c_b\023image_sample_c_b_cl\025image_sample_c_b_cl_o\022ima"
    "ge_sample_c_b_o\021image_sample_c_cd\024image_sample_c_cd_cl\026image_s"
    "ample_c_cd_cl_o\023image_sample_c_cd_o\021image_sample_c_cl\023image_sa"
    "mple_c_cl_o\020image_sample_c_d\023image_sample_c_d_cl\025image_sample_"
    "c_d_cl_o\022image_sample_c_d_o\020image_sample_c_l\022image_sample_c_l_"
    "o\021image_sample_c_lz\023image_sample_c_lz_o\020image_sample_c_o\017im"
    "age_sample_cd\022image_sample_cd_cl\024image_sample_cd_cl_o\021image_sa"
    "mple_cd_o\017image_sample_cl\021image_sample_cl_o\016image_sample_d\021"
    "image_sample_d_cl\023image_sample_d_cl_o\020image_sample_d_o\016image_s"
    "ample_l\020image_sample_l_o\017image_sample_lz\021image_sample_lz_o\016"
    "image_sample_o\013image_store\017image_store_mip\ts_abs_i32\015s_absdif"
    "f_i32\ts_add_i32\ts_add_u32\ns_addc_u32\ns_addk_i32\ts_and_b32\ts_and_b"
    "64\022s_and_saveexec_b64\013s_andn2_b32\013s_andn2_b64\024s_andn2_savee"
    "xec_b64\ns_ashr_i32\ns_ashr_i64\ts_barrier\017s_bcnt0_i32_b32\017s_bcnt"
    "0_i32_b64\017s_bcnt1_i32_b32\017s_bcnt1_i32_b64\ts_bfe_i32\ts_bfe_i64\t"
    "s_bfe_u32\ts_bfe_u64\ts_bfm_b32\ts_bfm_b64\015s_bitcmp0_b32\015s_bitcmp"
    "0_b64\015s_bitcmp1_b32\015s_bitcmp1_b64\015s_bitset0_b32\015s_bitset0_b"
    "64\015s_bitset1_b32\015s_bitset1_b64\010s_branch\ns_brev_b32\ns_brev_b6"
    "4\023s_buffer_load_dword\026s_buffer_load_dwordx16\025s_buffer_load_dwo"
    "rdx2\025s_buffer_load_dwordx4\025s_buffer_load_dwordx8\024s_buffer_stor"
    "e_dword\026s_buffer_store_dwordx2\026s_buffer_store_dwordx4\020s_cbranc"
    "h_execnz\017s_cbranch_execz\020s_cbranch_g_fork\020s_cbranch_i_fork\016"
    "s_cbranch_join\016s_cbranch_scc0\016s_cbranch_scc1\017s_cbranch_vccnz\016"
    "s_cbranch_vccz\ns_cmov_b32\ns_cmov_b64\013s_cmovk_i32\014s_cmp_eq_i32\014"
    "s_cmp_eq_u32\014s_cmp_eq_u64\014s_cmp_ge_i32\014s_cmp_ge_u32\014s_cmp_g"
    "t_i32\014s_cmp_gt_u32\014s_cmp_le_i32\014s_cmp_le_u32\014s_cmp_lg_i32\014"
    "s_cmp_lg_u32\014s_cmp_lg_u64\014s_cmp_lt_i32\014s_cmp_lt_u32\015s_cmpk_"
    "eq_i32\015s_cmpk_eq_u32\015s_cmpk_ge_i32\015s_cmpk_ge_u32\015s_cmpk_gt_"
    "i32\015s_cmpk_gt_u32\015s_cmpk_le_i32\015s_cmpk_le_u32\015s_cmpk_lg_i32"
    "\015s_cmpk_lg_u32\015s_cmpk_lt_i32\015s_cmpk_lt_u32\015s_cselect_b32\015"
    "s_cselect_b64\014s_dcache_inv\020s_dcache_inv_vol\013s_dcache_wb\017s_d"
    "cache_wb_vol\016s_decperflevel\010s_endpgm\015s_ff0_i32_b32\015s_ff0_i3"
    "2_b64\015s_ff1_i32_b32\015s_ff1_i32_b64\013s_flbit_i32\017s_flbit_i32_b"
    "32\017s_flbit_i32_b64\017s_flbit_i32_i64\013s_getpc_b64\014s_getreg_b32"
    "\014s_icache_inv\016s_incperflevel\014s_load_dword\017s_load_dwordx16\016"
    "s_load_dwordx2\016s_load_dwordx4\016s_load_dwordx8\ns_lshl_b32\ns_lshl_"
    "b64\ns_lshr_b32\ns_lshr_b64\ts_max_i32\ts_max_u32\015s_memrealtime\ts_m"
    "emtime\ts_min_i32\ts_min_u32\ts_mov_b32\ts_mov_b64\015s_mov_fed_b32\017"
    "s_mov_regrd_b32\ns_movk_i32\015s_movreld_b32\015s_movreld_b64\015s_movr"
    "els_b32\015s_movrels_b64\ts_mul_i32\ns_mulk_i32\ns_nand_b32\ns_nand_b64"
    "\023s_nand_saveexec_b64\005s_nop\ts_nor_b32\ts_nor_b64\022s_nor_saveexe"
    "c_b64\ts_not_b32\ts_not_b64\010s_or_b32\010s_or_b64\021s_or_saveexec_b6"
    "4\ns_orn2_b32\ns_orn2_b64\023s_orn2_saveexec_b64\016s_quadmask_b32\016s"
    "_quadmask_b64\ts_rfe_b64\ts_sendmsg\015s_sendmsghalt\021s_set_gpr_idx_i"
    "dx\022s_set_gpr_idx_mode\021s_set_gpr_idx_off\020s_set_gpr_idx_on\ts_se"
    "thalt\013s_setpc_b64\ts_setprio\014s_setreg_b32\022s_setreg_imm32_b32\n"
    "s_setvskip\016s_sext_i32_i16\015s_sext_i32_i8\007s_sleep\015s_store_dwo"
    "rd\017s_store_dwordx2\017s_store_dwordx4\ts_sub_i32\ts_sub_u32\ns_subb_"
    "u32\014s_swappc_b64\006s_trap\014s_ttracedata\ts_waitcnt\ts_wqm_b32\ts_"
    "wqm_b64\ns_xnor_b32\ns_xnor_b64\023s_xnor_saveexec_b64\ts_xor_b32\ts_xo"
    "r_b64\022s_xor_saveexec_b64\030tbuffer_load_format_xyzw\026tbuffer_stor"
    "e_format_x\027tbuffer_store_format_xy\030tbuffer_store_format_xyz\031tb"
    "uffer_store_format_xyzw\tv_add_f16\tv_add_f32\tv_add_f64\tv_add_i32\tv_"
    "add_u16\nv_addc_u32\016v_alignbit_b32\017v_alignbyte_b32\tv_and_b32\nv_"
    "ashr_i32\nv_ashr_i64\015v_ashrrev_i16\015v_ashrrev_i32\015v_ashrrev_i64"
    "\016v_bcnt_u32_b32\tv_bfe_i32\tv_bfe_u32\tv_bfi_b32\tv_bfm_b32\013v_bfr"
    "ev_b32\nv_ceil_f16\nv_ceil_f32\nv_ceil_f64\tv_clrexcp\017v_cmp_class_f1"
    "6\023v_cmp_class_f16_e32\017v_cmp_class_f32\023v_cmp_class_f32_e32\017v"
    "_cmp_class_f64\023v_cmp_class_f64_e32\014v_cmp_eq_f16\020v_cmp_eq_f16_e"
    "32\014v_cmp_eq_f32\020v_cmp_eq_f32_e32\014v_cmp_eq_f64\020v_cmp_eq_f64_"
    "e32\014v_cmp_eq_i16\020v_cmp_eq_i16_e32\014v_cmp_eq_i32\020v_cmp_eq_i32"
    "_e32\014v_cmp_eq_i64\020v_cmp_eq_i64_e32\014v_cmp_eq_u16\020v_cmp_eq_u1"
    "6_e32\014v_cmp_eq_u32\020v_cmp_eq_u32_e32\014v_cmp_eq_u64\020v_cmp_eq_u"
    "64_e32\013v_cmp_f_f16\017v_cmp_f_f16_e32\013v_cmp_f_f32\017v_cmp_f_f32_"
    "e32\013v_cmp_f_f64\017v_cmp_f_f64_e32\013v_cmp_f_i16\017v_cmp_f_i16_e32"
    "\013v_cmp_f_i32\017v_cmp_f_i32_e32\013v_cmp_f_i64\017v_cmp_f_i64_e32\013"
    "v_cmp_f_u16\017v_cmp_f_u16_e32\013v_cmp_f_u32\017v_cmp_f_u32_e32\013v_c"
    "mp_f_u64\017v_cmp_f_u64_e32\014v_cmp_ge_f16\020v_cmp_ge_f16_e32\014v_cm"
    "p_ge_f32\020v_cmp_ge_f32_e32\014v_cmp_ge_f64\020v_cmp_ge_f64_e32\014v_c"
    "mp_ge_i16\020v_cmp_ge_i16_e32\014v_cmp_ge_i32\020v_cmp_ge_i32_e32\014v_"
    "cmp_ge_i64\020v_cmp_ge_i64_e32\014v_cmp_ge_u16\020v_cmp_ge_u16_e32\014v"
    "_cmp_ge_u32\020v_cmp_ge_u32_e32\014v_cmp_ge_u64\020v_cmp_ge_u64_e32\014"
    "v_cmp_gt_f16\020v_cmp_gt_f16_e32\014v_cmp_gt_f32\020v_cmp_gt_f32_e32\014"
    "v_cmp_gt_f64\020v_cmp_gt_f64_e32\014v_cmp_gt_i16\020v_cmp_gt_i16_e32\014"
    "v_cmp_gt_i32\020v_cmp_gt_i32_e32\014v_cmp_gt_i64\020v_cmp_gt_i64_e32\014"
    "v_cmp_gt_u16\020v_cmp_gt_u16_e32\014v_cmp_gt_u32\020v_cmp_gt_u32_e32\014"
    "v_cmp_gt_u64\020v_cmp_gt_u64_e32\014v_cmp_le_f16\020v_cmp_le_f16_e32\014"
    "v_cmp_le_f32\020v_cmp_le_f32_e32\014v_cmp_le_f64\020v_cmp_le_f64_e32\014"
    "v_cmp_le_i16\020v_cmp_le_i16_e32\014v_cmp_le_i32\020v_cmp_le_i32_e32\014"
    "v_cmp_le_i64\020v_cmp_le_i64_e32\014v_cmp_le_u16\020v_cmp_le_u16_e32\014"
    "v_cmp_le_u32\020v_cmp_le_u32_e32\014v_cmp_le_u64\020v_cmp_le_u64_e32\014"
    "v_cmp_lg_f16\020v_cmp_lg_f16_e32\014v_cmp_lg_f32\020v_cmp_lg_f32_e32\014"
    "v_cmp_lg_f64\020v_cmp_lg_f64_e32\014v_cmp_lt_f16\020v_cmp_lt_f16_e32\014"
    "v_cmp_lt_f32\020v_cmp_lt_f32_e32\014v_cmp_lt_f64\020v_cmp_lt_f64_e32\014"
    "v_cmp_lt_i16\020v_cmp_lt_i16_e32\014v_cmp_lt_i32\020v_cmp_lt_i32_e32\014"
    "v_cmp_lt_i64\020v_cmp_lt_i64_e32\014v_cmp_lt_u16\020v_cmp_lt_u16_e32\014"
    "v_cmp_lt_u32\020v_cmp_lt_u32_e32\014v_cmp_lt_u64\020v_cmp_lt_u64_e32\014"
    "v_cmp_ne_i16\020v_cmp_ne_i16_e32\014v_cmp_ne_i32\020v_cmp_ne_i32_e32\014"
    "v_cmp_ne_i64\020v_cmp_ne_i64_e32\014v_cmp_ne_u16\020v_cmp_ne_u16_e32\014"
    "v_cmp_ne_u32\020v_cmp_ne_u32_e32\014v_cmp_ne_u64\020v_cmp_ne_u64_e32\015"
    "v_cmp_neq_f16\021v_cmp_neq_f16_e32\015v_cmp_neq_f32\021v_cmp_neq_f32_e3"
    "2\015v_cmp_neq_f64\021v_cmp_neq_f64_e32\015v_cmp_nge_f16\021v_cmp_nge_f"
    "16_e32\015v_cmp_nge_f32\021v_cmp_nge_f32_e32\015v_cmp_nge_f64\021v_cmp_"
    "nge_f64_e32\015v_cmp_ngt_f16\021v_cmp_ngt_f16_e32\015v_cmp_ngt_f32\021v"
    "_cmp_ngt_f32_e32\015v_cmp_ngt_f64\021v_cmp_ngt_f64_e32\015v_cmp_nle_f16"
    "\021v_cmp_nle_f16_e32\015v_cmp_nle_f32\021v_cmp_nle_f32_e32\015v_cmp_nl"
    "e_f64\021v_cmp_nle_f64_e32\015v_cmp_nlg_f16\021v_cmp_nlg_f16_e32\015v_c"
    "mp_nlg_f32\021v_cmp_nlg_f32_e32\015v_cmp_nlg_f64\021v_cmp_nlg_f64_e32\015"
    "v_cmp_nlt_f16\021v_cmp_nlt_f16_e32\015v_cmp_nlt_f32\021v_cmp_nlt_f32_e3"
    "2\015v_cmp_nlt_f64\021v_cmp_nlt_f64_e32\013v_cmp_o_f16\017v_cmp_o_f16_e"
    "32\013v_cmp_o_f32\017v_cmp_o_f32_e32\013v_cmp_o_f64\017v_cmp_o_f64_e32\013"
    "v_cmp_t_i16\017v_cmp_t_i16_e32\013v_cmp_t_i32\017v_cmp_t_i32_e32\013v_c"
    "mp_t_i64\017v_cmp_t_i64_e32\013v_cmp_t_u16\017v_cmp_t_u16_e32\013v_cmp_"
    "t_u32\017v_cmp_t_u32_e32\013v_cmp_t_u64\017v_cmp_t_u64_e32\015v_cmp_tru"
    "_f16\021v_cmp_tru_f16_e32\015v_cmp_tru_f32\021v_cmp_tru_f32_e32\015v_cm"
    "p_tru_f64\021v_cmp_tru_f64_e32\013v_cmp_u_f16\017v_cmp_u_f16_e32\013v_c"
    "mp_u_f32\017v_cmp_u_f32_e32\013v_cmp_u_f64\017v_cmp_u_f64_e32\015v_cmps"
    "_eq_f32\021v_cmps_eq_f32_e32\015v_cmps_eq_f64\021v_cmps_eq_f64_e32\014v"
    "_cmps_f_f32\020v_cmps_f_f32_e32\014v_cmps_f_f64\020v_cmps_f_f64_e32\015"
    "v_cmps_ge_f32\021v_cmps_ge_f32_e32\015v_cmps_ge_f64\021v_cmps_ge_f64_e3"
    "2\015v_cmps_gt_f32\021v_cmps_gt_f32_e32\015v_cmps_gt_f64\021v_cmps_gt_f"
    "64_e32\015v_cmps_le_f32\021v_cmps_le_f32_e32\015v_cmps_le_f64\021v_cmps"
    "_le_f64_e32\015v_cmps_lg_f32\021v_cmps_lg_f32_e32\015v_cmps_lg_f64\021v"
    "_cmps_lg_f64_e32\015v_cmps_lt_f32\021v_cmps_lt_f32_e32\015v_cmps_lt_f64"
    "\021v_cmps_lt_f64_e32\016v_cmps_neq_f32\022v_cmps_neq_f32_e32\016v_cmps"
    "_neq_f64\022v_cmps_neq_f64_e32\016v_cmps_nge_f32\022v_cmps_nge_f32_e32\016"
    "v_cmps_nge_f64\022v_cmps_nge_f64_e32\016v_cmps_ngt_f32\022v_cmps_ngt_f3"
    "2_e32\016v_cmps_ngt_f64\022v_cmps_ngt_f64_e32\016v_cmps_nle_f32\022v_cm"
    "ps_nle_f32_e32\016v_cmps_nle_f64\022v_cmps_nle_f64_e32\016v_cmps_nlg_f3"
    "2\022v_cmps_nlg_f32_e32\016v_cmps_nlg_f64\022v_cmps_nlg_f64_e32\016v_cm"
    "ps_nlt_f32\022v_cmps_nlt_f32_e32\016v_cmps_nlt_f64\022v_cmps_nlt_f64_e3"
    "2\014v_cmps_o_f32\020v_cmps_o_f32_e32\014v_cmps_o_f64\020v_cmps_o_f64_e"
    "32\016v_cmps_tru_f32\022v_cmps_tru_f32_e32\016v_cmps_tru_f64\022v_cmps_"
    "tru_f64_e32\014v_cmps_u_f32\020v_cmps_u_f32_e32\014v_cmps_u_f64\020v_cm"
    "ps_u_f64_e32\016v_cmpsx_eq_f32\022v_cmpsx_eq_f32_e32\016v_cmpsx_eq_f64\022"
    "v_cmpsx_eq_f64_e32\015v_cmpsx_f_f32\021v_cmpsx_f_f32_e32\015v_cmpsx_f_f"
    "64\021v_cmpsx_f_f64_e32\016v_cmpsx_ge_f32\022v_cmpsx_ge_f32_e32\016v_cm"
    "psx_ge_f64\022v_cmpsx_ge_f64_e32\016v_cmpsx_gt_f32\022v_cmpsx_gt_f32_e3"
    "2\016v_cmpsx_gt_f64\022v_cmpsx_gt_f64_e32\016v_cmpsx_le_f32\022v_cmpsx_"
    "le_f32_e32\016v_cmpsx_le_f64\022v_cmpsx_le_f64_e32\016v_cmpsx_lg_f32\022"
    "v_cmpsx_lg_f32_e32\016v_cmpsx_lg_f64\022v_cmpsx_lg_f64_e32\016v_cmpsx_l"
    "t_f32\022v_cmpsx_lt_f32_e32\016v_cmpsx_lt_f64\022v_cmpsx_lt_f64_e32\017"
    "v_cmpsx_neq_f32\023v_cmpsx_neq_f32_e32\017v_cmpsx_neq_f64\023v_cmpsx_ne"
    "q_f64_e32\017v_cmpsx_nge_f32\023v_cmpsx_nge_f32_e32\017v_cmpsx_nge_f64\023"
    "v_cmpsx_nge_f64_e32\017v_cmpsx_ngt_f32\023v_cmpsx_ngt_f32_e32\017v_cmps"
    "x_ngt_f64\023v_cmpsx_ngt_f64_e32\017v_cmpsx_nle_f32\023v_cmpsx_nle_f32_"
    "e32\017v_cmpsx_nle_f64\023v_cmpsx_nle_f64_e32\017v_cmpsx_nlg_f32\023v_c"
    "mpsx_nlg_f32_e32\017v_cmpsx_nlg_f64\023v_cmpsx_nlg_f64_e32\017v_cmpsx_n"
    "lt_f32\023v_cmpsx_nlt_f32_e32\017v_cmpsx_nlt_f64\023v_cmpsx_nlt_f64_e32"
    "\015v_cmpsx_o_f32\021v_cmpsx_o_f32_e32\015v_cmpsx_o_f64\021v_cmpsx_o_f6"
    "4_e32\017v_cmpsx_tru_f32\023v_cmpsx_tru_f32_e32\017v_cmpsx_tru_f64\023v"
    "_cmpsx_tru_f64_e32\015v_cmpsx_u_f32\021v_cmpsx_u_f32_e32\015v_cmpsx_u_f"
    "64\021v_cmpsx_u_f64_e32\020v_cmpx_class_f16\024v_cmpx_class_f16_e32\020"
    "v_cmpx_class_f32\024v_cmpx_class_f32_e32\020v_cmpx_class_f64\024v_cmpx_"
    "class_f64_e32\015v_cmpx_eq_f16\021v_cmpx_eq_f16_e32\015v_cmpx_eq_f32\021"
    "v_cmpx_eq_f32_e32\015v_cmpx_eq_f64\021v_cmpx_eq_f64_e32\015v_cmpx_eq_i1"
    "6\021v_cmpx_eq_i16_e32\015v_cmpx_eq_i32\021v_cmpx_eq_i32_e32\015v_cmpx_"
    "eq_i64\021v_cmpx_eq_i64_e32\015v_cmpx_eq_u16\021v_cmpx_eq_u16_e32\015v_"
    "cmpx_eq_u32\021v_cmpx_eq_u32_e32\015v_cmpx_eq_u64\021v_cmpx_eq_u64_e32\014"
    "v_cmpx_f_f16\020v_cmpx_f_f16_e32\014v_cmpx_f_f32\020v_cmpx_f_f32_e32\014"
    "v_cmpx_f_f64\020v_cmpx_f_f64_e32\014v_cmpx_f_i16\020v_cmpx_f_i16_e32\014"
    "v_cmpx_f_i32\020v_cmpx_f_i32_e32\014v_cmpx_f_i64\020v_cmpx_f_i64_e32\014"
    "v_cmpx_f_u16\020v_cmpx_f_u16_e32\014v_cmpx_f_u32\020v_cmpx_f_u32_e32\014"
    "v_cmpx_f_u64\020v_cmpx_f_u64_e32\015v_cmpx_ge_f16\021v_cmpx_ge_f16_e32\015"
    "v_cmpx_ge_f32\021v_cmpx_ge_f32_e32\015v_cmpx_ge_f64\021v_cmpx_ge_f64_e3"
    "2\015v_cmpx_ge_i16\021v_cmpx_ge_i16_e32\015v_cmpx_ge_i32\021v_cmpx_ge_i"
    "32_e32\015v_cmpx_ge_i64\021v_cmpx_ge_i64_e32\015v_cmpx_ge_u16\021v_cmpx"
    "_ge_u16_e32\015v_cmpx_ge_u32\021v_cmpx_ge_u32_e32\015v_cmpx_ge_u64\021v"
    "_cmpx_ge_u64_e32\015v_cmpx_gt_f16\021v_cmpx_gt_f16_e32\015v_cmpx_gt_f32"
    "\021v_cmpx_gt_f32_e32\015v_cmpx_gt_f64\021v_cmpx_gt_f64_e32\015v_cmpx_g"
    "t_i16\021v_cmpx_gt_i16_e32\015v_cmpx_gt_i32\021v_cmpx_gt_i32_e32\015v_c"
    "mpx_gt_i64\021v_cmpx_gt_i64_e32\015v_cmpx_gt_u16\021v_cmpx_gt_u16_e32\015"
    "v_cmpx_gt_u32\021v_cmpx_gt_u32_e32\015v_cmpx_gt_u64\021v_cmpx_gt_u64_e3"
    "2\015v_cmpx_le_f16\021v_cmpx_le_f16_e32\015v_cmpx_le_f32\021v_cmpx_le_f"
    "32_e32\015v_cmpx_le_f64\021v_cmpx_le_f64_e32\015v_cmpx_le_i16\021v_cmpx"
    "_le_i16_e32\015v_cmpx_le_i32\021v_cmpx_le_i32_e32\015v_cmpx_le_i64\021v"
    "_cmpx_le_i64_e32\015v_cmpx_le_u16\021v_cmpx_le_u16_e32\015v_cmpx_le_u32"
    "\021v_cmpx_le_u32_e32\015v_cmpx_le_u64\021v_cmpx_le_u64_e32\015v_cmpx_l"
    "g_f16\021v_cmpx_lg_f16_e32\015v_cmpx_lg_f32\021v_cmpx_lg_f32_e32\015v_c"
    "mpx_lg_f64\021v_cmpx_lg_f64_e32\015v_cmpx_lt_f16\021v_cmpx_lt_f16_e32\015"
    "v_cmpx_lt_f32\021v_cmpx_lt_f32_e32\015v_cmpx_lt_f64\021v_cmpx_lt_f64_e3"
    "2\015v_cmpx_lt_i16\021v_cmpx_lt_i16_e32\015v_cmpx_lt_i32\021v_cmpx_lt_i"
    "32_e32\015v_cmpx_lt_i64\021v_cmpx_lt_i64_e32\015v_cmpx_lt_u16\021v_cmpx"
    "_lt_u16_e32\015v_cmpx_lt_u32\021v_cmpx_lt_u32_e32\015v_cmpx_lt_u64\021v"
    "_cmpx_lt_u64_e32\015v_cmpx_ne_i16\021v_cmpx_ne_i16_e32\015v_cmpx_ne_i32"
    "\021v_cmpx_ne_i32_e32\015v_cmpx_ne_i64\021v_cmpx_ne_i64_e32\015v_cmpx_n"
    "e_u16\021v_cmpx_ne_u16_e32\015v_cmpx_ne_u32\021v_cmpx_ne_u32_e32\015v_c"
    "mpx_ne_u64\021v_cmpx_ne_u64_e32\016v_cmpx_neq_f16\022v_cmpx_neq_f16_e32"
    "\016v_cmpx_neq_f32\022v_cmpx_neq_f32_e32\016v_cmpx_neq_f64\022v_cmpx_ne"
    "q_f64_e32\016v_cmpx_nge_f16\022v_cmpx_nge_f16_e32\016v_cmpx_nge_f32\022"
    "v_cmpx_nge_f32_e32\016v_cmpx_nge_f64\022v_cmpx_nge_f64_e32\016v_cmpx_ng"
    "t_f16\022v_cmpx_ngt_f16_e32\016v_cmpx_ngt_f32\022v_cmpx_ngt_f32_e32\016"
    "v_cmpx_ngt_f64\022v_cmpx_ngt_f64_e32\016v_cmpx_nle_f16\022v_cmpx_nle_f1"
    "6_e32\016v_cmpx_nle_f32\022v_cmpx_nle_f32_e32\016v_cmpx_nle_f64\022v_cm"
    "px_nle_f64_e32\016v_cmpx_nlg_f16\022v_cmpx_nlg_f16_e32\016v_cmpx_nlg_f3"
    "2\022v_cmpx_nlg_f32_e32\016v_cmpx_nlg_f64\022v_cmpx_nlg_f64_e32\016v_cm"
    "px_nlt_f16\022v_cmpx_nlt_f16_e32\016v_cmpx_nlt_f32\022v_cmpx_nlt_f32_e3"
    "2\016v_cmpx_nlt_f64\022v_cmpx_nlt_f64_e32\014v_cmpx_o_f16\020v_cmpx_o_f"
    "16_e32\014v_cmpx_o_f32\020v_cmpx_o_f32_e32\014v_cmpx_o_f64\020v_cmpx_o_"
    "f64_e32\014v_cmpx_t_i16\020v_cmpx_t_i16_e32\014v_cmpx_t_i32\020v_cmpx_t"
    "_i32_e32\014v_cmpx_t_i64\020v_cmpx_t_i64_e32\014v_cmpx_t_u16\020v_cmpx_"
    "t_u16_e32\014v_cmpx_t_u32\020v_cmpx_t_u32_e32\014v_cmpx_t_u64\020v_cmpx"
    "_t_u64_e32\016v_cmpx_tru_f16\022v_cmpx_tru_f16_e32\016v_cmpx_tru_f32\022"
    "v_cmpx_tru_f32_e32\016v_cmpx_tru_f64\022v_cmpx_tru_f64_e32\014v_cmpx_u_"
    "f16\020v_cmpx_u_f16_e32\014v_cmpx_u_f32\020v_cmpx_u_f32_e32\014v_cmpx_u"
    "_f64\020v_cmpx_u_f64_e32\015v_cndmask_b32\tv_cos_f16\tv_cos_f32\014v_cu"
    "beid_f32\014v_cubema_f32\014v_cubesc_f32\014v_cubetc_f32\015v_cvt_f16_f"
    "32\015v_cvt_f16_i16\015v_cvt_f16_u16\015v_cvt_f32_f16\015v_cvt_f32_f64\015"
    "v_cvt_f32_i32\015v_cvt_f32_u32\020v_cvt_f32_ubyte0\020v_cvt_f32_ubyte1\020"
    "v_cvt_f32_ubyte2\020v_cvt_f32_ubyte3\015v_cvt_f64_f32\015v_cvt_f64_i32\015"
    "v_cvt_f64_u32\021v_cvt_flr_i32_f32\015v_cvt_i16_f16\015v_cvt_i32_f32\015"
    "v_cvt_i32_f64\020v_cvt_off_f32_i4\020v_cvt_pk_i16_i32\020v_cvt_pk_u16_u"
    "32\017v_cvt_pk_u8_f32\024v_cvt_pkaccum_u8_f32\024v_cvt_pknorm_i16_f32\024"
    "v_cvt_pknorm_u16_f32\023v_cvt_pkrtz_f16_f32\021v_cvt_rpi_i32_f32\015v_c"
    "vt_u16_f16\015v_cvt_u32_f32\015v_cvt_u32_f64\017v_div_fixup_f16\017v_di"
    "v_fixup_f32\017v_div_fixup_f64\016v_div_fmas_f32\016v_div_fmas_f64\017v"
    "_div_scale_f32\017v_div_scale_f64\tv_exp_f16\tv_exp_f32\020v_exp_legacy"
    "_f32\nv_ffbh_i32\nv_ffbh_u32\nv_ffbl_b32\013v_floor_f16\013v_floor_f32\013"
    "v_floor_f64\tv_fma_f16\tv_fma_f32\tv_fma_f64\013v_fract_f16\013v_fract_"
    "f32\013v_fract_f64\023v_frexp_exp_i16_f16\023v_frexp_exp_i32_f32\023v_f"
    "rexp_exp_i32_f64\020v_frexp_mant_f16\020v_frexp_mant_f32\020v_frexp_man"
    "t_f64\020v_interp_mov_f32\017v_interp_p1_f32\021v_interp_p1ll_f16\021v_"
    "interp_p1lv_f16\017v_interp_p2_f16\017v_interp_p2_f32\013v_ldexp_f16\013"
    "v_ldexp_f32\013v_ldexp_f64\tv_lerp_u8\017v_log_clamp_f32\tv_log_f16\tv_"
    "log_f32\020v_log_legacy_f32\nv_lshl_b32\nv_lshl_b64\015v_lshlrev_b16\015"
    "v_lshlrev_b32\015v_lshlrev_b64\nv_lshr_b32\nv_lshr_b64\015v_lshrrev_b16"
    "\015v_lshrrev_b32\015v_lshrrev_b64\tv_mac_f16\tv_mac_f32\020v_mac_legac"
    "y_f32\tv_mad_f16\tv_mad_f32\tv_mad_i16\015v_mad_i32_i24\015v_mad_i64_i3"
    "2\020v_mad_legacy_f32\tv_mad_u16\015v_mad_u32_u24\015v_mad_u64_u32\013v"
    "_madak_f16\013v_madak_f32\013v_madmk_f16\013v_madmk_f32\nv_max3_f32\nv_"
    "max3_i32\nv_max3_u32\tv_max_f16\tv_max_f32\tv_max_f64\tv_max_i16\tv_max"
    "_i32\020v_max_legacy_f32\tv_max_u16\tv_max_u32\022v_mbcnt_hi_u32_b32\022"
    "v_mbcnt_lo_u32_b32\nv_med3_f32\nv_med3_i32\nv_med3_u32\nv_min3_f32\nv_m"
    "in3_i32\nv_min3_u32\tv_min_f16\tv_min_f32\tv_min_f64\tv_min_i16\tv_min_"
    "i32\020v_min_legacy_f32\tv_min_u16\tv_min_u32\tv_mov_b32\015v_mov_fed_b"
    "32\015v_movreld_b32\015v_movrels_b32\016v_movrelsd_b32\021v_mqsad_pk_u1"
    "6_u8\016v_mqsad_u16_u8\016v_mqsad_u32_u8\tv_msad_u8\tv_mul_f16\tv_mul_f"
    "32\tv_mul_f64\014v_mul_hi_i32\020v_mul_hi_i32_i24\014v_mul_hi_u32\020v_"
    "mul_hi_u32_u24\015v_mul_i32_i24\020v_mul_legacy_f32\014v_mul_lo_i32\014"
    "v_mul_lo_u16\014v_mul_lo_u32\015v_mul_u32_u24\014v_mullit_f32\005v_nop\t"
    "v_not_b32\010v_or_b32\020v_qsad_pk_u16_u8\017v_rcp_clamp_f32\017v_rcp_c"
    "lamp_f64\tv_rcp_f16\tv_rcp_f32\tv_rcp_f64\017v_rcp_iflag_f32\020v_rcp_l"
    "egacy_f32\023v_readfirstlane_b32\016v_readlane_b32\013v_rndne_f16\013v_"
    "rndne_f32\013v_rndne_f64\017v_rsq_clamp_f32\017v_rsq_clamp_f64\tv_rsq_f"
    "16\tv_rsq_f32\tv_rsq_f64\020v_rsq_legacy_f32\013v_sad_hi_u8\tv_sad_u16\t"
    "v_sad_u32\010v_sad_u8\tv_sin_f16\tv_sin_f32\nv_sqrt_f16\nv_sqrt_f32\nv_"
    "sqrt_f64\tv_sub_f16\tv_sub_f32\tv_sub_i32\tv_sub_u16\nv_subb_u32\015v_s"
    "ubbrev_u32\014v_subrev_f16\014v_subrev_f32\014v_subrev_i32\014v_subrev_"
    "u16\020v_trig_preop_f64\013v_trunc_f16\013v_trunc_f32\013v_trunc_f64\017"
    "v_writelane_b32\tv_xor_b32";

namespace {
  struct MatchEntry {
    uint16_t Mnemonic;
    uint16_t Opcode;
    uint16_t ConvertFn;
    uint16_t RequiredFeatures;
    uint8_t Classes[13];
    StringRef getMnemonic() const {
      return StringRef(MnemonicTable + Mnemonic + 1,
                       MnemonicTable[Mnemonic]);
    }
  };

  // Predicate for searching for an opcode.
  struct LessOpcode {
    bool operator()(const MatchEntry &LHS, StringRef RHS) {
      return LHS.getMnemonic() < RHS;
    }
    bool operator()(StringRef LHS, const MatchEntry &RHS) {
      return LHS < RHS.getMnemonic();
    }
    bool operator()(const MatchEntry &LHS, const MatchEntry &RHS) {
      return LHS.getMnemonic() < RHS.getMnemonic();
    }
  };
} // end anonymous namespace.

static const MatchEntry MatchTable0[] = {
  { 0 /* CALL_FS */, AMDGPU::CF_CALL_FS_EG, Convert_NoOperands, 0, {  }, },
  { 0 /* CALL_FS */, AMDGPU::CF_CALL_FS_R600, Convert_NoOperands, 0, {  }, },
  { 8 /* CF_END */, AMDGPU::CF_END_CM, Convert_NoOperands, 0, {  }, },
  { 8 /* CF_END */, AMDGPU::CF_END_EG, Convert_NoOperands, 0, {  }, },
  { 8 /* CF_END */, AMDGPU::CF_END_R600, Convert_NoOperands, 0, {  }, },
  { 15 /* CONTINUE */, AMDGPU::CF_CONTINUE_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 15 /* CONTINUE */, AMDGPU::CF_CONTINUE_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 24 /* ELSE */, AMDGPU::CF_ELSE_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 24 /* ELSE */, AMDGPU::CF_ELSE_R600, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 29 /* END_LOOP */, AMDGPU::END_LOOP_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 29 /* END_LOOP */, AMDGPU::END_LOOP_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 38 /* INTERP_LOAD */, AMDGPU::INTERP_VEC_LOAD, Convert__Reg1_2__Imm1_0, 0, { MCK_Imm, MCK__COLON_, MCK_R600_Reg128 }, },
  { 50 /* INTERP_PAIR_XY */, AMDGPU::INTERP_PAIR_XY, Convert__Reg1_4__imm_95_0__Imm1_0__Reg1_1__Reg1_2, 0, { MCK_Imm, MCK_R600_TReg32_Y, MCK_R600_TReg32_X, MCK__COLON_, MCK_R600_TReg32_X, MCK_dst1 }, },
  { 65 /* INTERP_PAIR_ZW */, AMDGPU::INTERP_PAIR_ZW, Convert__Reg1_4__imm_95_0__Imm1_0__Reg1_1__Reg1_2, 0, { MCK_Imm, MCK_R600_TReg32_Y, MCK_R600_TReg32_X, MCK__COLON_, MCK_R600_TReg32_Z, MCK_dst1 }, },
  { 80 /* JUMP */, AMDGPU::CF_JUMP_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 80 /* JUMP */, AMDGPU::CF_JUMP_R600, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 85 /* LOOP_BREAK */, AMDGPU::LOOP_BREAK_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 85 /* LOOP_BREAK */, AMDGPU::LOOP_BREAK_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 96 /* LOOP_START_DX10 */, AMDGPU::WHILE_LOOP_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 96 /* LOOP_START_DX10 */, AMDGPU::WHILE_LOOP_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 112 /* MASK_WRITE */, AMDGPU::MASK_WRITE, Convert__Reg1_0, 0, { MCK_R600_Reg32 }, },
  { 123 /* PAD */, AMDGPU::PAD, Convert_NoOperands, 0, {  }, },
  { 127 /* POP */, AMDGPU::POP_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 127 /* POP */, AMDGPU::POP_R600, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 131 /* PUSH */, AMDGPU::CF_PUSH_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 136 /* PUSH_ELSE */, AMDGPU::CF_PUSH_ELSE_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 146 /* TEX */, AMDGPU::CF_TC_EG, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 146 /* TEX */, AMDGPU::CF_TC_R600, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 150 /* VTX */, AMDGPU::CF_VC_EG, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 150 /* VTX */, AMDGPU::CF_VC_R600, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 154 /* buffer_atomic_add */, AMDGPU::BUFFER_ATOMIC_ADD_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 172 /* buffer_atomic_add_x2 */, AMDGPU::BUFFER_ATOMIC_ADD_X2_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 193 /* buffer_atomic_and */, AMDGPU::BUFFER_ATOMIC_AND_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 211 /* buffer_atomic_and_x2 */, AMDGPU::BUFFER_ATOMIC_AND_X2_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 232 /* buffer_atomic_cmpswap */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 254 /* buffer_atomic_cmpswap_x2 */, AMDGPU::BUFFER_ATOMIC_CMPSWAP_X2_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 279 /* buffer_atomic_dec */, AMDGPU::BUFFER_ATOMIC_DEC_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 297 /* buffer_atomic_dec_x2 */, AMDGPU::BUFFER_ATOMIC_DEC_X2_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 318 /* buffer_atomic_inc */, AMDGPU::BUFFER_ATOMIC_INC_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 336 /* buffer_atomic_inc_x2 */, AMDGPU::BUFFER_ATOMIC_INC_X2_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 357 /* buffer_atomic_or */, AMDGPU::BUFFER_ATOMIC_OR_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 374 /* buffer_atomic_or_x2 */, AMDGPU::BUFFER_ATOMIC_OR_X2_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 394 /* buffer_atomic_smax */, AMDGPU::BUFFER_ATOMIC_SMAX_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 413 /* buffer_atomic_smax_x2 */, AMDGPU::BUFFER_ATOMIC_SMAX_X2_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 435 /* buffer_atomic_smin */, AMDGPU::BUFFER_ATOMIC_SMIN_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 454 /* buffer_atomic_smin_x2 */, AMDGPU::BUFFER_ATOMIC_SMIN_X2_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 476 /* buffer_atomic_sub */, AMDGPU::BUFFER_ATOMIC_SUB_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 494 /* buffer_atomic_sub_x2 */, AMDGPU::BUFFER_ATOMIC_SUB_X2_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 515 /* buffer_atomic_swap */, AMDGPU::BUFFER_ATOMIC_SWAP_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 534 /* buffer_atomic_swap_x2 */, AMDGPU::BUFFER_ATOMIC_SWAP_X2_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 556 /* buffer_atomic_umax */, AMDGPU::BUFFER_ATOMIC_UMAX_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 575 /* buffer_atomic_umax_x2 */, AMDGPU::BUFFER_ATOMIC_UMAX_X2_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 597 /* buffer_atomic_umin */, AMDGPU::BUFFER_ATOMIC_UMIN_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 616 /* buffer_atomic_umin_x2 */, AMDGPU::BUFFER_ATOMIC_UMIN_X2_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 638 /* buffer_atomic_xor */, AMDGPU::BUFFER_ATOMIC_XOR_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_OFFSET_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_OFFSET_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_RTN_OFFSET_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_RTN_OFFSET_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_ADDR64_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_IDXEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_IDXEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_OFFEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_OFFEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_RTN_ADDR64_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_BOTHEN_si, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_BOTHEN_vi, ConvertCustom_cvtMubufAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_RTN_IDXEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_RTN_IDXEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_RTN_OFFEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_RTN_OFFEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_RTN_BOTHEN_si, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 656 /* buffer_atomic_xor_x2 */, AMDGPU::BUFFER_ATOMIC_XOR_X2_RTN_BOTHEN_vi, ConvertCustom_cvtMubufAtomicReturn, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_glc, MCK_ImmSLC }, },
  { 677 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 677 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 677 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 677 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 677 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 677 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 677 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 677 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 677 /* buffer_load_dword */, AMDGPU::BUFFER_LOAD_DWORD_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 695 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 695 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 695 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 695 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 695 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 695 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 695 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 695 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 695 /* buffer_load_dwordx2 */, AMDGPU::BUFFER_LOAD_DWORDX2_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 715 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 715 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 715 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 715 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 715 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 715 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 715 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 715 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 715 /* buffer_load_dwordx3 */, AMDGPU::BUFFER_LOAD_DWORDX3_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 735 /* buffer_load_dwordx4 */, AMDGPU::BUFFER_LOAD_DWORDX4_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 755 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 755 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 755 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 755 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 755 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 755 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 755 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 755 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 755 /* buffer_load_format_x */, AMDGPU::BUFFER_LOAD_FORMAT_X_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 776 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 776 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 776 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 776 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 776 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 776 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 776 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 776 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 776 /* buffer_load_format_xy */, AMDGPU::BUFFER_LOAD_FORMAT_XY_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 798 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 798 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 798 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 798 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 798 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 798 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 798 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 798 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 798 /* buffer_load_format_xyz */, AMDGPU::BUFFER_LOAD_FORMAT_XYZ_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 821 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 821 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 821 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 821 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 821 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 821 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 821 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 821 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 821 /* buffer_load_format_xyzw */, AMDGPU::BUFFER_LOAD_FORMAT_XYZW_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 845 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 845 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 845 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 845 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 845 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 845 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 845 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 845 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 845 /* buffer_load_sbyte */, AMDGPU::BUFFER_LOAD_SBYTE_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 863 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 863 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 863 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 863 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 863 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 863 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 863 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 863 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 863 /* buffer_load_sshort */, AMDGPU::BUFFER_LOAD_SSHORT_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 882 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 882 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 882 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 882 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 882 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 882 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 882 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 882 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 882 /* buffer_load_ubyte */, AMDGPU::BUFFER_LOAD_UBYTE_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 900 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 900 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 900 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 900 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 900 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 900 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 900 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 900 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 900 /* buffer_load_ushort */, AMDGPU::BUFFER_LOAD_USHORT_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 919 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 919 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 919 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 919 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 919 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 919 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 919 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 919 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 919 /* buffer_store_byte */, AMDGPU::BUFFER_STORE_BYTE_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 937 /* buffer_store_dword */, AMDGPU::BUFFER_STORE_DWORD_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 956 /* buffer_store_dwordx2 */, AMDGPU::BUFFER_STORE_DWORDX2_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 977 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 977 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 977 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 977 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 977 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 977 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 977 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 977 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 977 /* buffer_store_dwordx3 */, AMDGPU::BUFFER_STORE_DWORDX3_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 998 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 998 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 998 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 998 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 998 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 998 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 998 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 998 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 998 /* buffer_store_dwordx4 */, AMDGPU::BUFFER_STORE_DWORDX4_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1019 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1019 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1019 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1019 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1019 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1019 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1019 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1019 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1019 /* buffer_store_format_x */, AMDGPU::BUFFER_STORE_FORMAT_X_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1041 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1041 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1041 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1041 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1041 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1041 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1041 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1041 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1041 /* buffer_store_format_xy */, AMDGPU::BUFFER_STORE_FORMAT_XY_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1064 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1064 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1064 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1064 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1064 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1064 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1064 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1064 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1064 /* buffer_store_format_xyz */, AMDGPU::BUFFER_STORE_FORMAT_XYZ_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1088 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1088 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1088 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1088 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1088 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1088 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1088 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1088 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1088 /* buffer_store_format_xyzw */, AMDGPU::BUFFER_STORE_FORMAT_XYZW_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1113 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_OFFSET_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1113 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_OFFSET_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_off, MCK_SReg_128, MCK_SCSrcB32, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1113 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_ADDR64_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_addr64, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1113 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_IDXEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1113 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_IDXEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1113 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_OFFEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1113 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_OFFEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_128, MCK_SCSrcB32, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1113 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_BOTHEN_si, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1113 /* buffer_store_short */, AMDGPU::BUFFER_STORE_SHORT_BOTHEN_vi, ConvertCustom_cvtMubuf, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_128, MCK_SCSrcB32, MCK_idxen, MCK_offen, MCK_ImmOffset, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 1132 /* buffer_wbinvl1 */, AMDGPU::BUFFER_WBINVL1_si, Convert_NoOperands, Feature_isGCN|Feature_isSICI, {  }, },
  { 1132 /* buffer_wbinvl1 */, AMDGPU::BUFFER_WBINVL1_vi, Convert_NoOperands, Feature_isGCN|Feature_isVI, {  }, },
  { 1147 /* buffer_wbinvl1_sc */, AMDGPU::BUFFER_WBINVL1_SC_si, Convert_NoOperands, Feature_isSI|Feature_isSICI, {  }, },
  { 1165 /* buffer_wbinvl1_vol */, AMDGPU::BUFFER_WBINVL1_VOL_ci, Convert_NoOperands, Feature_isCIVI|Feature_isCIOnly, {  }, },
  { 1165 /* buffer_wbinvl1_vol */, AMDGPU::BUFFER_WBINVL1_VOL_vi, Convert_NoOperands, Feature_isCIVI|Feature_isVI, {  }, },
  { 1184 /* ds_add_f32 */, AMDGPU::DS_ADD_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1195 /* ds_add_rtn_f32 */, AMDGPU::DS_ADD_RTN_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1210 /* ds_add_rtn_u32 */, AMDGPU::DS_ADD_RTN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1210 /* ds_add_rtn_u32 */, AMDGPU::DS_ADD_RTN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1225 /* ds_add_rtn_u64 */, AMDGPU::DS_ADD_RTN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1225 /* ds_add_rtn_u64 */, AMDGPU::DS_ADD_RTN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1240 /* ds_add_src2_u32 */, AMDGPU::DS_ADD_SRC2_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1240 /* ds_add_src2_u32 */, AMDGPU::DS_ADD_SRC2_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1256 /* ds_add_src2_u64 */, AMDGPU::DS_ADD_SRC2_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1256 /* ds_add_src2_u64 */, AMDGPU::DS_ADD_SRC2_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1272 /* ds_add_u32 */, AMDGPU::DS_ADD_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1272 /* ds_add_u32 */, AMDGPU::DS_ADD_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1283 /* ds_add_u64 */, AMDGPU::DS_ADD_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1283 /* ds_add_u64 */, AMDGPU::DS_ADD_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1294 /* ds_and_b32 */, AMDGPU::DS_AND_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1294 /* ds_and_b32 */, AMDGPU::DS_AND_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1305 /* ds_and_b64 */, AMDGPU::DS_AND_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1305 /* ds_and_b64 */, AMDGPU::DS_AND_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1316 /* ds_and_rtn_b32 */, AMDGPU::DS_AND_RTN_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1316 /* ds_and_rtn_b32 */, AMDGPU::DS_AND_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1331 /* ds_and_rtn_b64 */, AMDGPU::DS_AND_RTN_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1331 /* ds_and_rtn_b64 */, AMDGPU::DS_AND_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1346 /* ds_and_src2_b64 */, AMDGPU::DS_AND_SRC2_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1346 /* ds_and_src2_b64 */, AMDGPU::DS_AND_SRC2_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1362 /* ds_and_src_b32 */, AMDGPU::DS_AND_SRC2_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1362 /* ds_and_src_b32 */, AMDGPU::DS_AND_SRC2_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1377 /* ds_append */, AMDGPU::DS_APPEND_si, ConvertCustom_cvtDS, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1387 /* ds_bpermute_b32 */, AMDGPU::DS_BPERMUTE_B32_vi, ConvertCustom_cvtDS, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset }, },
  { 1403 /* ds_cmpst_b32 */, AMDGPU::DS_CMPST_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1403 /* ds_cmpst_b32 */, AMDGPU::DS_CMPST_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1416 /* ds_cmpst_b64 */, AMDGPU::DS_CMPST_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1416 /* ds_cmpst_b64 */, AMDGPU::DS_CMPST_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1429 /* ds_cmpst_f32 */, AMDGPU::DS_CMPST_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1429 /* ds_cmpst_f32 */, AMDGPU::DS_CMPST_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1442 /* ds_cmpst_f64 */, AMDGPU::DS_CMPST_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1442 /* ds_cmpst_f64 */, AMDGPU::DS_CMPST_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1455 /* ds_cmpst_rtn_b32 */, AMDGPU::DS_CMPST_RTN_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1455 /* ds_cmpst_rtn_b32 */, AMDGPU::DS_CMPST_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1472 /* ds_cmpst_rtn_b64 */, AMDGPU::DS_CMPST_RTN_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1472 /* ds_cmpst_rtn_b64 */, AMDGPU::DS_CMPST_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1489 /* ds_cmpst_rtn_f32 */, AMDGPU::DS_CMPST_RTN_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1489 /* ds_cmpst_rtn_f32 */, AMDGPU::DS_CMPST_RTN_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1506 /* ds_cmpst_rtn_f64 */, AMDGPU::DS_CMPST_RTN_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1506 /* ds_cmpst_rtn_f64 */, AMDGPU::DS_CMPST_RTN_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1523 /* ds_consume */, AMDGPU::DS_CONSUME_si, ConvertCustom_cvtDS, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1534 /* ds_dec_rtn_u32 */, AMDGPU::DS_DEC_RTN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1534 /* ds_dec_rtn_u32 */, AMDGPU::DS_DEC_RTN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1549 /* ds_dec_rtn_u64 */, AMDGPU::DS_DEC_RTN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1549 /* ds_dec_rtn_u64 */, AMDGPU::DS_DEC_RTN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1564 /* ds_dec_src2_u32 */, AMDGPU::DS_DEC_SRC2_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1564 /* ds_dec_src2_u32 */, AMDGPU::DS_DEC_SRC2_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1580 /* ds_dec_src2_u64 */, AMDGPU::DS_DEC_SRC2_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1580 /* ds_dec_src2_u64 */, AMDGPU::DS_DEC_SRC2_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1596 /* ds_dec_u32 */, AMDGPU::DS_DEC_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1596 /* ds_dec_u32 */, AMDGPU::DS_DEC_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1607 /* ds_dec_u64 */, AMDGPU::DS_DEC_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1607 /* ds_dec_u64 */, AMDGPU::DS_DEC_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1618 /* ds_gws_barrier */, AMDGPU::DS_GWS_BARRIER_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_gds }, },
  { 1618 /* ds_gws_barrier */, AMDGPU::DS_GWS_BARRIER_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_gds }, },
  { 1633 /* ds_gws_init */, AMDGPU::DS_GWS_INIT_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_gds }, },
  { 1633 /* ds_gws_init */, AMDGPU::DS_GWS_INIT_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_gds }, },
  { 1645 /* ds_gws_sema_br */, AMDGPU::DS_GWS_SEMA_BR_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_gds }, },
  { 1645 /* ds_gws_sema_br */, AMDGPU::DS_GWS_SEMA_BR_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_gds }, },
  { 1660 /* ds_gws_sema_p */, AMDGPU::DS_GWS_SEMA_P_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_gds }, },
  { 1660 /* ds_gws_sema_p */, AMDGPU::DS_GWS_SEMA_P_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_gds }, },
  { 1674 /* ds_gws_sema_v */, AMDGPU::DS_GWS_SEMA_V_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_gds }, },
  { 1674 /* ds_gws_sema_v */, AMDGPU::DS_GWS_SEMA_V_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_gds }, },
  { 1688 /* ds_inc_rtn_u32 */, AMDGPU::DS_INC_RTN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1688 /* ds_inc_rtn_u32 */, AMDGPU::DS_INC_RTN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1703 /* ds_inc_rtn_u64 */, AMDGPU::DS_INC_RTN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1703 /* ds_inc_rtn_u64 */, AMDGPU::DS_INC_RTN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1718 /* ds_inc_src2_u32 */, AMDGPU::DS_INC_SRC2_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1718 /* ds_inc_src2_u32 */, AMDGPU::DS_INC_SRC2_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1734 /* ds_inc_src2_u64 */, AMDGPU::DS_INC_SRC2_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1734 /* ds_inc_src2_u64 */, AMDGPU::DS_INC_SRC2_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1750 /* ds_inc_u32 */, AMDGPU::DS_INC_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1750 /* ds_inc_u32 */, AMDGPU::DS_INC_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1761 /* ds_inc_u64 */, AMDGPU::DS_INC_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1761 /* ds_inc_u64 */, AMDGPU::DS_INC_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1772 /* ds_max_f32 */, AMDGPU::DS_MAX_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1772 /* ds_max_f32 */, AMDGPU::DS_MAX_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1783 /* ds_max_f64 */, AMDGPU::DS_MAX_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1783 /* ds_max_f64 */, AMDGPU::DS_MAX_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1794 /* ds_max_i32 */, AMDGPU::DS_MAX_I32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1794 /* ds_max_i32 */, AMDGPU::DS_MAX_I32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1805 /* ds_max_i64 */, AMDGPU::DS_MAX_I64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1805 /* ds_max_i64 */, AMDGPU::DS_MAX_I64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1816 /* ds_max_rtn_f32 */, AMDGPU::DS_MAX_RTN_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1816 /* ds_max_rtn_f32 */, AMDGPU::DS_MAX_RTN_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1831 /* ds_max_rtn_f64 */, AMDGPU::DS_MAX_RTN_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1831 /* ds_max_rtn_f64 */, AMDGPU::DS_MAX_RTN_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1846 /* ds_max_rtn_i32 */, AMDGPU::DS_MAX_RTN_I32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1846 /* ds_max_rtn_i32 */, AMDGPU::DS_MAX_RTN_I32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1861 /* ds_max_rtn_i64 */, AMDGPU::DS_MAX_RTN_I64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1861 /* ds_max_rtn_i64 */, AMDGPU::DS_MAX_RTN_I64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1876 /* ds_max_rtn_u32 */, AMDGPU::DS_MAX_RTN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1876 /* ds_max_rtn_u32 */, AMDGPU::DS_MAX_RTN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1891 /* ds_max_rtn_u64 */, AMDGPU::DS_MAX_RTN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1891 /* ds_max_rtn_u64 */, AMDGPU::DS_MAX_RTN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1906 /* ds_max_src2_f32 */, AMDGPU::DS_MAX_SRC2_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1906 /* ds_max_src2_f32 */, AMDGPU::DS_MAX_SRC2_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1922 /* ds_max_src2_f64 */, AMDGPU::DS_MAX_SRC2_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1922 /* ds_max_src2_f64 */, AMDGPU::DS_MAX_SRC2_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1938 /* ds_max_src2_i32 */, AMDGPU::DS_MAX_SRC2_I32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1938 /* ds_max_src2_i32 */, AMDGPU::DS_MAX_SRC2_I32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1954 /* ds_max_src2_i64 */, AMDGPU::DS_MAX_SRC2_I64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1954 /* ds_max_src2_i64 */, AMDGPU::DS_MAX_SRC2_I64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1970 /* ds_max_src2_u32 */, AMDGPU::DS_MAX_SRC2_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1970 /* ds_max_src2_u32 */, AMDGPU::DS_MAX_SRC2_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1986 /* ds_max_src2_u64 */, AMDGPU::DS_MAX_SRC2_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 1986 /* ds_max_src2_u64 */, AMDGPU::DS_MAX_SRC2_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2002 /* ds_max_u32 */, AMDGPU::DS_MAX_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2002 /* ds_max_u32 */, AMDGPU::DS_MAX_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2013 /* ds_max_u64 */, AMDGPU::DS_MAX_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2013 /* ds_max_u64 */, AMDGPU::DS_MAX_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2024 /* ds_min_f32 */, AMDGPU::DS_MIN_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2024 /* ds_min_f32 */, AMDGPU::DS_MIN_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2035 /* ds_min_f64 */, AMDGPU::DS_MIN_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2035 /* ds_min_f64 */, AMDGPU::DS_MIN_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2046 /* ds_min_i32 */, AMDGPU::DS_MIN_I32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2046 /* ds_min_i32 */, AMDGPU::DS_MIN_I32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2057 /* ds_min_i64 */, AMDGPU::DS_MIN_I64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2057 /* ds_min_i64 */, AMDGPU::DS_MIN_I64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2068 /* ds_min_rtn_f32 */, AMDGPU::DS_MIN_RTN_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2068 /* ds_min_rtn_f32 */, AMDGPU::DS_MIN_RTN_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2083 /* ds_min_rtn_f64 */, AMDGPU::DS_MIN_RTN_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2083 /* ds_min_rtn_f64 */, AMDGPU::DS_MIN_RTN_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2098 /* ds_min_rtn_i32 */, AMDGPU::DS_MIN_RTN_I32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2098 /* ds_min_rtn_i32 */, AMDGPU::DS_MIN_RTN_I32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2113 /* ds_min_rtn_i64 */, AMDGPU::DS_MIN_RTN_I64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2113 /* ds_min_rtn_i64 */, AMDGPU::DS_MIN_RTN_I64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2128 /* ds_min_rtn_u32 */, AMDGPU::DS_MIN_RTN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2128 /* ds_min_rtn_u32 */, AMDGPU::DS_MIN_RTN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2143 /* ds_min_rtn_u64 */, AMDGPU::DS_MIN_RTN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2143 /* ds_min_rtn_u64 */, AMDGPU::DS_MIN_RTN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2158 /* ds_min_src2_f32 */, AMDGPU::DS_MIN_SRC2_F32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2158 /* ds_min_src2_f32 */, AMDGPU::DS_MIN_SRC2_F32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2174 /* ds_min_src2_f64 */, AMDGPU::DS_MIN_SRC2_F64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2174 /* ds_min_src2_f64 */, AMDGPU::DS_MIN_SRC2_F64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2190 /* ds_min_src2_i32 */, AMDGPU::DS_MIN_SRC2_I32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2190 /* ds_min_src2_i32 */, AMDGPU::DS_MIN_SRC2_I32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2206 /* ds_min_src2_i64 */, AMDGPU::DS_MIN_SRC2_I64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2206 /* ds_min_src2_i64 */, AMDGPU::DS_MIN_SRC2_I64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2222 /* ds_min_src2_u32 */, AMDGPU::DS_MIN_SRC2_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2222 /* ds_min_src2_u32 */, AMDGPU::DS_MIN_SRC2_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2238 /* ds_min_src2_u64 */, AMDGPU::DS_MIN_SRC2_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2238 /* ds_min_src2_u64 */, AMDGPU::DS_MIN_SRC2_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2254 /* ds_min_u32 */, AMDGPU::DS_MIN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2254 /* ds_min_u32 */, AMDGPU::DS_MIN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2265 /* ds_min_u64 */, AMDGPU::DS_MIN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2265 /* ds_min_u64 */, AMDGPU::DS_MIN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2276 /* ds_mskor_b32 */, AMDGPU::DS_MSKOR_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2276 /* ds_mskor_b32 */, AMDGPU::DS_MSKOR_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2289 /* ds_mskor_b64 */, AMDGPU::DS_MSKOR_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2289 /* ds_mskor_b64 */, AMDGPU::DS_MSKOR_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2302 /* ds_mskor_rtn_b32 */, AMDGPU::DS_MSKOR_RTN_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2302 /* ds_mskor_rtn_b32 */, AMDGPU::DS_MSKOR_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2319 /* ds_mskor_rtn_b64 */, AMDGPU::DS_MSKOR_RTN_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2319 /* ds_mskor_rtn_b64 */, AMDGPU::DS_MSKOR_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2336 /* ds_or_b32 */, AMDGPU::DS_OR_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2336 /* ds_or_b32 */, AMDGPU::DS_OR_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2346 /* ds_or_b64 */, AMDGPU::DS_OR_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2346 /* ds_or_b64 */, AMDGPU::DS_OR_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2356 /* ds_or_rtn_b32 */, AMDGPU::DS_OR_RTN_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2356 /* ds_or_rtn_b32 */, AMDGPU::DS_OR_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2370 /* ds_or_rtn_b64 */, AMDGPU::DS_OR_RTN_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2370 /* ds_or_rtn_b64 */, AMDGPU::DS_OR_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2384 /* ds_or_src2_b32 */, AMDGPU::DS_OR_SRC2_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2384 /* ds_or_src2_b32 */, AMDGPU::DS_OR_SRC2_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2399 /* ds_or_src2_b64 */, AMDGPU::DS_OR_SRC2_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2399 /* ds_or_src2_b64 */, AMDGPU::DS_OR_SRC2_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2414 /* ds_ordered_count */, AMDGPU::DS_ORDERED_COUNT_si, ConvertCustom_cvtDS, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_gds }, },
  { 2431 /* ds_permute_b32 */, AMDGPU::DS_PERMUTE_B32_vi, ConvertCustom_cvtDS, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset }, },
  { 2446 /* ds_read2_b32 */, AMDGPU::DS_READ2_B32_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2446 /* ds_read2_b32 */, AMDGPU::DS_READ2_B32_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2459 /* ds_read2_b64 */, AMDGPU::DS_READ2_B64_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2459 /* ds_read2_b64 */, AMDGPU::DS_READ2_B64_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2472 /* ds_read2st64_b32 */, AMDGPU::DS_READ2ST64_B32_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2472 /* ds_read2st64_b32 */, AMDGPU::DS_READ2ST64_B32_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2489 /* ds_read2st64_b64 */, AMDGPU::DS_READ2ST64_B64_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2489 /* ds_read2st64_b64 */, AMDGPU::DS_READ2ST64_B64_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2506 /* ds_read_b32 */, AMDGPU::DS_READ_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2506 /* ds_read_b32 */, AMDGPU::DS_READ_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2518 /* ds_read_b64 */, AMDGPU::DS_READ_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2518 /* ds_read_b64 */, AMDGPU::DS_READ_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2530 /* ds_read_i16 */, AMDGPU::DS_READ_I16_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2530 /* ds_read_i16 */, AMDGPU::DS_READ_I16_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2542 /* ds_read_i8 */, AMDGPU::DS_READ_I8_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2542 /* ds_read_i8 */, AMDGPU::DS_READ_I8_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2553 /* ds_read_u16 */, AMDGPU::DS_READ_U16_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2553 /* ds_read_u16 */, AMDGPU::DS_READ_U16_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2565 /* ds_read_u8 */, AMDGPU::DS_READ_U8_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2565 /* ds_read_u8 */, AMDGPU::DS_READ_U8_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2576 /* ds_rsub_rtn_u32 */, AMDGPU::DS_RSUB_RTN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2576 /* ds_rsub_rtn_u32 */, AMDGPU::DS_RSUB_RTN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2592 /* ds_rsub_rtn_u64 */, AMDGPU::DS_RSUB_RTN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2592 /* ds_rsub_rtn_u64 */, AMDGPU::DS_RSUB_RTN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2608 /* ds_rsub_src2_u32 */, AMDGPU::DS_RSUB_SRC2_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2608 /* ds_rsub_src2_u32 */, AMDGPU::DS_RSUB_SRC2_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2625 /* ds_rsub_src2_u64 */, AMDGPU::DS_RSUB_SRC2_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2625 /* ds_rsub_src2_u64 */, AMDGPU::DS_RSUB_SRC2_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2642 /* ds_rsub_u32 */, AMDGPU::DS_RSUB_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2642 /* ds_rsub_u32 */, AMDGPU::DS_RSUB_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2654 /* ds_rsub_u64 */, AMDGPU::DS_RSUB_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2654 /* ds_rsub_u64 */, AMDGPU::DS_RSUB_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2666 /* ds_sub_rtn_u32 */, AMDGPU::DS_SUB_RTN_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2666 /* ds_sub_rtn_u32 */, AMDGPU::DS_SUB_RTN_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2681 /* ds_sub_rtn_u64 */, AMDGPU::DS_SUB_RTN_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2681 /* ds_sub_rtn_u64 */, AMDGPU::DS_SUB_RTN_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2696 /* ds_sub_src2_u32 */, AMDGPU::DS_SUB_SRC2_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2696 /* ds_sub_src2_u32 */, AMDGPU::DS_SUB_SRC2_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2712 /* ds_sub_src2_u64 */, AMDGPU::DS_SUB_SRC2_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2712 /* ds_sub_src2_u64 */, AMDGPU::DS_SUB_SRC2_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2728 /* ds_sub_u32 */, AMDGPU::DS_SUB_U32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2728 /* ds_sub_u32 */, AMDGPU::DS_SUB_U32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2739 /* ds_sub_u64 */, AMDGPU::DS_SUB_U64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2739 /* ds_sub_u64 */, AMDGPU::DS_SUB_U64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2750 /* ds_swizzle_b32 */, AMDGPU::DS_SWIZZLE_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2750 /* ds_swizzle_b32 */, AMDGPU::DS_SWIZZLE_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2765 /* ds_wrap_rtn_f32 */, AMDGPU::DS_WRAP_RTN_F32_si, ConvertCustom_cvtDS, Feature_isCIVI|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2765 /* ds_wrap_rtn_f32 */, AMDGPU::DS_WRAP_RTN_F32_vi, ConvertCustom_cvtDS, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2781 /* ds_write2_b32 */, AMDGPU::DS_WRITE2_B32_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2781 /* ds_write2_b32 */, AMDGPU::DS_WRITE2_B32_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2795 /* ds_write2_b64 */, AMDGPU::DS_WRITE2_B64_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2795 /* ds_write2_b64 */, AMDGPU::DS_WRITE2_B64_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2809 /* ds_write2st64_b32 */, AMDGPU::DS_WRITE2ST64_B32_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2809 /* ds_write2st64_b32 */, AMDGPU::DS_WRITE2ST64_B32_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2827 /* ds_write2st64_b64 */, AMDGPU::DS_WRITE2ST64_B64_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2827 /* ds_write2st64_b64 */, AMDGPU::DS_WRITE2ST64_B64_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2845 /* ds_write_b16 */, AMDGPU::DS_WRITE_B16_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2845 /* ds_write_b16 */, AMDGPU::DS_WRITE_B16_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2858 /* ds_write_b32 */, AMDGPU::DS_WRITE_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2858 /* ds_write_b32 */, AMDGPU::DS_WRITE_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2871 /* ds_write_b64 */, AMDGPU::DS_WRITE_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2871 /* ds_write_b64 */, AMDGPU::DS_WRITE_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2884 /* ds_write_b8 */, AMDGPU::DS_WRITE_B8_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2884 /* ds_write_b8 */, AMDGPU::DS_WRITE_B8_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2896 /* ds_write_src2_b32 */, AMDGPU::DS_WRITE_SRC2_B32_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2896 /* ds_write_src2_b32 */, AMDGPU::DS_WRITE_SRC2_B32_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2914 /* ds_write_src2_b64 */, AMDGPU::DS_WRITE_SRC2_B64_si, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2914 /* ds_write_src2_b64 */, AMDGPU::DS_WRITE_SRC2_B64_vi, ConvertCustom_cvtDSOffset01, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset0, MCK_ImmOffset1, MCK_ImmGDS }, },
  { 2932 /* ds_wrxchg2_rtn_b32 */, AMDGPU::DS_WRXCHG2_RTN_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2932 /* ds_wrxchg2_rtn_b32 */, AMDGPU::DS_WRXCHG2_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2951 /* ds_wrxchg2_rtn_b64 */, AMDGPU::DS_WRXCHG2_RTN_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2951 /* ds_wrxchg2_rtn_b64 */, AMDGPU::DS_WRXCHG2_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2970 /* ds_wrxchg2st64_rtn_b32 */, AMDGPU::DS_WRXCHG2ST64_RTN_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2970 /* ds_wrxchg2st64_rtn_b32 */, AMDGPU::DS_WRXCHG2ST64_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2993 /* ds_wrxchg2st64_rtn_b64 */, AMDGPU::DS_WRXCHG2ST64_RTN_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 2993 /* ds_wrxchg2st64_rtn_b64 */, AMDGPU::DS_WRXCHG2ST64_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3016 /* ds_wrxchg_rtn_b32 */, AMDGPU::DS_WRXCHG_RTN_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3016 /* ds_wrxchg_rtn_b32 */, AMDGPU::DS_WRXCHG_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3034 /* ds_wrxchg_rtn_b64 */, AMDGPU::DS_WRXCHG_RTN_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3034 /* ds_wrxchg_rtn_b64 */, AMDGPU::DS_WRXCHG_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3052 /* ds_xor_b32 */, AMDGPU::DS_XOR_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3052 /* ds_xor_b32 */, AMDGPU::DS_XOR_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3063 /* ds_xor_b64 */, AMDGPU::DS_XOR_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3063 /* ds_xor_b64 */, AMDGPU::DS_XOR_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3074 /* ds_xor_rtn_b32 */, AMDGPU::DS_XOR_RTN_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3074 /* ds_xor_rtn_b32 */, AMDGPU::DS_XOR_RTN_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3089 /* ds_xor_rtn_b64 */, AMDGPU::DS_XOR_RTN_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3089 /* ds_xor_rtn_b64 */, AMDGPU::DS_XOR_RTN_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_VReg_64, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3104 /* ds_xor_src2_b32 */, AMDGPU::DS_XOR_SRC2_B32_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3104 /* ds_xor_src2_b32 */, AMDGPU::DS_XOR_SRC2_B32_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3120 /* ds_xor_src2_b64 */, AMDGPU::DS_XOR_SRC2_B64_si, ConvertCustom_cvtDS, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3120 /* ds_xor_src2_b64 */, AMDGPU::DS_XOR_SRC2_B64_vi, ConvertCustom_cvtDS, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_ImmOffset, MCK_ImmGDS }, },
  { 3136 /* exp */, AMDGPU::EXP_si, ConvertCustom_cvtExp, Feature_isGCN, { MCK_ImmExpTgt, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_ImmExpCompr, MCK_ImmExpVM }, },
  { 3136 /* exp */, AMDGPU::EXP_vi, ConvertCustom_cvtExp, Feature_isGCN, { MCK_ImmExpTgt, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_ImmExpCompr, MCK_ImmExpVM }, },
  { 3136 /* exp */, AMDGPU::EXP_DONE_si, ConvertCustom_cvtExp, Feature_isGCN, { MCK_ImmExpTgt, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_done, MCK_ImmExpCompr, MCK_ImmExpVM }, },
  { 3136 /* exp */, AMDGPU::EXP_DONE_vi, ConvertCustom_cvtExp, Feature_isGCN, { MCK_ImmExpTgt, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_VReg32OrOff, MCK_done, MCK_ImmExpCompr, MCK_ImmExpVM }, },
  { 3140 /* flat_atomic_add */, AMDGPU::FLAT_ATOMIC_ADD_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3140 /* flat_atomic_add */, AMDGPU::FLAT_ATOMIC_ADD_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3140 /* flat_atomic_add */, AMDGPU::FLAT_ATOMIC_ADD_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3140 /* flat_atomic_add */, AMDGPU::FLAT_ATOMIC_ADD_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3156 /* flat_atomic_add_x2 */, AMDGPU::FLAT_ATOMIC_ADD_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3156 /* flat_atomic_add_x2 */, AMDGPU::FLAT_ATOMIC_ADD_X2_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3156 /* flat_atomic_add_x2 */, AMDGPU::FLAT_ATOMIC_ADD_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3156 /* flat_atomic_add_x2 */, AMDGPU::FLAT_ATOMIC_ADD_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3175 /* flat_atomic_and */, AMDGPU::FLAT_ATOMIC_AND_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3175 /* flat_atomic_and */, AMDGPU::FLAT_ATOMIC_AND_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3175 /* flat_atomic_and */, AMDGPU::FLAT_ATOMIC_AND_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3175 /* flat_atomic_and */, AMDGPU::FLAT_ATOMIC_AND_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3191 /* flat_atomic_and_x2 */, AMDGPU::FLAT_ATOMIC_AND_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3191 /* flat_atomic_and_x2 */, AMDGPU::FLAT_ATOMIC_AND_X2_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3191 /* flat_atomic_and_x2 */, AMDGPU::FLAT_ATOMIC_AND_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3191 /* flat_atomic_and_x2 */, AMDGPU::FLAT_ATOMIC_AND_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3210 /* flat_atomic_cmpswap */, AMDGPU::FLAT_ATOMIC_CMPSWAP_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3210 /* flat_atomic_cmpswap */, AMDGPU::FLAT_ATOMIC_CMPSWAP_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3210 /* flat_atomic_cmpswap */, AMDGPU::FLAT_ATOMIC_CMPSWAP_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3210 /* flat_atomic_cmpswap */, AMDGPU::FLAT_ATOMIC_CMPSWAP_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3230 /* flat_atomic_cmpswap_x2 */, AMDGPU::FLAT_ATOMIC_CMPSWAP_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_128, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3230 /* flat_atomic_cmpswap_x2 */, AMDGPU::FLAT_ATOMIC_CMPSWAP_X2_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3230 /* flat_atomic_cmpswap_x2 */, AMDGPU::FLAT_ATOMIC_CMPSWAP_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_128, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3230 /* flat_atomic_cmpswap_x2 */, AMDGPU::FLAT_ATOMIC_CMPSWAP_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_128, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3253 /* flat_atomic_dec */, AMDGPU::FLAT_ATOMIC_DEC_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3253 /* flat_atomic_dec */, AMDGPU::FLAT_ATOMIC_DEC_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3253 /* flat_atomic_dec */, AMDGPU::FLAT_ATOMIC_DEC_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3253 /* flat_atomic_dec */, AMDGPU::FLAT_ATOMIC_DEC_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3269 /* flat_atomic_dec_x2 */, AMDGPU::FLAT_ATOMIC_DEC_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3269 /* flat_atomic_dec_x2 */, AMDGPU::FLAT_ATOMIC_DEC_X2_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3269 /* flat_atomic_dec_x2 */, AMDGPU::FLAT_ATOMIC_DEC_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3269 /* flat_atomic_dec_x2 */, AMDGPU::FLAT_ATOMIC_DEC_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3288 /* flat_atomic_fcmpswap */, AMDGPU::FLAT_ATOMIC_FCMPSWAP_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3288 /* flat_atomic_fcmpswap */, AMDGPU::FLAT_ATOMIC_FCMPSWAP_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3309 /* flat_atomic_fcmpswap_x2 */, AMDGPU::FLAT_ATOMIC_FCMPSWAP_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_128, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3309 /* flat_atomic_fcmpswap_x2 */, AMDGPU::FLAT_ATOMIC_FCMPSWAP_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_128, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3333 /* flat_atomic_fmax */, AMDGPU::FLAT_ATOMIC_FMAX_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3333 /* flat_atomic_fmax */, AMDGPU::FLAT_ATOMIC_FMAX_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3350 /* flat_atomic_fmax_x2 */, AMDGPU::FLAT_ATOMIC_FMAX_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3350 /* flat_atomic_fmax_x2 */, AMDGPU::FLAT_ATOMIC_FMAX_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3370 /* flat_atomic_fmin */, AMDGPU::FLAT_ATOMIC_FMIN_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3370 /* flat_atomic_fmin */, AMDGPU::FLAT_ATOMIC_FMIN_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3387 /* flat_atomic_fmin_x2 */, AMDGPU::FLAT_ATOMIC_FMIN_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3387 /* flat_atomic_fmin_x2 */, AMDGPU::FLAT_ATOMIC_FMIN_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3407 /* flat_atomic_inc */, AMDGPU::FLAT_ATOMIC_INC_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3407 /* flat_atomic_inc */, AMDGPU::FLAT_ATOMIC_INC_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3407 /* flat_atomic_inc */, AMDGPU::FLAT_ATOMIC_INC_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3407 /* flat_atomic_inc */, AMDGPU::FLAT_ATOMIC_INC_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3423 /* flat_atomic_inc_x2 */, AMDGPU::FLAT_ATOMIC_INC_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3423 /* flat_atomic_inc_x2 */, AMDGPU::FLAT_ATOMIC_INC_X2_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3423 /* flat_atomic_inc_x2 */, AMDGPU::FLAT_ATOMIC_INC_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3423 /* flat_atomic_inc_x2 */, AMDGPU::FLAT_ATOMIC_INC_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3442 /* flat_atomic_or */, AMDGPU::FLAT_ATOMIC_OR_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3442 /* flat_atomic_or */, AMDGPU::FLAT_ATOMIC_OR_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3442 /* flat_atomic_or */, AMDGPU::FLAT_ATOMIC_OR_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3442 /* flat_atomic_or */, AMDGPU::FLAT_ATOMIC_OR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3457 /* flat_atomic_or_x2 */, AMDGPU::FLAT_ATOMIC_OR_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3457 /* flat_atomic_or_x2 */, AMDGPU::FLAT_ATOMIC_OR_X2_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3457 /* flat_atomic_or_x2 */, AMDGPU::FLAT_ATOMIC_OR_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3457 /* flat_atomic_or_x2 */, AMDGPU::FLAT_ATOMIC_OR_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3475 /* flat_atomic_smax */, AMDGPU::FLAT_ATOMIC_SMAX_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3475 /* flat_atomic_smax */, AMDGPU::FLAT_ATOMIC_SMAX_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3475 /* flat_atomic_smax */, AMDGPU::FLAT_ATOMIC_SMAX_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3475 /* flat_atomic_smax */, AMDGPU::FLAT_ATOMIC_SMAX_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3492 /* flat_atomic_smax_x2 */, AMDGPU::FLAT_ATOMIC_SMAX_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3492 /* flat_atomic_smax_x2 */, AMDGPU::FLAT_ATOMIC_SMAX_X2_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3492 /* flat_atomic_smax_x2 */, AMDGPU::FLAT_ATOMIC_SMAX_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3492 /* flat_atomic_smax_x2 */, AMDGPU::FLAT_ATOMIC_SMAX_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3512 /* flat_atomic_smin */, AMDGPU::FLAT_ATOMIC_SMIN_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3512 /* flat_atomic_smin */, AMDGPU::FLAT_ATOMIC_SMIN_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3512 /* flat_atomic_smin */, AMDGPU::FLAT_ATOMIC_SMIN_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3512 /* flat_atomic_smin */, AMDGPU::FLAT_ATOMIC_SMIN_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3529 /* flat_atomic_smin_x2 */, AMDGPU::FLAT_ATOMIC_SMIN_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3529 /* flat_atomic_smin_x2 */, AMDGPU::FLAT_ATOMIC_SMIN_X2_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3529 /* flat_atomic_smin_x2 */, AMDGPU::FLAT_ATOMIC_SMIN_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3529 /* flat_atomic_smin_x2 */, AMDGPU::FLAT_ATOMIC_SMIN_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3549 /* flat_atomic_sub */, AMDGPU::FLAT_ATOMIC_SUB_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3549 /* flat_atomic_sub */, AMDGPU::FLAT_ATOMIC_SUB_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3549 /* flat_atomic_sub */, AMDGPU::FLAT_ATOMIC_SUB_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3549 /* flat_atomic_sub */, AMDGPU::FLAT_ATOMIC_SUB_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3565 /* flat_atomic_sub_x2 */, AMDGPU::FLAT_ATOMIC_SUB_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3565 /* flat_atomic_sub_x2 */, AMDGPU::FLAT_ATOMIC_SUB_X2_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3565 /* flat_atomic_sub_x2 */, AMDGPU::FLAT_ATOMIC_SUB_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3565 /* flat_atomic_sub_x2 */, AMDGPU::FLAT_ATOMIC_SUB_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3584 /* flat_atomic_swap */, AMDGPU::FLAT_ATOMIC_SWAP_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3584 /* flat_atomic_swap */, AMDGPU::FLAT_ATOMIC_SWAP_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3584 /* flat_atomic_swap */, AMDGPU::FLAT_ATOMIC_SWAP_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3584 /* flat_atomic_swap */, AMDGPU::FLAT_ATOMIC_SWAP_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3601 /* flat_atomic_swap_x2 */, AMDGPU::FLAT_ATOMIC_SWAP_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3601 /* flat_atomic_swap_x2 */, AMDGPU::FLAT_ATOMIC_SWAP_X2_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3601 /* flat_atomic_swap_x2 */, AMDGPU::FLAT_ATOMIC_SWAP_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3601 /* flat_atomic_swap_x2 */, AMDGPU::FLAT_ATOMIC_SWAP_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3621 /* flat_atomic_umax */, AMDGPU::FLAT_ATOMIC_UMAX_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3621 /* flat_atomic_umax */, AMDGPU::FLAT_ATOMIC_UMAX_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3621 /* flat_atomic_umax */, AMDGPU::FLAT_ATOMIC_UMAX_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3621 /* flat_atomic_umax */, AMDGPU::FLAT_ATOMIC_UMAX_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3638 /* flat_atomic_umax_x2 */, AMDGPU::FLAT_ATOMIC_UMAX_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3638 /* flat_atomic_umax_x2 */, AMDGPU::FLAT_ATOMIC_UMAX_X2_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3638 /* flat_atomic_umax_x2 */, AMDGPU::FLAT_ATOMIC_UMAX_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3638 /* flat_atomic_umax_x2 */, AMDGPU::FLAT_ATOMIC_UMAX_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3658 /* flat_atomic_umin */, AMDGPU::FLAT_ATOMIC_UMIN_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3658 /* flat_atomic_umin */, AMDGPU::FLAT_ATOMIC_UMIN_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3658 /* flat_atomic_umin */, AMDGPU::FLAT_ATOMIC_UMIN_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3658 /* flat_atomic_umin */, AMDGPU::FLAT_ATOMIC_UMIN_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3675 /* flat_atomic_umin_x2 */, AMDGPU::FLAT_ATOMIC_UMIN_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3675 /* flat_atomic_umin_x2 */, AMDGPU::FLAT_ATOMIC_UMIN_X2_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3675 /* flat_atomic_umin_x2 */, AMDGPU::FLAT_ATOMIC_UMIN_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3675 /* flat_atomic_umin_x2 */, AMDGPU::FLAT_ATOMIC_UMIN_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3695 /* flat_atomic_xor */, AMDGPU::FLAT_ATOMIC_XOR_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3695 /* flat_atomic_xor */, AMDGPU::FLAT_ATOMIC_XOR_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3695 /* flat_atomic_xor */, AMDGPU::FLAT_ATOMIC_XOR_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3695 /* flat_atomic_xor */, AMDGPU::FLAT_ATOMIC_XOR_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_VGPR_32, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3711 /* flat_atomic_xor_x2 */, AMDGPU::FLAT_ATOMIC_XOR_X2_ci, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3711 /* flat_atomic_xor_x2 */, AMDGPU::FLAT_ATOMIC_XOR_X2_vi, Convert__Reg1_0__Reg1_1__ImmSLC1_2__ImmTFE1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3711 /* flat_atomic_xor_x2 */, AMDGPU::FLAT_ATOMIC_XOR_X2_RTN_ci, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3711 /* flat_atomic_xor_x2 */, AMDGPU::FLAT_ATOMIC_XOR_X2_RTN_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmSLC1_4__ImmTFE1_5, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_VReg_64, MCK_glc, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3730 /* flat_load_dword */, AMDGPU::FLAT_LOAD_DWORD_ci, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3730 /* flat_load_dword */, AMDGPU::FLAT_LOAD_DWORD_vi, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3746 /* flat_load_dwordx2 */, AMDGPU::FLAT_LOAD_DWORDX2_ci, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3746 /* flat_load_dwordx2 */, AMDGPU::FLAT_LOAD_DWORDX2_vi, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3764 /* flat_load_dwordx3 */, AMDGPU::FLAT_LOAD_DWORDX3_ci, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_96, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3764 /* flat_load_dwordx3 */, AMDGPU::FLAT_LOAD_DWORDX3_vi, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isVI, { MCK_VReg_96, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3782 /* flat_load_dwordx4 */, AMDGPU::FLAT_LOAD_DWORDX4_ci, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_128, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3782 /* flat_load_dwordx4 */, AMDGPU::FLAT_LOAD_DWORDX4_vi, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isVI, { MCK_VReg_128, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3800 /* flat_load_sbyte */, AMDGPU::FLAT_LOAD_SBYTE_ci, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3800 /* flat_load_sbyte */, AMDGPU::FLAT_LOAD_SBYTE_vi, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3816 /* flat_load_sshort */, AMDGPU::FLAT_LOAD_SSHORT_ci, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3816 /* flat_load_sshort */, AMDGPU::FLAT_LOAD_SSHORT_vi, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3833 /* flat_load_ubyte */, AMDGPU::FLAT_LOAD_UBYTE_ci, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3833 /* flat_load_ubyte */, AMDGPU::FLAT_LOAD_UBYTE_vi, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3849 /* flat_load_ushort */, AMDGPU::FLAT_LOAD_USHORT_ci, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3849 /* flat_load_ushort */, AMDGPU::FLAT_LOAD_USHORT_vi, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3866 /* flat_store_byte */, AMDGPU::FLAT_STORE_BYTE_ci, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3866 /* flat_store_byte */, AMDGPU::FLAT_STORE_BYTE_vi, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3882 /* flat_store_dword */, AMDGPU::FLAT_STORE_DWORD_ci, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3882 /* flat_store_dword */, AMDGPU::FLAT_STORE_DWORD_vi, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3899 /* flat_store_dwordx2 */, AMDGPU::FLAT_STORE_DWORDX2_ci, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3899 /* flat_store_dwordx2 */, AMDGPU::FLAT_STORE_DWORDX2_vi, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3918 /* flat_store_dwordx3 */, AMDGPU::FLAT_STORE_DWORDX3_ci, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_96, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3918 /* flat_store_dwordx3 */, AMDGPU::FLAT_STORE_DWORDX3_vi, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_96, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3937 /* flat_store_dwordx4 */, AMDGPU::FLAT_STORE_DWORDX4_ci, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VReg_128, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3937 /* flat_store_dwordx4 */, AMDGPU::FLAT_STORE_DWORDX4_vi, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3956 /* flat_store_short */, AMDGPU::FLAT_STORE_SHORT_ci, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3956 /* flat_store_short */, AMDGPU::FLAT_STORE_SHORT_vi, Convert__Reg1_0__Reg1_1__ImmGLC1_2__ImmSLC1_3__ImmTFE1_4, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmTFE }, },
  { 3973 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 3973 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 3973 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 3973 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 3973 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 3973 /* image_atomic_add */, AMDGPU::IMAGE_ATOMIC_ADD_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 3990 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 3990 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 3990 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 3990 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 3990 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 3990 /* image_atomic_and */, AMDGPU::IMAGE_ATOMIC_AND_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4007 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4007 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4007 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4007 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4007 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4007 /* image_atomic_cmpswap */, AMDGPU::IMAGE_ATOMIC_CMPSWAP_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4028 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4028 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4028 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4028 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4028 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4028 /* image_atomic_dec */, AMDGPU::IMAGE_ATOMIC_DEC_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4045 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4045 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4045 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4045 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4045 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4045 /* image_atomic_inc */, AMDGPU::IMAGE_ATOMIC_INC_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4062 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4062 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4062 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4062 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4062 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4062 /* image_atomic_or */, AMDGPU::IMAGE_ATOMIC_OR_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4078 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4078 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4078 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4078 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4078 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4078 /* image_atomic_smax */, AMDGPU::IMAGE_ATOMIC_SMAX_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4096 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4096 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4096 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4096 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4096 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4096 /* image_atomic_smin */, AMDGPU::IMAGE_ATOMIC_SMIN_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4114 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4114 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4114 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4114 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4114 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4114 /* image_atomic_sub */, AMDGPU::IMAGE_ATOMIC_SUB_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4131 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4131 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4131 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4131 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4131 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4131 /* image_atomic_swap */, AMDGPU::IMAGE_ATOMIC_SWAP_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4149 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4149 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4149 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4149 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4149 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4149 /* image_atomic_umax */, AMDGPU::IMAGE_ATOMIC_UMAX_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4167 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4167 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4167 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4167 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4167 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4167 /* image_atomic_umin */, AMDGPU::IMAGE_ATOMIC_UMIN_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4185 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V4_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4185 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V4_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4185 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V2_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4185 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V2_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4185 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V1_si, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4185 /* image_atomic_xor */, AMDGPU::IMAGE_ATOMIC_XOR_V1_vi, ConvertCustom_cvtMIMGAtomic, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4202 /* image_gather4 */, AMDGPU::IMAGE_GATHER4_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4216 /* image_gather4_b */, AMDGPU::IMAGE_GATHER4_B_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4232 /* image_gather4_b_cl */, AMDGPU::IMAGE_GATHER4_B_CL_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4251 /* image_gather4_b_cl_o */, AMDGPU::IMAGE_GATHER4_B_CL_O_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4272 /* image_gather4_b_o */, AMDGPU::IMAGE_GATHER4_B_O_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4290 /* image_gather4_c */, AMDGPU::IMAGE_GATHER4_C_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4306 /* image_gather4_c_b */, AMDGPU::IMAGE_GATHER4_C_B_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4324 /* image_gather4_c_b_cl */, AMDGPU::IMAGE_GATHER4_C_B_CL_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4345 /* image_gather4_c_b_cl_o */, AMDGPU::IMAGE_GATHER4_C_B_CL_O_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4368 /* image_gather4_c_b_o */, AMDGPU::IMAGE_GATHER4_C_B_O_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4388 /* image_gather4_c_cl */, AMDGPU::IMAGE_GATHER4_C_CL_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4407 /* image_gather4_c_cl_o */, AMDGPU::IMAGE_GATHER4_C_CL_O_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4428 /* image_gather4_c_l */, AMDGPU::IMAGE_GATHER4_C_L_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4446 /* image_gather4_c_l_o */, AMDGPU::IMAGE_GATHER4_C_L_O_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4466 /* image_gather4_c_lz */, AMDGPU::IMAGE_GATHER4_C_LZ_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4485 /* image_gather4_c_lz_o */, AMDGPU::IMAGE_GATHER4_C_LZ_O_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4506 /* image_gather4_c_o */, AMDGPU::IMAGE_GATHER4_C_O_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4524 /* image_gather4_cl */, AMDGPU::IMAGE_GATHER4_CL_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4541 /* image_gather4_cl_o */, AMDGPU::IMAGE_GATHER4_CL_O_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4560 /* image_gather4_l */, AMDGPU::IMAGE_GATHER4_L_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4576 /* image_gather4_l_o */, AMDGPU::IMAGE_GATHER4_L_O_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4594 /* image_gather4_lz */, AMDGPU::IMAGE_GATHER4_LZ_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4611 /* image_gather4_lz_o */, AMDGPU::IMAGE_GATHER4_LZ_O_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V4_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V4_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V4_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V4_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V4_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V3_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V3_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V3_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V3_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V3_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V2_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V2_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V2_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V2_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V2_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V1_V16, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V1_V8, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V1_V4, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V1_V2, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4630 /* image_gather4_o */, AMDGPU::IMAGE_GATHER4_O_V1_V1, Convert__Reg1_0__Reg1_1__Reg1_2__Reg1_3__ImmDMask1_4__ImmUNorm1_5__ImmGLC1_6__ImmSLC1_7__ImmR1281_8__ImmTFE1_9__ImmLWE1_10__ImmDA1_11, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4646 /* image_get_lod */, AMDGPU::IMAGE_GET_LOD_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4660 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4660 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4660 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4660 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4660 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4660 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4660 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4660 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4660 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4660 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4660 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4660 /* image_get_resinfo */, AMDGPU::IMAGE_GET_RESINFO_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4678 /* image_load */, AMDGPU::IMAGE_LOAD_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4678 /* image_load */, AMDGPU::IMAGE_LOAD_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4678 /* image_load */, AMDGPU::IMAGE_LOAD_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4678 /* image_load */, AMDGPU::IMAGE_LOAD_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4678 /* image_load */, AMDGPU::IMAGE_LOAD_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4678 /* image_load */, AMDGPU::IMAGE_LOAD_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4678 /* image_load */, AMDGPU::IMAGE_LOAD_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4678 /* image_load */, AMDGPU::IMAGE_LOAD_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4678 /* image_load */, AMDGPU::IMAGE_LOAD_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4678 /* image_load */, AMDGPU::IMAGE_LOAD_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4678 /* image_load */, AMDGPU::IMAGE_LOAD_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4678 /* image_load */, AMDGPU::IMAGE_LOAD_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4689 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4689 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4689 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4689 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4689 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4689 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4689 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4689 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4689 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4689 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4689 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4689 /* image_load_mip */, AMDGPU::IMAGE_LOAD_MIP_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4704 /* image_sample */, AMDGPU::IMAGE_SAMPLE_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4717 /* image_sample_b */, AMDGPU::IMAGE_SAMPLE_B_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4732 /* image_sample_b_cl */, AMDGPU::IMAGE_SAMPLE_B_CL_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4750 /* image_sample_b_cl_o */, AMDGPU::IMAGE_SAMPLE_B_CL_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4770 /* image_sample_b_o */, AMDGPU::IMAGE_SAMPLE_B_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4787 /* image_sample_c */, AMDGPU::IMAGE_SAMPLE_C_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4802 /* image_sample_c_b */, AMDGPU::IMAGE_SAMPLE_C_B_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4819 /* image_sample_c_b_cl */, AMDGPU::IMAGE_SAMPLE_C_B_CL_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4839 /* image_sample_c_b_cl_o */, AMDGPU::IMAGE_SAMPLE_C_B_CL_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4861 /* image_sample_c_b_o */, AMDGPU::IMAGE_SAMPLE_C_B_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4880 /* image_sample_c_cd */, AMDGPU::IMAGE_SAMPLE_C_CD_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4898 /* image_sample_c_cd_cl */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4919 /* image_sample_c_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CD_CL_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4942 /* image_sample_c_cd_o */, AMDGPU::IMAGE_SAMPLE_C_CD_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4962 /* image_sample_c_cl */, AMDGPU::IMAGE_SAMPLE_C_CL_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 4980 /* image_sample_c_cl_o */, AMDGPU::IMAGE_SAMPLE_C_CL_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5000 /* image_sample_c_d */, AMDGPU::IMAGE_SAMPLE_C_D_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5017 /* image_sample_c_d_cl */, AMDGPU::IMAGE_SAMPLE_C_D_CL_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5037 /* image_sample_c_d_cl_o */, AMDGPU::IMAGE_SAMPLE_C_D_CL_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5059 /* image_sample_c_d_o */, AMDGPU::IMAGE_SAMPLE_C_D_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5078 /* image_sample_c_l */, AMDGPU::IMAGE_SAMPLE_C_L_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5095 /* image_sample_c_l_o */, AMDGPU::IMAGE_SAMPLE_C_L_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5114 /* image_sample_c_lz */, AMDGPU::IMAGE_SAMPLE_C_LZ_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5132 /* image_sample_c_lz_o */, AMDGPU::IMAGE_SAMPLE_C_LZ_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5152 /* image_sample_c_o */, AMDGPU::IMAGE_SAMPLE_C_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5169 /* image_sample_cd */, AMDGPU::IMAGE_SAMPLE_CD_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5185 /* image_sample_cd_cl */, AMDGPU::IMAGE_SAMPLE_CD_CL_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5204 /* image_sample_cd_cl_o */, AMDGPU::IMAGE_SAMPLE_CD_CL_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5225 /* image_sample_cd_o */, AMDGPU::IMAGE_SAMPLE_CD_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5243 /* image_sample_cl */, AMDGPU::IMAGE_SAMPLE_CL_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5259 /* image_sample_cl_o */, AMDGPU::IMAGE_SAMPLE_CL_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5277 /* image_sample_d */, AMDGPU::IMAGE_SAMPLE_D_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5292 /* image_sample_d_cl */, AMDGPU::IMAGE_SAMPLE_D_CL_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5310 /* image_sample_d_cl_o */, AMDGPU::IMAGE_SAMPLE_D_CL_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5330 /* image_sample_d_o */, AMDGPU::IMAGE_SAMPLE_D_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5347 /* image_sample_l */, AMDGPU::IMAGE_SAMPLE_L_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5362 /* image_sample_l_o */, AMDGPU::IMAGE_SAMPLE_L_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5379 /* image_sample_lz */, AMDGPU::IMAGE_SAMPLE_LZ_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5395 /* image_sample_lz_o */, AMDGPU::IMAGE_SAMPLE_LZ_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V4_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V4_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V3_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V3_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V2_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V2_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V1_V16, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_512, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V1_V8, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_256, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5413 /* image_sample_o */, AMDGPU::IMAGE_SAMPLE_O_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_SReg_128, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5428 /* image_store */, AMDGPU::IMAGE_STORE_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5428 /* image_store */, AMDGPU::IMAGE_STORE_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5428 /* image_store */, AMDGPU::IMAGE_STORE_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5428 /* image_store */, AMDGPU::IMAGE_STORE_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5428 /* image_store */, AMDGPU::IMAGE_STORE_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5428 /* image_store */, AMDGPU::IMAGE_STORE_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5428 /* image_store */, AMDGPU::IMAGE_STORE_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5428 /* image_store */, AMDGPU::IMAGE_STORE_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5428 /* image_store */, AMDGPU::IMAGE_STORE_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5428 /* image_store */, AMDGPU::IMAGE_STORE_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5428 /* image_store */, AMDGPU::IMAGE_STORE_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5428 /* image_store */, AMDGPU::IMAGE_STORE_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5440 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V4_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5440 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V4_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5440 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V4_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_128, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5440 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V3_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5440 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V3_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5440 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V3_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_96, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5440 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V2_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5440 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V2_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5440 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V2_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VReg_64, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5440 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V1_V4, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_128, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5440 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V1_V2, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VReg_64, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5440 /* image_store_mip */, AMDGPU::IMAGE_STORE_MIP_V1_V1, ConvertCustom_cvtMIMG, Feature_isGCN, { MCK_VGPR_32, MCK_VGPR_32, MCK_SReg_256, MCK_ImmDMask, MCK_ImmUNorm, MCK_ImmGLC, MCK_ImmSLC, MCK_ImmR128, MCK_ImmTFE, MCK_ImmLWE, MCK_ImmDA }, },
  { 5456 /* s_abs_i32 */, AMDGPU::S_ABS_I32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 5456 /* s_abs_i32 */, AMDGPU::S_ABS_I32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 5466 /* s_absdiff_i32 */, AMDGPU::S_ABSDIFF_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5466 /* s_absdiff_i32 */, AMDGPU::S_ABSDIFF_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5480 /* s_add_i32 */, AMDGPU::S_ADD_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5480 /* s_add_i32 */, AMDGPU::S_ADD_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5490 /* s_add_u32 */, AMDGPU::S_ADD_U32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5490 /* s_add_u32 */, AMDGPU::S_ADD_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5500 /* s_addc_u32 */, AMDGPU::S_ADDC_U32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5500 /* s_addc_u32 */, AMDGPU::S_ADDC_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5511 /* s_addk_i32 */, AMDGPU::S_ADDK_I32_si, Convert__Reg1_0__Tie0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 5511 /* s_addk_i32 */, AMDGPU::S_ADDK_I32_vi, Convert__Reg1_0__Tie0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 5522 /* s_and_b32 */, AMDGPU::S_AND_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5522 /* s_and_b32 */, AMDGPU::S_AND_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5532 /* s_and_b64 */, AMDGPU::S_AND_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 5532 /* s_and_b64 */, AMDGPU::S_AND_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 5542 /* s_and_saveexec_b64 */, AMDGPU::S_AND_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 5542 /* s_and_saveexec_b64 */, AMDGPU::S_AND_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 5561 /* s_andn2_b32 */, AMDGPU::S_ANDN2_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5561 /* s_andn2_b32 */, AMDGPU::S_ANDN2_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5573 /* s_andn2_b64 */, AMDGPU::S_ANDN2_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 5573 /* s_andn2_b64 */, AMDGPU::S_ANDN2_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 5585 /* s_andn2_saveexec_b64 */, AMDGPU::S_ANDN2_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 5585 /* s_andn2_saveexec_b64 */, AMDGPU::S_ANDN2_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 5606 /* s_ashr_i32 */, AMDGPU::S_ASHR_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5606 /* s_ashr_i32 */, AMDGPU::S_ASHR_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5617 /* s_ashr_i64 */, AMDGPU::S_ASHR_I64_si, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 5617 /* s_ashr_i64 */, AMDGPU::S_ASHR_I64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 5628 /* s_barrier */, AMDGPU::S_BARRIER, Convert_NoOperands, Feature_isGCN, {  }, },
  { 5638 /* s_bcnt0_i32_b32 */, AMDGPU::S_BCNT0_I32_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 5638 /* s_bcnt0_i32_b32 */, AMDGPU::S_BCNT0_I32_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 5654 /* s_bcnt0_i32_b64 */, AMDGPU::S_BCNT0_I32_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 5654 /* s_bcnt0_i32_b64 */, AMDGPU::S_BCNT0_I32_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 5670 /* s_bcnt1_i32_b32 */, AMDGPU::S_BCNT1_I32_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 5670 /* s_bcnt1_i32_b32 */, AMDGPU::S_BCNT1_I32_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 5686 /* s_bcnt1_i32_b64 */, AMDGPU::S_BCNT1_I32_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 5686 /* s_bcnt1_i32_b64 */, AMDGPU::S_BCNT1_I32_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 5702 /* s_bfe_i32 */, AMDGPU::S_BFE_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5702 /* s_bfe_i32 */, AMDGPU::S_BFE_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5712 /* s_bfe_i64 */, AMDGPU::S_BFE_I64_si, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 5712 /* s_bfe_i64 */, AMDGPU::S_BFE_I64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 5722 /* s_bfe_u32 */, AMDGPU::S_BFE_U32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5722 /* s_bfe_u32 */, AMDGPU::S_BFE_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5732 /* s_bfe_u64 */, AMDGPU::S_BFE_U64_si, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 5732 /* s_bfe_u64 */, AMDGPU::S_BFE_U64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 5742 /* s_bfm_b32 */, AMDGPU::S_BFM_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5742 /* s_bfm_b32 */, AMDGPU::S_BFM_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5752 /* s_bfm_b64 */, AMDGPU::S_BFM_B64_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5752 /* s_bfm_b64 */, AMDGPU::S_BFM_B64_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5762 /* s_bitcmp0_b32 */, AMDGPU::S_BITCMP0_B32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5776 /* s_bitcmp0_b64 */, AMDGPU::S_BITCMP0_B64, Convert__SSrcB641_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB64, MCK_SSrcB32 }, },
  { 5790 /* s_bitcmp1_b32 */, AMDGPU::S_BITCMP1_B32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 5804 /* s_bitcmp1_b64 */, AMDGPU::S_BITCMP1_B64, Convert__SSrcB641_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB64, MCK_SSrcB32 }, },
  { 5818 /* s_bitset0_b32 */, AMDGPU::S_BITSET0_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 5818 /* s_bitset0_b32 */, AMDGPU::S_BITSET0_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 5832 /* s_bitset0_b64 */, AMDGPU::S_BITSET0_B64_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB32 }, },
  { 5832 /* s_bitset0_b64 */, AMDGPU::S_BITSET0_B64_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB32 }, },
  { 5846 /* s_bitset1_b32 */, AMDGPU::S_BITSET1_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 5846 /* s_bitset1_b32 */, AMDGPU::S_BITSET1_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 5860 /* s_bitset1_b64 */, AMDGPU::S_BITSET1_B64_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB32 }, },
  { 5860 /* s_bitset1_b64 */, AMDGPU::S_BITSET1_B64_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB32 }, },
  { 5874 /* s_branch */, AMDGPU::S_BRANCH, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 5883 /* s_brev_b32 */, AMDGPU::S_BREV_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 5883 /* s_brev_b32 */, AMDGPU::S_BREV_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 5894 /* s_brev_b64 */, AMDGPU::S_BREV_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 5894 /* s_brev_b64 */, AMDGPU::S_BREV_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 5905 /* s_buffer_load_dword */, AMDGPU::S_BUFFER_LOAD_DWORD_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 5905 /* s_buffer_load_dword */, AMDGPU::S_BUFFER_LOAD_DWORD_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 5905 /* s_buffer_load_dword */, AMDGPU::S_BUFFER_LOAD_DWORD_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 5905 /* s_buffer_load_dword */, AMDGPU::S_BUFFER_LOAD_DWORD_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 5905 /* s_buffer_load_dword */, AMDGPU::S_BUFFER_LOAD_DWORD_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 5925 /* s_buffer_load_dwordx16 */, AMDGPU::S_BUFFER_LOAD_DWORDX16_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_512, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 5925 /* s_buffer_load_dwordx16 */, AMDGPU::S_BUFFER_LOAD_DWORDX16_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_512, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 5925 /* s_buffer_load_dwordx16 */, AMDGPU::S_BUFFER_LOAD_DWORDX16_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_512, MCK_SReg_128, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 5925 /* s_buffer_load_dwordx16 */, AMDGPU::S_BUFFER_LOAD_DWORDX16_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_512, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 5925 /* s_buffer_load_dwordx16 */, AMDGPU::S_BUFFER_LOAD_DWORDX16_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_512, MCK_SReg_128, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 5948 /* s_buffer_load_dwordx2 */, AMDGPU::S_BUFFER_LOAD_DWORDX2_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 5948 /* s_buffer_load_dwordx2 */, AMDGPU::S_BUFFER_LOAD_DWORDX2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 5948 /* s_buffer_load_dwordx2 */, AMDGPU::S_BUFFER_LOAD_DWORDX2_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 5948 /* s_buffer_load_dwordx2 */, AMDGPU::S_BUFFER_LOAD_DWORDX2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 5948 /* s_buffer_load_dwordx2 */, AMDGPU::S_BUFFER_LOAD_DWORDX2_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 5970 /* s_buffer_load_dwordx4 */, AMDGPU::S_BUFFER_LOAD_DWORDX4_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_128, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 5970 /* s_buffer_load_dwordx4 */, AMDGPU::S_BUFFER_LOAD_DWORDX4_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 5970 /* s_buffer_load_dwordx4 */, AMDGPU::S_BUFFER_LOAD_DWORDX4_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_128, MCK_SReg_128, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 5970 /* s_buffer_load_dwordx4 */, AMDGPU::S_BUFFER_LOAD_DWORDX4_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 5970 /* s_buffer_load_dwordx4 */, AMDGPU::S_BUFFER_LOAD_DWORDX4_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_128, MCK_SReg_128, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 5992 /* s_buffer_load_dwordx8 */, AMDGPU::S_BUFFER_LOAD_DWORDX8_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_256, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 5992 /* s_buffer_load_dwordx8 */, AMDGPU::S_BUFFER_LOAD_DWORDX8_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_256, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 5992 /* s_buffer_load_dwordx8 */, AMDGPU::S_BUFFER_LOAD_DWORDX8_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_256, MCK_SReg_128, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 5992 /* s_buffer_load_dwordx8 */, AMDGPU::S_BUFFER_LOAD_DWORDX8_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_256, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 5992 /* s_buffer_load_dwordx8 */, AMDGPU::S_BUFFER_LOAD_DWORDX8_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_256, MCK_SReg_128, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 6014 /* s_buffer_store_dword */, AMDGPU::S_BUFFER_STORE_DWORD_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 6014 /* s_buffer_store_dword */, AMDGPU::S_BUFFER_STORE_DWORD_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 6035 /* s_buffer_store_dwordx2 */, AMDGPU::S_BUFFER_STORE_DWORDX2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 6035 /* s_buffer_store_dwordx2 */, AMDGPU::S_BUFFER_STORE_DWORDX2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 6058 /* s_buffer_store_dwordx4 */, AMDGPU::S_BUFFER_STORE_DWORDX4_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_128, MCK_SReg_32, MCK_ImmGLC }, },
  { 6058 /* s_buffer_store_dwordx4 */, AMDGPU::S_BUFFER_STORE_DWORDX4_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_128, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 6081 /* s_cbranch_execnz */, AMDGPU::S_CBRANCH_EXECNZ, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 6098 /* s_cbranch_execz */, AMDGPU::S_CBRANCH_EXECZ, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 6114 /* s_cbranch_g_fork */, AMDGPU::S_CBRANCH_G_FORK_si, Convert__Reg1_0__Reg1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SReg_64 }, },
  { 6114 /* s_cbranch_g_fork */, AMDGPU::S_CBRANCH_G_FORK_vi, Convert__Reg1_0__Reg1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SReg_64 }, },
  { 6131 /* s_cbranch_i_fork */, AMDGPU::S_CBRANCH_I_FORK_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_Imm }, },
  { 6131 /* s_cbranch_i_fork */, AMDGPU::S_CBRANCH_I_FORK_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_Imm }, },
  { 6148 /* s_cbranch_join */, AMDGPU::S_CBRANCH_JOIN_si, Convert__Reg1_0, Feature_isGCN|Feature_isSICI, { MCK_SReg_64 }, },
  { 6148 /* s_cbranch_join */, AMDGPU::S_CBRANCH_JOIN_vi, Convert__Reg1_0, Feature_isGCN|Feature_isVI, { MCK_SReg_64 }, },
  { 6163 /* s_cbranch_scc0 */, AMDGPU::S_CBRANCH_SCC0, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 6178 /* s_cbranch_scc1 */, AMDGPU::S_CBRANCH_SCC1, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 6193 /* s_cbranch_vccnz */, AMDGPU::S_CBRANCH_VCCNZ, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 6209 /* s_cbranch_vccz */, AMDGPU::S_CBRANCH_VCCZ, Convert__SoppBrTarget1_0, Feature_isGCN, { MCK_SoppBrTarget }, },
  { 6224 /* s_cmov_b32 */, AMDGPU::S_CMOV_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 6224 /* s_cmov_b32 */, AMDGPU::S_CMOV_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 6235 /* s_cmov_b64 */, AMDGPU::S_CMOV_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 6235 /* s_cmov_b64 */, AMDGPU::S_CMOV_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 6246 /* s_cmovk_i32 */, AMDGPU::S_CMOVK_I32_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 6246 /* s_cmovk_i32 */, AMDGPU::S_CMOVK_I32_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 6258 /* s_cmp_eq_i32 */, AMDGPU::S_CMP_EQ_I32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6271 /* s_cmp_eq_u32 */, AMDGPU::S_CMP_EQ_U32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6284 /* s_cmp_eq_u64 */, AMDGPU::S_CMP_EQ_U64, Convert__SSrcB641_0__SSrcB641_1, Feature_isVI, { MCK_SSrcB64, MCK_SSrcB64 }, },
  { 6297 /* s_cmp_ge_i32 */, AMDGPU::S_CMP_GE_I32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6310 /* s_cmp_ge_u32 */, AMDGPU::S_CMP_GE_U32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6323 /* s_cmp_gt_i32 */, AMDGPU::S_CMP_GT_I32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6336 /* s_cmp_gt_u32 */, AMDGPU::S_CMP_GT_U32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6349 /* s_cmp_le_i32 */, AMDGPU::S_CMP_LE_I32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6362 /* s_cmp_le_u32 */, AMDGPU::S_CMP_LE_U32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6375 /* s_cmp_lg_i32 */, AMDGPU::S_CMP_LG_I32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6388 /* s_cmp_lg_u32 */, AMDGPU::S_CMP_LG_U32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6401 /* s_cmp_lg_u64 */, AMDGPU::S_CMP_LG_U64, Convert__SSrcB641_0__SSrcB641_1, Feature_isVI, { MCK_SSrcB64, MCK_SSrcB64 }, },
  { 6414 /* s_cmp_lt_i32 */, AMDGPU::S_CMP_LT_I32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6427 /* s_cmp_lt_u32 */, AMDGPU::S_CMP_LT_U32, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6440 /* s_cmpk_eq_i32 */, AMDGPU::S_CMPK_EQ_I32_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 6440 /* s_cmpk_eq_i32 */, AMDGPU::S_CMPK_EQ_I32_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 6454 /* s_cmpk_eq_u32 */, AMDGPU::S_CMPK_EQ_U32_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 6454 /* s_cmpk_eq_u32 */, AMDGPU::S_CMPK_EQ_U32_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 6468 /* s_cmpk_ge_i32 */, AMDGPU::S_CMPK_GE_I32_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 6468 /* s_cmpk_ge_i32 */, AMDGPU::S_CMPK_GE_I32_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 6482 /* s_cmpk_ge_u32 */, AMDGPU::S_CMPK_GE_U32_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 6482 /* s_cmpk_ge_u32 */, AMDGPU::S_CMPK_GE_U32_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 6496 /* s_cmpk_gt_i32 */, AMDGPU::S_CMPK_GT_I32_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 6496 /* s_cmpk_gt_i32 */, AMDGPU::S_CMPK_GT_I32_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 6510 /* s_cmpk_gt_u32 */, AMDGPU::S_CMPK_GT_U32_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 6510 /* s_cmpk_gt_u32 */, AMDGPU::S_CMPK_GT_U32_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 6524 /* s_cmpk_le_i32 */, AMDGPU::S_CMPK_LE_I32_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 6524 /* s_cmpk_le_i32 */, AMDGPU::S_CMPK_LE_I32_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 6538 /* s_cmpk_le_u32 */, AMDGPU::S_CMPK_LE_U32_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 6538 /* s_cmpk_le_u32 */, AMDGPU::S_CMPK_LE_U32_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 6552 /* s_cmpk_lg_i32 */, AMDGPU::S_CMPK_LG_I32_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 6552 /* s_cmpk_lg_i32 */, AMDGPU::S_CMPK_LG_I32_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 6566 /* s_cmpk_lg_u32 */, AMDGPU::S_CMPK_LG_U32_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 6566 /* s_cmpk_lg_u32 */, AMDGPU::S_CMPK_LG_U32_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 6580 /* s_cmpk_lt_i32 */, AMDGPU::S_CMPK_LT_I32_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 6580 /* s_cmpk_lt_i32 */, AMDGPU::S_CMPK_LT_I32_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 6594 /* s_cmpk_lt_u32 */, AMDGPU::S_CMPK_LT_U32_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 6594 /* s_cmpk_lt_u32 */, AMDGPU::S_CMPK_LT_U32_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 6608 /* s_cselect_b32 */, AMDGPU::S_CSELECT_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6608 /* s_cselect_b32 */, AMDGPU::S_CSELECT_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6622 /* s_cselect_b64 */, AMDGPU::S_CSELECT_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 6622 /* s_cselect_b64 */, AMDGPU::S_CSELECT_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 6636 /* s_dcache_inv */, AMDGPU::S_DCACHE_INV_si, Convert_NoOperands, Feature_isGCN|Feature_isSICI, {  }, },
  { 6636 /* s_dcache_inv */, AMDGPU::S_DCACHE_INV_vi, Convert_NoOperands, Feature_isGCN|Feature_isVI, {  }, },
  { 6649 /* s_dcache_inv_vol */, AMDGPU::S_DCACHE_INV_VOL_ci, Convert_NoOperands, Feature_isCIVI|Feature_isCIOnly, {  }, },
  { 6649 /* s_dcache_inv_vol */, AMDGPU::S_DCACHE_INV_VOL_vi, Convert_NoOperands, Feature_isCIVI|Feature_isVI, {  }, },
  { 6666 /* s_dcache_wb */, AMDGPU::S_DCACHE_WB_vi, Convert_NoOperands, Feature_isVI|Feature_isVI, {  }, },
  { 6678 /* s_dcache_wb_vol */, AMDGPU::S_DCACHE_WB_VOL_vi, Convert_NoOperands, Feature_isVI|Feature_isVI, {  }, },
  { 6694 /* s_decperflevel */, AMDGPU::S_DECPERFLEVEL, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 6709 /* s_endpgm */, AMDGPU::S_ENDPGM, Convert_NoOperands, Feature_isGCN, {  }, },
  { 6718 /* s_ff0_i32_b32 */, AMDGPU::S_FF0_I32_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 6718 /* s_ff0_i32_b32 */, AMDGPU::S_FF0_I32_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 6732 /* s_ff0_i32_b64 */, AMDGPU::S_FF0_I32_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 6732 /* s_ff0_i32_b64 */, AMDGPU::S_FF0_I32_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 6746 /* s_ff1_i32_b32 */, AMDGPU::S_FF1_I32_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 6746 /* s_ff1_i32_b32 */, AMDGPU::S_FF1_I32_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 6760 /* s_ff1_i32_b64 */, AMDGPU::S_FF1_I32_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 6760 /* s_ff1_i32_b64 */, AMDGPU::S_FF1_I32_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 6774 /* s_flbit_i32 */, AMDGPU::S_FLBIT_I32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 6774 /* s_flbit_i32 */, AMDGPU::S_FLBIT_I32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 6786 /* s_flbit_i32_b32 */, AMDGPU::S_FLBIT_I32_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 6786 /* s_flbit_i32_b32 */, AMDGPU::S_FLBIT_I32_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 6802 /* s_flbit_i32_b64 */, AMDGPU::S_FLBIT_I32_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 6802 /* s_flbit_i32_b64 */, AMDGPU::S_FLBIT_I32_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 6818 /* s_flbit_i32_i64 */, AMDGPU::S_FLBIT_I32_I64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 6818 /* s_flbit_i32_i64 */, AMDGPU::S_FLBIT_I32_I64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB64 }, },
  { 6834 /* s_getpc_b64 */, AMDGPU::S_GETPC_B64_si, Convert__Reg1_0, Feature_isGCN|Feature_isSICI, { MCK_SReg_64 }, },
  { 6834 /* s_getpc_b64 */, AMDGPU::S_GETPC_B64_vi, Convert__Reg1_0, Feature_isGCN|Feature_isVI, { MCK_SReg_64 }, },
  { 6846 /* s_getreg_b32 */, AMDGPU::S_GETREG_B32_si, Convert__Reg1_0__ImmHwreg1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_ImmHwreg }, },
  { 6846 /* s_getreg_b32 */, AMDGPU::S_GETREG_B32_vi, Convert__Reg1_0__ImmHwreg1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_ImmHwreg }, },
  { 6859 /* s_icache_inv */, AMDGPU::S_ICACHE_INV, Convert_NoOperands, Feature_isGCN, {  }, },
  { 6872 /* s_incperflevel */, AMDGPU::S_INCPERFLEVEL, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 6887 /* s_load_dword */, AMDGPU::S_LOAD_DWORD_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 6887 /* s_load_dword */, AMDGPU::S_LOAD_DWORD_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 6887 /* s_load_dword */, AMDGPU::S_LOAD_DWORD_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 6887 /* s_load_dword */, AMDGPU::S_LOAD_DWORD_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 6887 /* s_load_dword */, AMDGPU::S_LOAD_DWORD_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 6900 /* s_load_dwordx16 */, AMDGPU::S_LOAD_DWORDX16_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_512, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 6900 /* s_load_dwordx16 */, AMDGPU::S_LOAD_DWORDX16_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_512, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 6900 /* s_load_dwordx16 */, AMDGPU::S_LOAD_DWORDX16_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_512, MCK_SReg_64, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 6900 /* s_load_dwordx16 */, AMDGPU::S_LOAD_DWORDX16_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_512, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 6900 /* s_load_dwordx16 */, AMDGPU::S_LOAD_DWORDX16_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_512, MCK_SReg_64, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 6916 /* s_load_dwordx2 */, AMDGPU::S_LOAD_DWORDX2_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 6916 /* s_load_dwordx2 */, AMDGPU::S_LOAD_DWORDX2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 6916 /* s_load_dwordx2 */, AMDGPU::S_LOAD_DWORDX2_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 6916 /* s_load_dwordx2 */, AMDGPU::S_LOAD_DWORDX2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 6916 /* s_load_dwordx2 */, AMDGPU::S_LOAD_DWORDX2_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 6931 /* s_load_dwordx4 */, AMDGPU::S_LOAD_DWORDX4_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_128, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 6931 /* s_load_dwordx4 */, AMDGPU::S_LOAD_DWORDX4_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 6931 /* s_load_dwordx4 */, AMDGPU::S_LOAD_DWORDX4_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_128, MCK_SReg_64, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 6931 /* s_load_dwordx4 */, AMDGPU::S_LOAD_DWORDX4_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 6931 /* s_load_dwordx4 */, AMDGPU::S_LOAD_DWORDX4_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_128, MCK_SReg_64, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 6946 /* s_load_dwordx8 */, AMDGPU::S_LOAD_DWORDX8_SGPR_si, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_256, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 6946 /* s_load_dwordx8 */, AMDGPU::S_LOAD_DWORDX8_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_256, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 6946 /* s_load_dwordx8 */, AMDGPU::S_LOAD_DWORDX8_IMM_si, Convert__Reg1_0__Reg1_1__ImmSMRDOffset81_2__ImmGLC1_3, Feature_isGCN|Feature_isSICI, { MCK_SReg_256, MCK_SReg_64, MCK_ImmSMRDOffset8, MCK_ImmGLC }, },
  { 6946 /* s_load_dwordx8 */, AMDGPU::S_LOAD_DWORDX8_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_256, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 6946 /* s_load_dwordx8 */, AMDGPU::S_LOAD_DWORDX8_IMM_ci, Convert__Reg1_0__Reg1_1__ImmSMRDLiteralOffset1_2__ImmGLC1_3, Feature_isGCN|Feature_isCIOnly, { MCK_SReg_256, MCK_SReg_64, MCK_ImmSMRDLiteralOffset, MCK_ImmGLC }, },
  { 6961 /* s_lshl_b32 */, AMDGPU::S_LSHL_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6961 /* s_lshl_b32 */, AMDGPU::S_LSHL_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6972 /* s_lshl_b64 */, AMDGPU::S_LSHL_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 6972 /* s_lshl_b64 */, AMDGPU::S_LSHL_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 6983 /* s_lshr_b32 */, AMDGPU::S_LSHR_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6983 /* s_lshr_b32 */, AMDGPU::S_LSHR_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 6994 /* s_lshr_b64 */, AMDGPU::S_LSHR_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 6994 /* s_lshr_b64 */, AMDGPU::S_LSHR_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB32 }, },
  { 7005 /* s_max_i32 */, AMDGPU::S_MAX_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7005 /* s_max_i32 */, AMDGPU::S_MAX_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7015 /* s_max_u32 */, AMDGPU::S_MAX_U32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7015 /* s_max_u32 */, AMDGPU::S_MAX_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7025 /* s_memrealtime */, AMDGPU::S_MEMREALTIME_vi, Convert__Reg1_0, Feature_isVI|Feature_isVI, { MCK_SReg_64_XEXEC }, },
  { 7039 /* s_memtime */, AMDGPU::S_MEMTIME_si, Convert__Reg1_0, Feature_isGCN|Feature_isSICI, { MCK_SReg_64_XEXEC }, },
  { 7039 /* s_memtime */, AMDGPU::S_MEMTIME_vi, Convert__Reg1_0, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC }, },
  { 7049 /* s_min_i32 */, AMDGPU::S_MIN_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7049 /* s_min_i32 */, AMDGPU::S_MIN_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7059 /* s_min_u32 */, AMDGPU::S_MIN_U32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7059 /* s_min_u32 */, AMDGPU::S_MIN_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7069 /* s_mov_b32 */, AMDGPU::S_MOV_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7069 /* s_mov_b32 */, AMDGPU::S_MOV_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7079 /* s_mov_b64 */, AMDGPU::S_MOV_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7079 /* s_mov_b64 */, AMDGPU::S_MOV_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7089 /* s_mov_fed_b32 */, AMDGPU::S_MOV_FED_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7089 /* s_mov_fed_b32 */, AMDGPU::S_MOV_FED_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7103 /* s_mov_regrd_b32 */, AMDGPU::S_MOV_REGRD_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7103 /* s_mov_regrd_b32 */, AMDGPU::S_MOV_REGRD_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7119 /* s_movk_i32 */, AMDGPU::S_MOVK_I32_si, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 7119 /* s_movk_i32 */, AMDGPU::S_MOVK_I32_vi, Convert__Reg1_0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 7130 /* s_movreld_b32 */, AMDGPU::S_MOVRELD_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7130 /* s_movreld_b32 */, AMDGPU::S_MOVRELD_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7144 /* s_movreld_b64 */, AMDGPU::S_MOVRELD_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7144 /* s_movreld_b64 */, AMDGPU::S_MOVRELD_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7158 /* s_movrels_b32 */, AMDGPU::S_MOVRELS_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7158 /* s_movrels_b32 */, AMDGPU::S_MOVRELS_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7172 /* s_movrels_b64 */, AMDGPU::S_MOVRELS_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7172 /* s_movrels_b64 */, AMDGPU::S_MOVRELS_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7186 /* s_mul_i32 */, AMDGPU::S_MUL_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7186 /* s_mul_i32 */, AMDGPU::S_MUL_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7196 /* s_mulk_i32 */, AMDGPU::S_MULK_I32_si, Convert__Reg1_0__Tie0__Imm1_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_Imm }, },
  { 7196 /* s_mulk_i32 */, AMDGPU::S_MULK_I32_vi, Convert__Reg1_0__Tie0__Imm1_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_Imm }, },
  { 7207 /* s_nand_b32 */, AMDGPU::S_NAND_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7207 /* s_nand_b32 */, AMDGPU::S_NAND_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7218 /* s_nand_b64 */, AMDGPU::S_NAND_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7218 /* s_nand_b64 */, AMDGPU::S_NAND_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7229 /* s_nand_saveexec_b64 */, AMDGPU::S_NAND_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7229 /* s_nand_saveexec_b64 */, AMDGPU::S_NAND_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7249 /* s_nop */, AMDGPU::S_NOP, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 7255 /* s_nor_b32 */, AMDGPU::S_NOR_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7255 /* s_nor_b32 */, AMDGPU::S_NOR_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7265 /* s_nor_b64 */, AMDGPU::S_NOR_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7265 /* s_nor_b64 */, AMDGPU::S_NOR_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7275 /* s_nor_saveexec_b64 */, AMDGPU::S_NOR_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7275 /* s_nor_saveexec_b64 */, AMDGPU::S_NOR_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7294 /* s_not_b32 */, AMDGPU::S_NOT_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7294 /* s_not_b32 */, AMDGPU::S_NOT_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7304 /* s_not_b64 */, AMDGPU::S_NOT_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7304 /* s_not_b64 */, AMDGPU::S_NOT_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7314 /* s_or_b32 */, AMDGPU::S_OR_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7314 /* s_or_b32 */, AMDGPU::S_OR_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7323 /* s_or_b64 */, AMDGPU::S_OR_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7323 /* s_or_b64 */, AMDGPU::S_OR_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7332 /* s_or_saveexec_b64 */, AMDGPU::S_OR_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7332 /* s_or_saveexec_b64 */, AMDGPU::S_OR_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7350 /* s_orn2_b32 */, AMDGPU::S_ORN2_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7350 /* s_orn2_b32 */, AMDGPU::S_ORN2_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7361 /* s_orn2_b64 */, AMDGPU::S_ORN2_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7361 /* s_orn2_b64 */, AMDGPU::S_ORN2_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7372 /* s_orn2_saveexec_b64 */, AMDGPU::S_ORN2_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7372 /* s_orn2_saveexec_b64 */, AMDGPU::S_ORN2_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7392 /* s_quadmask_b32 */, AMDGPU::S_QUADMASK_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7392 /* s_quadmask_b32 */, AMDGPU::S_QUADMASK_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7407 /* s_quadmask_b64 */, AMDGPU::S_QUADMASK_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7407 /* s_quadmask_b64 */, AMDGPU::S_QUADMASK_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7422 /* s_rfe_b64 */, AMDGPU::S_RFE_B64_si, Convert__Reg1_0, Feature_isGCN|Feature_isSICI, { MCK_SReg_64 }, },
  { 7422 /* s_rfe_b64 */, AMDGPU::S_RFE_B64_vi, Convert__Reg1_0, Feature_isGCN|Feature_isVI, { MCK_SReg_64 }, },
  { 7432 /* s_sendmsg */, AMDGPU::S_SENDMSG, Convert__SendMsg1_0, Feature_isGCN, { MCK_SendMsg }, },
  { 7442 /* s_sendmsghalt */, AMDGPU::S_SENDMSGHALT, Convert__SendMsg1_0, Feature_isGCN, { MCK_SendMsg }, },
  { 7456 /* s_set_gpr_idx_idx */, AMDGPU::S_SET_GPR_IDX_IDX_vi, Convert__SSrcB321_0, Feature_HasVGPRIndexMode|Feature_isVI, { MCK_SSrcB32 }, },
  { 7474 /* s_set_gpr_idx_mode */, AMDGPU::S_SET_GPR_IDX_MODE, Convert__GPRIdxMode1_0, Feature_HasVGPRIndexMode, { MCK_GPRIdxMode }, },
  { 7493 /* s_set_gpr_idx_off */, AMDGPU::S_SET_GPR_IDX_OFF, Convert_NoOperands, Feature_HasVGPRIndexMode, {  }, },
  { 7511 /* s_set_gpr_idx_on */, AMDGPU::S_SET_GPR_IDX_ON, Convert__SSrcB321_0__GPRIdxMode1_1, Feature_HasVGPRIndexMode, { MCK_SSrcB32, MCK_GPRIdxMode }, },
  { 7528 /* s_sethalt */, AMDGPU::S_SETHALT, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 7538 /* s_setpc_b64 */, AMDGPU::S_SETPC_B64_si, Convert__Reg1_0, Feature_isGCN|Feature_isSICI, { MCK_SReg_64 }, },
  { 7538 /* s_setpc_b64 */, AMDGPU::S_SETPC_B64_vi, Convert__Reg1_0, Feature_isGCN|Feature_isVI, { MCK_SReg_64 }, },
  { 7550 /* s_setprio */, AMDGPU::S_SETPRIO, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 7560 /* s_setreg_b32 */, AMDGPU::S_SETREG_B32_si, Convert__Reg1_1__ImmHwreg1_0, Feature_isGCN|Feature_isSICI, { MCK_ImmHwreg, MCK_SReg_32 }, },
  { 7560 /* s_setreg_b32 */, AMDGPU::S_SETREG_B32_vi, Convert__Reg1_1__ImmHwreg1_0, Feature_isGCN|Feature_isVI, { MCK_ImmHwreg, MCK_SReg_32 }, },
  { 7573 /* s_setreg_imm32_b32 */, AMDGPU::S_SETREG_IMM32_B32_si, Convert__Imm1_1__ImmHwreg1_0, Feature_isGCN|Feature_isSICI, { MCK_ImmHwreg, MCK_Imm }, },
  { 7573 /* s_setreg_imm32_b32 */, AMDGPU::S_SETREG_IMM32_B32_vi, Convert__Imm1_1__ImmHwreg1_0, Feature_isGCN|Feature_isVI, { MCK_ImmHwreg, MCK_Imm }, },
  { 7592 /* s_setvskip */, AMDGPU::S_SETVSKIP, Convert__SSrcB321_0__SSrcB321_1, Feature_isGCN, { MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7603 /* s_sext_i32_i16 */, AMDGPU::S_SEXT_I32_I16_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7603 /* s_sext_i32_i16 */, AMDGPU::S_SEXT_I32_I16_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7618 /* s_sext_i32_i8 */, AMDGPU::S_SEXT_I32_I8_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7618 /* s_sext_i32_i8 */, AMDGPU::S_SEXT_I32_I8_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7632 /* s_sleep */, AMDGPU::S_SLEEP, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 7640 /* s_store_dword */, AMDGPU::S_STORE_DWORD_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 7640 /* s_store_dword */, AMDGPU::S_STORE_DWORD_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_32_XM0_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 7654 /* s_store_dwordx2 */, AMDGPU::S_STORE_DWORDX2_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 7654 /* s_store_dwordx2 */, AMDGPU::S_STORE_DWORDX2_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_64_XEXEC, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 7670 /* s_store_dwordx4 */, AMDGPU::S_STORE_DWORDX4_SGPR_vi, Convert__Reg1_0__Reg1_1__Reg1_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_SReg_32, MCK_ImmGLC }, },
  { 7670 /* s_store_dwordx4 */, AMDGPU::S_STORE_DWORDX4_IMM_vi, Convert__Reg1_0__Reg1_1__ImmSMRDOffset201_2__ImmGLC1_3, Feature_isGCN|Feature_isVI, { MCK_SReg_128, MCK_SReg_64, MCK_ImmSMRDOffset20, MCK_ImmGLC }, },
  { 7686 /* s_sub_i32 */, AMDGPU::S_SUB_I32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7686 /* s_sub_i32 */, AMDGPU::S_SUB_I32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7696 /* s_sub_u32 */, AMDGPU::S_SUB_U32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7696 /* s_sub_u32 */, AMDGPU::S_SUB_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7706 /* s_subb_u32 */, AMDGPU::S_SUBB_U32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7706 /* s_subb_u32 */, AMDGPU::S_SUBB_U32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7717 /* s_swappc_b64 */, AMDGPU::S_SWAPPC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7717 /* s_swappc_b64 */, AMDGPU::S_SWAPPC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7730 /* s_trap */, AMDGPU::S_TRAP, Convert__Imm1_0, Feature_isGCN, { MCK_Imm }, },
  { 7737 /* s_ttracedata */, AMDGPU::S_TTRACEDATA, Convert_NoOperands, Feature_isGCN, {  }, },
  { 7750 /* s_waitcnt */, AMDGPU::S_WAITCNT, Convert__SWaitCnt1_0, Feature_isGCN, { MCK_SWaitCnt }, },
  { 7760 /* s_wqm_b32 */, AMDGPU::S_WQM_B32_si, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7760 /* s_wqm_b32 */, AMDGPU::S_WQM_B32_vi, Convert__Reg1_0__SSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32 }, },
  { 7770 /* s_wqm_b64 */, AMDGPU::S_WQM_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7770 /* s_wqm_b64 */, AMDGPU::S_WQM_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7780 /* s_xnor_b32 */, AMDGPU::S_XNOR_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7780 /* s_xnor_b32 */, AMDGPU::S_XNOR_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7791 /* s_xnor_b64 */, AMDGPU::S_XNOR_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7791 /* s_xnor_b64 */, AMDGPU::S_XNOR_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7802 /* s_xnor_saveexec_b64 */, AMDGPU::S_XNOR_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7802 /* s_xnor_saveexec_b64 */, AMDGPU::S_XNOR_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7822 /* s_xor_b32 */, AMDGPU::S_XOR_B32_si, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7822 /* s_xor_b32 */, AMDGPU::S_XOR_B32_vi, Convert__Reg1_0__SSrcB321_1__SSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_SSrcB32, MCK_SSrcB32 }, },
  { 7832 /* s_xor_b64 */, AMDGPU::S_XOR_B64_si, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7832 /* s_xor_b64 */, AMDGPU::S_XOR_B64_vi, Convert__Reg1_0__SSrcB641_1__SSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64, MCK_SSrcB64 }, },
  { 7842 /* s_xor_saveexec_b64 */, AMDGPU::S_XOR_SAVEEXEC_B64_si, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7842 /* s_xor_saveexec_b64 */, AMDGPU::S_XOR_SAVEEXEC_B64_vi, Convert__Reg1_0__SSrcB641_1, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_SSrcB64 }, },
  { 7861 /* tbuffer_load_format_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZW_si, Convert__Reg1_0__Imm1_1__Imm1_2__Imm1_3__Imm1_4__Imm1_5__Imm1_6__Imm1_7__Reg1_8__Reg1_9__Imm1_10__Imm1_11__SCSrcB321_12, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_VGPR_32, MCK_SReg_128, MCK_Imm, MCK_Imm, MCK_SCSrcB32 }, },
  { 7861 /* tbuffer_load_format_xyzw */, AMDGPU::TBUFFER_LOAD_FORMAT_XYZW_vi, Convert__Reg1_0__Imm1_1__Imm1_2__Imm1_3__Imm1_4__Imm1_5__Imm1_6__Imm1_7__Reg1_8__Reg1_9__Imm1_10__Imm1_11__SCSrcB321_12, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_VGPR_32, MCK_SReg_128, MCK_Imm, MCK_Imm, MCK_SCSrcB32 }, },
  { 7886 /* tbuffer_store_format_x */, AMDGPU::TBUFFER_STORE_FORMAT_X_si, Convert__Reg1_0__Imm1_1__Imm1_2__Imm1_3__Imm1_4__Imm1_5__Imm1_6__Imm1_7__Reg1_8__Reg1_9__Imm1_10__Imm1_11__SCSrcB321_12, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_VGPR_32, MCK_SReg_128, MCK_Imm, MCK_Imm, MCK_SCSrcB32 }, },
  { 7886 /* tbuffer_store_format_x */, AMDGPU::TBUFFER_STORE_FORMAT_X_vi, Convert__Reg1_0__Imm1_1__Imm1_2__Imm1_3__Imm1_4__Imm1_5__Imm1_6__Imm1_7__Reg1_8__Reg1_9__Imm1_10__Imm1_11__SCSrcB321_12, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_VGPR_32, MCK_SReg_128, MCK_Imm, MCK_Imm, MCK_SCSrcB32 }, },
  { 7909 /* tbuffer_store_format_xy */, AMDGPU::TBUFFER_STORE_FORMAT_XY_si, Convert__Reg1_0__Imm1_1__Imm1_2__Imm1_3__Imm1_4__Imm1_5__Imm1_6__Imm1_7__Reg1_8__Reg1_9__Imm1_10__Imm1_11__SCSrcB321_12, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_VGPR_32, MCK_SReg_128, MCK_Imm, MCK_Imm, MCK_SCSrcB32 }, },
  { 7909 /* tbuffer_store_format_xy */, AMDGPU::TBUFFER_STORE_FORMAT_XY_vi, Convert__Reg1_0__Imm1_1__Imm1_2__Imm1_3__Imm1_4__Imm1_5__Imm1_6__Imm1_7__Reg1_8__Reg1_9__Imm1_10__Imm1_11__SCSrcB321_12, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_VGPR_32, MCK_SReg_128, MCK_Imm, MCK_Imm, MCK_SCSrcB32 }, },
  { 7933 /* tbuffer_store_format_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_XYZ_si, Convert__Reg1_0__Imm1_1__Imm1_2__Imm1_3__Imm1_4__Imm1_5__Imm1_6__Imm1_7__Reg1_8__Reg1_9__Imm1_10__Imm1_11__SCSrcB321_12, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_VGPR_32, MCK_SReg_128, MCK_Imm, MCK_Imm, MCK_SCSrcB32 }, },
  { 7933 /* tbuffer_store_format_xyz */, AMDGPU::TBUFFER_STORE_FORMAT_XYZ_vi, Convert__Reg1_0__Imm1_1__Imm1_2__Imm1_3__Imm1_4__Imm1_5__Imm1_6__Imm1_7__Reg1_8__Reg1_9__Imm1_10__Imm1_11__SCSrcB321_12, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_VGPR_32, MCK_SReg_128, MCK_Imm, MCK_Imm, MCK_SCSrcB32 }, },
  { 7958 /* tbuffer_store_format_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_XYZW_si, Convert__Reg1_0__Imm1_1__Imm1_2__Imm1_3__Imm1_4__Imm1_5__Imm1_6__Imm1_7__Reg1_8__Reg1_9__Imm1_10__Imm1_11__SCSrcB321_12, Feature_isGCN|Feature_isSICI, { MCK_VReg_128, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_VGPR_32, MCK_SReg_128, MCK_Imm, MCK_Imm, MCK_SCSrcB32 }, },
  { 7958 /* tbuffer_store_format_xyzw */, AMDGPU::TBUFFER_STORE_FORMAT_XYZW_vi, Convert__Reg1_0__Imm1_1__Imm1_2__Imm1_3__Imm1_4__Imm1_5__Imm1_6__Imm1_7__Reg1_8__Reg1_9__Imm1_10__Imm1_11__SCSrcB321_12, Feature_isGCN|Feature_isVI, { MCK_VReg_128, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_Imm, MCK_VGPR_32, MCK_SReg_128, MCK_Imm, MCK_Imm, MCK_SCSrcB32 }, },
  { 7984 /* v_add_f16 */, AMDGPU::V_ADD_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 7994 /* v_add_f32 */, AMDGPU::V_ADD_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 7994 /* v_add_f32 */, AMDGPU::V_ADD_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8014 /* v_add_i32 */, AMDGPU::V_ADD_I32_e32_si, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8014 /* v_add_i32 */, AMDGPU::V_ADD_I32_e32_vi, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8024 /* v_add_u16 */, AMDGPU::V_ADD_U16_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8034 /* v_addc_u32 */, AMDGPU::V_ADDC_U32_e32_si, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 8034 /* v_addc_u32 */, AMDGPU::V_ADDC_U32_e32_vi, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 8076 /* v_and_b32 */, AMDGPU::V_AND_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8076 /* v_and_b32 */, AMDGPU::V_AND_B32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8086 /* v_ashr_i32 */, AMDGPU::V_ASHR_I32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8108 /* v_ashrrev_i16 */, AMDGPU::V_ASHRREV_I16_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8122 /* v_ashrrev_i32 */, AMDGPU::V_ASHRREV_I32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8122 /* v_ashrrev_i32 */, AMDGPU::V_ASHRREV_I32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8150 /* v_bcnt_u32_b32 */, AMDGPU::V_BCNT_U32_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8195 /* v_bfm_b32 */, AMDGPU::V_BFM_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8205 /* v_bfrev_b32 */, AMDGPU::V_BFREV_B32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 8205 /* v_bfrev_b32 */, AMDGPU::V_BFREV_B32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 8217 /* v_ceil_f16 */, AMDGPU::V_CEIL_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 8228 /* v_ceil_f32 */, AMDGPU::V_CEIL_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 8228 /* v_ceil_f32 */, AMDGPU::V_CEIL_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 8239 /* v_ceil_f64 */, AMDGPU::V_CEIL_F64_e32_ci, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 8239 /* v_ceil_f64 */, AMDGPU::V_CEIL_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 8250 /* v_clrexcp */, AMDGPU::V_CLREXCP_e32_si, Convert_NoOperands, Feature_isGCN|Feature_isSICI, {  }, },
  { 8250 /* v_clrexcp */, AMDGPU::V_CLREXCP_e32_vi, Convert_NoOperands, Feature_isGCN|Feature_isVI, {  }, },
  { 8260 /* v_cmp_class_f16 */, AMDGPU::V_CMP_CLASS_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 8276 /* v_cmp_class_f16_e32 */, AMDGPU::V_CMP_CLASS_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 8296 /* v_cmp_class_f32 */, AMDGPU::V_CMP_CLASS_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8296 /* v_cmp_class_f32 */, AMDGPU::V_CMP_CLASS_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8312 /* v_cmp_class_f32_e32 */, AMDGPU::V_CMP_CLASS_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8312 /* v_cmp_class_f32_e32 */, AMDGPU::V_CMP_CLASS_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8332 /* v_cmp_class_f64 */, AMDGPU::V_CMP_CLASS_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 8332 /* v_cmp_class_f64 */, AMDGPU::V_CMP_CLASS_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 8348 /* v_cmp_class_f64_e32 */, AMDGPU::V_CMP_CLASS_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 8348 /* v_cmp_class_f64_e32 */, AMDGPU::V_CMP_CLASS_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 8368 /* v_cmp_eq_f16 */, AMDGPU::V_CMP_EQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 8381 /* v_cmp_eq_f16_e32 */, AMDGPU::V_CMP_EQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 8398 /* v_cmp_eq_f32 */, AMDGPU::V_CMP_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8398 /* v_cmp_eq_f32 */, AMDGPU::V_CMP_EQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8411 /* v_cmp_eq_f32_e32 */, AMDGPU::V_CMP_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8411 /* v_cmp_eq_f32_e32 */, AMDGPU::V_CMP_EQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8428 /* v_cmp_eq_f64 */, AMDGPU::V_CMP_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 8428 /* v_cmp_eq_f64 */, AMDGPU::V_CMP_EQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 8441 /* v_cmp_eq_f64_e32 */, AMDGPU::V_CMP_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 8441 /* v_cmp_eq_f64_e32 */, AMDGPU::V_CMP_EQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 8458 /* v_cmp_eq_i16 */, AMDGPU::V_CMP_EQ_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 8471 /* v_cmp_eq_i16_e32 */, AMDGPU::V_CMP_EQ_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 8488 /* v_cmp_eq_i32 */, AMDGPU::V_CMP_EQ_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8488 /* v_cmp_eq_i32 */, AMDGPU::V_CMP_EQ_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8501 /* v_cmp_eq_i32_e32 */, AMDGPU::V_CMP_EQ_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8501 /* v_cmp_eq_i32_e32 */, AMDGPU::V_CMP_EQ_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8518 /* v_cmp_eq_i64 */, AMDGPU::V_CMP_EQ_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8518 /* v_cmp_eq_i64 */, AMDGPU::V_CMP_EQ_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8531 /* v_cmp_eq_i64_e32 */, AMDGPU::V_CMP_EQ_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8531 /* v_cmp_eq_i64_e32 */, AMDGPU::V_CMP_EQ_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8548 /* v_cmp_eq_u16 */, AMDGPU::V_CMP_EQ_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 8561 /* v_cmp_eq_u16_e32 */, AMDGPU::V_CMP_EQ_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 8578 /* v_cmp_eq_u32 */, AMDGPU::V_CMP_EQ_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8578 /* v_cmp_eq_u32 */, AMDGPU::V_CMP_EQ_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8591 /* v_cmp_eq_u32_e32 */, AMDGPU::V_CMP_EQ_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8591 /* v_cmp_eq_u32_e32 */, AMDGPU::V_CMP_EQ_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8608 /* v_cmp_eq_u64 */, AMDGPU::V_CMP_EQ_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8608 /* v_cmp_eq_u64 */, AMDGPU::V_CMP_EQ_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8621 /* v_cmp_eq_u64_e32 */, AMDGPU::V_CMP_EQ_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8621 /* v_cmp_eq_u64_e32 */, AMDGPU::V_CMP_EQ_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8638 /* v_cmp_f_f16 */, AMDGPU::V_CMP_F_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 8650 /* v_cmp_f_f16_e32 */, AMDGPU::V_CMP_F_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 8666 /* v_cmp_f_f32 */, AMDGPU::V_CMP_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8666 /* v_cmp_f_f32 */, AMDGPU::V_CMP_F_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8678 /* v_cmp_f_f32_e32 */, AMDGPU::V_CMP_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8678 /* v_cmp_f_f32_e32 */, AMDGPU::V_CMP_F_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8694 /* v_cmp_f_f64 */, AMDGPU::V_CMP_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 8694 /* v_cmp_f_f64 */, AMDGPU::V_CMP_F_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 8706 /* v_cmp_f_f64_e32 */, AMDGPU::V_CMP_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 8706 /* v_cmp_f_f64_e32 */, AMDGPU::V_CMP_F_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 8722 /* v_cmp_f_i16 */, AMDGPU::V_CMP_F_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 8734 /* v_cmp_f_i16_e32 */, AMDGPU::V_CMP_F_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 8750 /* v_cmp_f_i32 */, AMDGPU::V_CMP_F_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8750 /* v_cmp_f_i32 */, AMDGPU::V_CMP_F_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8762 /* v_cmp_f_i32_e32 */, AMDGPU::V_CMP_F_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8762 /* v_cmp_f_i32_e32 */, AMDGPU::V_CMP_F_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8778 /* v_cmp_f_i64 */, AMDGPU::V_CMP_F_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8778 /* v_cmp_f_i64 */, AMDGPU::V_CMP_F_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8790 /* v_cmp_f_i64_e32 */, AMDGPU::V_CMP_F_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8790 /* v_cmp_f_i64_e32 */, AMDGPU::V_CMP_F_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8806 /* v_cmp_f_u16 */, AMDGPU::V_CMP_F_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 8818 /* v_cmp_f_u16_e32 */, AMDGPU::V_CMP_F_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 8834 /* v_cmp_f_u32 */, AMDGPU::V_CMP_F_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8834 /* v_cmp_f_u32 */, AMDGPU::V_CMP_F_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8846 /* v_cmp_f_u32_e32 */, AMDGPU::V_CMP_F_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8846 /* v_cmp_f_u32_e32 */, AMDGPU::V_CMP_F_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 8862 /* v_cmp_f_u64 */, AMDGPU::V_CMP_F_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8862 /* v_cmp_f_u64 */, AMDGPU::V_CMP_F_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8874 /* v_cmp_f_u64_e32 */, AMDGPU::V_CMP_F_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8874 /* v_cmp_f_u64_e32 */, AMDGPU::V_CMP_F_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 8890 /* v_cmp_ge_f16 */, AMDGPU::V_CMP_GE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 8903 /* v_cmp_ge_f16_e32 */, AMDGPU::V_CMP_GE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 8920 /* v_cmp_ge_f32 */, AMDGPU::V_CMP_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8920 /* v_cmp_ge_f32 */, AMDGPU::V_CMP_GE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8933 /* v_cmp_ge_f32_e32 */, AMDGPU::V_CMP_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8933 /* v_cmp_ge_f32_e32 */, AMDGPU::V_CMP_GE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 8950 /* v_cmp_ge_f64 */, AMDGPU::V_CMP_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 8950 /* v_cmp_ge_f64 */, AMDGPU::V_CMP_GE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 8963 /* v_cmp_ge_f64_e32 */, AMDGPU::V_CMP_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 8963 /* v_cmp_ge_f64_e32 */, AMDGPU::V_CMP_GE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 8980 /* v_cmp_ge_i16 */, AMDGPU::V_CMP_GE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 8993 /* v_cmp_ge_i16_e32 */, AMDGPU::V_CMP_GE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 9010 /* v_cmp_ge_i32 */, AMDGPU::V_CMP_GE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9010 /* v_cmp_ge_i32 */, AMDGPU::V_CMP_GE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9023 /* v_cmp_ge_i32_e32 */, AMDGPU::V_CMP_GE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9023 /* v_cmp_ge_i32_e32 */, AMDGPU::V_CMP_GE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9040 /* v_cmp_ge_i64 */, AMDGPU::V_CMP_GE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9040 /* v_cmp_ge_i64 */, AMDGPU::V_CMP_GE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9053 /* v_cmp_ge_i64_e32 */, AMDGPU::V_CMP_GE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9053 /* v_cmp_ge_i64_e32 */, AMDGPU::V_CMP_GE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9070 /* v_cmp_ge_u16 */, AMDGPU::V_CMP_GE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 9083 /* v_cmp_ge_u16_e32 */, AMDGPU::V_CMP_GE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 9100 /* v_cmp_ge_u32 */, AMDGPU::V_CMP_GE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9100 /* v_cmp_ge_u32 */, AMDGPU::V_CMP_GE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9113 /* v_cmp_ge_u32_e32 */, AMDGPU::V_CMP_GE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9113 /* v_cmp_ge_u32_e32 */, AMDGPU::V_CMP_GE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9130 /* v_cmp_ge_u64 */, AMDGPU::V_CMP_GE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9130 /* v_cmp_ge_u64 */, AMDGPU::V_CMP_GE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9143 /* v_cmp_ge_u64_e32 */, AMDGPU::V_CMP_GE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9143 /* v_cmp_ge_u64_e32 */, AMDGPU::V_CMP_GE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9160 /* v_cmp_gt_f16 */, AMDGPU::V_CMP_GT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 9173 /* v_cmp_gt_f16_e32 */, AMDGPU::V_CMP_GT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 9190 /* v_cmp_gt_f32 */, AMDGPU::V_CMP_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9190 /* v_cmp_gt_f32 */, AMDGPU::V_CMP_GT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9203 /* v_cmp_gt_f32_e32 */, AMDGPU::V_CMP_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9203 /* v_cmp_gt_f32_e32 */, AMDGPU::V_CMP_GT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9220 /* v_cmp_gt_f64 */, AMDGPU::V_CMP_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9220 /* v_cmp_gt_f64 */, AMDGPU::V_CMP_GT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9233 /* v_cmp_gt_f64_e32 */, AMDGPU::V_CMP_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9233 /* v_cmp_gt_f64_e32 */, AMDGPU::V_CMP_GT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9250 /* v_cmp_gt_i16 */, AMDGPU::V_CMP_GT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 9263 /* v_cmp_gt_i16_e32 */, AMDGPU::V_CMP_GT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 9280 /* v_cmp_gt_i32 */, AMDGPU::V_CMP_GT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9280 /* v_cmp_gt_i32 */, AMDGPU::V_CMP_GT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9293 /* v_cmp_gt_i32_e32 */, AMDGPU::V_CMP_GT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9293 /* v_cmp_gt_i32_e32 */, AMDGPU::V_CMP_GT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9310 /* v_cmp_gt_i64 */, AMDGPU::V_CMP_GT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9310 /* v_cmp_gt_i64 */, AMDGPU::V_CMP_GT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9323 /* v_cmp_gt_i64_e32 */, AMDGPU::V_CMP_GT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9323 /* v_cmp_gt_i64_e32 */, AMDGPU::V_CMP_GT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9340 /* v_cmp_gt_u16 */, AMDGPU::V_CMP_GT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 9353 /* v_cmp_gt_u16_e32 */, AMDGPU::V_CMP_GT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 9370 /* v_cmp_gt_u32 */, AMDGPU::V_CMP_GT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9370 /* v_cmp_gt_u32 */, AMDGPU::V_CMP_GT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9383 /* v_cmp_gt_u32_e32 */, AMDGPU::V_CMP_GT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9383 /* v_cmp_gt_u32_e32 */, AMDGPU::V_CMP_GT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9400 /* v_cmp_gt_u64 */, AMDGPU::V_CMP_GT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9400 /* v_cmp_gt_u64 */, AMDGPU::V_CMP_GT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9413 /* v_cmp_gt_u64_e32 */, AMDGPU::V_CMP_GT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9413 /* v_cmp_gt_u64_e32 */, AMDGPU::V_CMP_GT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9430 /* v_cmp_le_f16 */, AMDGPU::V_CMP_LE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 9443 /* v_cmp_le_f16_e32 */, AMDGPU::V_CMP_LE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 9460 /* v_cmp_le_f32 */, AMDGPU::V_CMP_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9460 /* v_cmp_le_f32 */, AMDGPU::V_CMP_LE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9473 /* v_cmp_le_f32_e32 */, AMDGPU::V_CMP_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9473 /* v_cmp_le_f32_e32 */, AMDGPU::V_CMP_LE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9490 /* v_cmp_le_f64 */, AMDGPU::V_CMP_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9490 /* v_cmp_le_f64 */, AMDGPU::V_CMP_LE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9503 /* v_cmp_le_f64_e32 */, AMDGPU::V_CMP_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9503 /* v_cmp_le_f64_e32 */, AMDGPU::V_CMP_LE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9520 /* v_cmp_le_i16 */, AMDGPU::V_CMP_LE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 9533 /* v_cmp_le_i16_e32 */, AMDGPU::V_CMP_LE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 9550 /* v_cmp_le_i32 */, AMDGPU::V_CMP_LE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9550 /* v_cmp_le_i32 */, AMDGPU::V_CMP_LE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9563 /* v_cmp_le_i32_e32 */, AMDGPU::V_CMP_LE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9563 /* v_cmp_le_i32_e32 */, AMDGPU::V_CMP_LE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9580 /* v_cmp_le_i64 */, AMDGPU::V_CMP_LE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9580 /* v_cmp_le_i64 */, AMDGPU::V_CMP_LE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9593 /* v_cmp_le_i64_e32 */, AMDGPU::V_CMP_LE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9593 /* v_cmp_le_i64_e32 */, AMDGPU::V_CMP_LE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9610 /* v_cmp_le_u16 */, AMDGPU::V_CMP_LE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 9623 /* v_cmp_le_u16_e32 */, AMDGPU::V_CMP_LE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 9640 /* v_cmp_le_u32 */, AMDGPU::V_CMP_LE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9640 /* v_cmp_le_u32 */, AMDGPU::V_CMP_LE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9653 /* v_cmp_le_u32_e32 */, AMDGPU::V_CMP_LE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9653 /* v_cmp_le_u32_e32 */, AMDGPU::V_CMP_LE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9670 /* v_cmp_le_u64 */, AMDGPU::V_CMP_LE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9670 /* v_cmp_le_u64 */, AMDGPU::V_CMP_LE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9683 /* v_cmp_le_u64_e32 */, AMDGPU::V_CMP_LE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9683 /* v_cmp_le_u64_e32 */, AMDGPU::V_CMP_LE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9700 /* v_cmp_lg_f16 */, AMDGPU::V_CMP_LG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 9713 /* v_cmp_lg_f16_e32 */, AMDGPU::V_CMP_LG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 9730 /* v_cmp_lg_f32 */, AMDGPU::V_CMP_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9730 /* v_cmp_lg_f32 */, AMDGPU::V_CMP_LG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9743 /* v_cmp_lg_f32_e32 */, AMDGPU::V_CMP_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9743 /* v_cmp_lg_f32_e32 */, AMDGPU::V_CMP_LG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9760 /* v_cmp_lg_f64 */, AMDGPU::V_CMP_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9760 /* v_cmp_lg_f64 */, AMDGPU::V_CMP_LG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9773 /* v_cmp_lg_f64_e32 */, AMDGPU::V_CMP_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9773 /* v_cmp_lg_f64_e32 */, AMDGPU::V_CMP_LG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9790 /* v_cmp_lt_f16 */, AMDGPU::V_CMP_LT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 9803 /* v_cmp_lt_f16_e32 */, AMDGPU::V_CMP_LT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 9820 /* v_cmp_lt_f32 */, AMDGPU::V_CMP_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9820 /* v_cmp_lt_f32 */, AMDGPU::V_CMP_LT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9833 /* v_cmp_lt_f32_e32 */, AMDGPU::V_CMP_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9833 /* v_cmp_lt_f32_e32 */, AMDGPU::V_CMP_LT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 9850 /* v_cmp_lt_f64 */, AMDGPU::V_CMP_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9850 /* v_cmp_lt_f64 */, AMDGPU::V_CMP_LT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9863 /* v_cmp_lt_f64_e32 */, AMDGPU::V_CMP_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9863 /* v_cmp_lt_f64_e32 */, AMDGPU::V_CMP_LT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 9880 /* v_cmp_lt_i16 */, AMDGPU::V_CMP_LT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 9893 /* v_cmp_lt_i16_e32 */, AMDGPU::V_CMP_LT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 9910 /* v_cmp_lt_i32 */, AMDGPU::V_CMP_LT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9910 /* v_cmp_lt_i32 */, AMDGPU::V_CMP_LT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9923 /* v_cmp_lt_i32_e32 */, AMDGPU::V_CMP_LT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9923 /* v_cmp_lt_i32_e32 */, AMDGPU::V_CMP_LT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 9940 /* v_cmp_lt_i64 */, AMDGPU::V_CMP_LT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9940 /* v_cmp_lt_i64 */, AMDGPU::V_CMP_LT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9953 /* v_cmp_lt_i64_e32 */, AMDGPU::V_CMP_LT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9953 /* v_cmp_lt_i64_e32 */, AMDGPU::V_CMP_LT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 9970 /* v_cmp_lt_u16 */, AMDGPU::V_CMP_LT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 9983 /* v_cmp_lt_u16_e32 */, AMDGPU::V_CMP_LT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 10000 /* v_cmp_lt_u32 */, AMDGPU::V_CMP_LT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10000 /* v_cmp_lt_u32 */, AMDGPU::V_CMP_LT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10013 /* v_cmp_lt_u32_e32 */, AMDGPU::V_CMP_LT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10013 /* v_cmp_lt_u32_e32 */, AMDGPU::V_CMP_LT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10030 /* v_cmp_lt_u64 */, AMDGPU::V_CMP_LT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10030 /* v_cmp_lt_u64 */, AMDGPU::V_CMP_LT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10043 /* v_cmp_lt_u64_e32 */, AMDGPU::V_CMP_LT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10043 /* v_cmp_lt_u64_e32 */, AMDGPU::V_CMP_LT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10060 /* v_cmp_ne_i16 */, AMDGPU::V_CMP_NE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 10073 /* v_cmp_ne_i16_e32 */, AMDGPU::V_CMP_NE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 10090 /* v_cmp_ne_i32 */, AMDGPU::V_CMP_NE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10090 /* v_cmp_ne_i32 */, AMDGPU::V_CMP_NE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10103 /* v_cmp_ne_i32_e32 */, AMDGPU::V_CMP_NE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10103 /* v_cmp_ne_i32_e32 */, AMDGPU::V_CMP_NE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10120 /* v_cmp_ne_i64 */, AMDGPU::V_CMP_NE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10120 /* v_cmp_ne_i64 */, AMDGPU::V_CMP_NE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10133 /* v_cmp_ne_i64_e32 */, AMDGPU::V_CMP_NE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10133 /* v_cmp_ne_i64_e32 */, AMDGPU::V_CMP_NE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10150 /* v_cmp_ne_u16 */, AMDGPU::V_CMP_NE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 10163 /* v_cmp_ne_u16_e32 */, AMDGPU::V_CMP_NE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 10180 /* v_cmp_ne_u32 */, AMDGPU::V_CMP_NE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10180 /* v_cmp_ne_u32 */, AMDGPU::V_CMP_NE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10193 /* v_cmp_ne_u32_e32 */, AMDGPU::V_CMP_NE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10193 /* v_cmp_ne_u32_e32 */, AMDGPU::V_CMP_NE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10210 /* v_cmp_ne_u64 */, AMDGPU::V_CMP_NE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10210 /* v_cmp_ne_u64 */, AMDGPU::V_CMP_NE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10223 /* v_cmp_ne_u64_e32 */, AMDGPU::V_CMP_NE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10223 /* v_cmp_ne_u64_e32 */, AMDGPU::V_CMP_NE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10240 /* v_cmp_neq_f16 */, AMDGPU::V_CMP_NEQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 10254 /* v_cmp_neq_f16_e32 */, AMDGPU::V_CMP_NEQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 10272 /* v_cmp_neq_f32 */, AMDGPU::V_CMP_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10272 /* v_cmp_neq_f32 */, AMDGPU::V_CMP_NEQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10286 /* v_cmp_neq_f32_e32 */, AMDGPU::V_CMP_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10286 /* v_cmp_neq_f32_e32 */, AMDGPU::V_CMP_NEQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10304 /* v_cmp_neq_f64 */, AMDGPU::V_CMP_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10304 /* v_cmp_neq_f64 */, AMDGPU::V_CMP_NEQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10318 /* v_cmp_neq_f64_e32 */, AMDGPU::V_CMP_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10318 /* v_cmp_neq_f64_e32 */, AMDGPU::V_CMP_NEQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10336 /* v_cmp_nge_f16 */, AMDGPU::V_CMP_NGE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 10350 /* v_cmp_nge_f16_e32 */, AMDGPU::V_CMP_NGE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 10368 /* v_cmp_nge_f32 */, AMDGPU::V_CMP_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10368 /* v_cmp_nge_f32 */, AMDGPU::V_CMP_NGE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10382 /* v_cmp_nge_f32_e32 */, AMDGPU::V_CMP_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10382 /* v_cmp_nge_f32_e32 */, AMDGPU::V_CMP_NGE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10400 /* v_cmp_nge_f64 */, AMDGPU::V_CMP_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10400 /* v_cmp_nge_f64 */, AMDGPU::V_CMP_NGE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10414 /* v_cmp_nge_f64_e32 */, AMDGPU::V_CMP_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10414 /* v_cmp_nge_f64_e32 */, AMDGPU::V_CMP_NGE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10432 /* v_cmp_ngt_f16 */, AMDGPU::V_CMP_NGT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 10446 /* v_cmp_ngt_f16_e32 */, AMDGPU::V_CMP_NGT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 10464 /* v_cmp_ngt_f32 */, AMDGPU::V_CMP_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10464 /* v_cmp_ngt_f32 */, AMDGPU::V_CMP_NGT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10478 /* v_cmp_ngt_f32_e32 */, AMDGPU::V_CMP_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10478 /* v_cmp_ngt_f32_e32 */, AMDGPU::V_CMP_NGT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10496 /* v_cmp_ngt_f64 */, AMDGPU::V_CMP_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10496 /* v_cmp_ngt_f64 */, AMDGPU::V_CMP_NGT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10510 /* v_cmp_ngt_f64_e32 */, AMDGPU::V_CMP_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10510 /* v_cmp_ngt_f64_e32 */, AMDGPU::V_CMP_NGT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10528 /* v_cmp_nle_f16 */, AMDGPU::V_CMP_NLE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 10542 /* v_cmp_nle_f16_e32 */, AMDGPU::V_CMP_NLE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 10560 /* v_cmp_nle_f32 */, AMDGPU::V_CMP_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10560 /* v_cmp_nle_f32 */, AMDGPU::V_CMP_NLE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10574 /* v_cmp_nle_f32_e32 */, AMDGPU::V_CMP_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10574 /* v_cmp_nle_f32_e32 */, AMDGPU::V_CMP_NLE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10592 /* v_cmp_nle_f64 */, AMDGPU::V_CMP_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10592 /* v_cmp_nle_f64 */, AMDGPU::V_CMP_NLE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10606 /* v_cmp_nle_f64_e32 */, AMDGPU::V_CMP_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10606 /* v_cmp_nle_f64_e32 */, AMDGPU::V_CMP_NLE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10624 /* v_cmp_nlg_f16 */, AMDGPU::V_CMP_NLG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 10638 /* v_cmp_nlg_f16_e32 */, AMDGPU::V_CMP_NLG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 10656 /* v_cmp_nlg_f32 */, AMDGPU::V_CMP_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10656 /* v_cmp_nlg_f32 */, AMDGPU::V_CMP_NLG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10670 /* v_cmp_nlg_f32_e32 */, AMDGPU::V_CMP_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10670 /* v_cmp_nlg_f32_e32 */, AMDGPU::V_CMP_NLG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10688 /* v_cmp_nlg_f64 */, AMDGPU::V_CMP_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10688 /* v_cmp_nlg_f64 */, AMDGPU::V_CMP_NLG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10702 /* v_cmp_nlg_f64_e32 */, AMDGPU::V_CMP_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10702 /* v_cmp_nlg_f64_e32 */, AMDGPU::V_CMP_NLG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10720 /* v_cmp_nlt_f16 */, AMDGPU::V_CMP_NLT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 10734 /* v_cmp_nlt_f16_e32 */, AMDGPU::V_CMP_NLT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 10752 /* v_cmp_nlt_f32 */, AMDGPU::V_CMP_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10752 /* v_cmp_nlt_f32 */, AMDGPU::V_CMP_NLT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10766 /* v_cmp_nlt_f32_e32 */, AMDGPU::V_CMP_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10766 /* v_cmp_nlt_f32_e32 */, AMDGPU::V_CMP_NLT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10784 /* v_cmp_nlt_f64 */, AMDGPU::V_CMP_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10784 /* v_cmp_nlt_f64 */, AMDGPU::V_CMP_NLT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10798 /* v_cmp_nlt_f64_e32 */, AMDGPU::V_CMP_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10798 /* v_cmp_nlt_f64_e32 */, AMDGPU::V_CMP_NLT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10816 /* v_cmp_o_f16 */, AMDGPU::V_CMP_O_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 10828 /* v_cmp_o_f16_e32 */, AMDGPU::V_CMP_O_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 10844 /* v_cmp_o_f32 */, AMDGPU::V_CMP_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10844 /* v_cmp_o_f32 */, AMDGPU::V_CMP_O_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10856 /* v_cmp_o_f32_e32 */, AMDGPU::V_CMP_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10856 /* v_cmp_o_f32_e32 */, AMDGPU::V_CMP_O_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 10872 /* v_cmp_o_f64 */, AMDGPU::V_CMP_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10872 /* v_cmp_o_f64 */, AMDGPU::V_CMP_O_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10884 /* v_cmp_o_f64_e32 */, AMDGPU::V_CMP_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10884 /* v_cmp_o_f64_e32 */, AMDGPU::V_CMP_O_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 10900 /* v_cmp_t_i16 */, AMDGPU::V_CMP_T_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 10912 /* v_cmp_t_i16_e32 */, AMDGPU::V_CMP_T_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 10928 /* v_cmp_t_i32 */, AMDGPU::V_CMP_T_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10928 /* v_cmp_t_i32 */, AMDGPU::V_CMP_T_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10940 /* v_cmp_t_i32_e32 */, AMDGPU::V_CMP_T_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10940 /* v_cmp_t_i32_e32 */, AMDGPU::V_CMP_T_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 10956 /* v_cmp_t_i64 */, AMDGPU::V_CMP_T_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10956 /* v_cmp_t_i64 */, AMDGPU::V_CMP_T_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10968 /* v_cmp_t_i64_e32 */, AMDGPU::V_CMP_T_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10968 /* v_cmp_t_i64_e32 */, AMDGPU::V_CMP_T_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 10984 /* v_cmp_t_u16 */, AMDGPU::V_CMP_T_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 10996 /* v_cmp_t_u16_e32 */, AMDGPU::V_CMP_T_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 11012 /* v_cmp_t_u32 */, AMDGPU::V_CMP_T_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 11012 /* v_cmp_t_u32 */, AMDGPU::V_CMP_T_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 11024 /* v_cmp_t_u32_e32 */, AMDGPU::V_CMP_T_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 11024 /* v_cmp_t_u32_e32 */, AMDGPU::V_CMP_T_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 11040 /* v_cmp_t_u64 */, AMDGPU::V_CMP_T_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 11040 /* v_cmp_t_u64 */, AMDGPU::V_CMP_T_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 11052 /* v_cmp_t_u64_e32 */, AMDGPU::V_CMP_T_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 11052 /* v_cmp_t_u64_e32 */, AMDGPU::V_CMP_T_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 11068 /* v_cmp_tru_f16 */, AMDGPU::V_CMP_TRU_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 11082 /* v_cmp_tru_f16_e32 */, AMDGPU::V_CMP_TRU_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 11100 /* v_cmp_tru_f32 */, AMDGPU::V_CMP_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11100 /* v_cmp_tru_f32 */, AMDGPU::V_CMP_TRU_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11114 /* v_cmp_tru_f32_e32 */, AMDGPU::V_CMP_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11114 /* v_cmp_tru_f32_e32 */, AMDGPU::V_CMP_TRU_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11132 /* v_cmp_tru_f64 */, AMDGPU::V_CMP_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11132 /* v_cmp_tru_f64 */, AMDGPU::V_CMP_TRU_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11146 /* v_cmp_tru_f64_e32 */, AMDGPU::V_CMP_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11146 /* v_cmp_tru_f64_e32 */, AMDGPU::V_CMP_TRU_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11164 /* v_cmp_u_f16 */, AMDGPU::V_CMP_U_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 11176 /* v_cmp_u_f16_e32 */, AMDGPU::V_CMP_U_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 11192 /* v_cmp_u_f32 */, AMDGPU::V_CMP_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11192 /* v_cmp_u_f32 */, AMDGPU::V_CMP_U_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11204 /* v_cmp_u_f32_e32 */, AMDGPU::V_CMP_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11204 /* v_cmp_u_f32_e32 */, AMDGPU::V_CMP_U_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11220 /* v_cmp_u_f64 */, AMDGPU::V_CMP_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11220 /* v_cmp_u_f64 */, AMDGPU::V_CMP_U_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11232 /* v_cmp_u_f64_e32 */, AMDGPU::V_CMP_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11232 /* v_cmp_u_f64_e32 */, AMDGPU::V_CMP_U_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11248 /* v_cmps_eq_f32 */, AMDGPU::V_CMPS_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11262 /* v_cmps_eq_f32_e32 */, AMDGPU::V_CMPS_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11280 /* v_cmps_eq_f64 */, AMDGPU::V_CMPS_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11294 /* v_cmps_eq_f64_e32 */, AMDGPU::V_CMPS_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11312 /* v_cmps_f_f32 */, AMDGPU::V_CMPS_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11325 /* v_cmps_f_f32_e32 */, AMDGPU::V_CMPS_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11342 /* v_cmps_f_f64 */, AMDGPU::V_CMPS_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11355 /* v_cmps_f_f64_e32 */, AMDGPU::V_CMPS_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11372 /* v_cmps_ge_f32 */, AMDGPU::V_CMPS_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11386 /* v_cmps_ge_f32_e32 */, AMDGPU::V_CMPS_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11404 /* v_cmps_ge_f64 */, AMDGPU::V_CMPS_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11418 /* v_cmps_ge_f64_e32 */, AMDGPU::V_CMPS_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11436 /* v_cmps_gt_f32 */, AMDGPU::V_CMPS_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11450 /* v_cmps_gt_f32_e32 */, AMDGPU::V_CMPS_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11468 /* v_cmps_gt_f64 */, AMDGPU::V_CMPS_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11482 /* v_cmps_gt_f64_e32 */, AMDGPU::V_CMPS_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11500 /* v_cmps_le_f32 */, AMDGPU::V_CMPS_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11514 /* v_cmps_le_f32_e32 */, AMDGPU::V_CMPS_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11532 /* v_cmps_le_f64 */, AMDGPU::V_CMPS_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11546 /* v_cmps_le_f64_e32 */, AMDGPU::V_CMPS_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11564 /* v_cmps_lg_f32 */, AMDGPU::V_CMPS_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11578 /* v_cmps_lg_f32_e32 */, AMDGPU::V_CMPS_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11596 /* v_cmps_lg_f64 */, AMDGPU::V_CMPS_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11610 /* v_cmps_lg_f64_e32 */, AMDGPU::V_CMPS_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11628 /* v_cmps_lt_f32 */, AMDGPU::V_CMPS_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11642 /* v_cmps_lt_f32_e32 */, AMDGPU::V_CMPS_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11660 /* v_cmps_lt_f64 */, AMDGPU::V_CMPS_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11674 /* v_cmps_lt_f64_e32 */, AMDGPU::V_CMPS_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11692 /* v_cmps_neq_f32 */, AMDGPU::V_CMPS_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11707 /* v_cmps_neq_f32_e32 */, AMDGPU::V_CMPS_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11726 /* v_cmps_neq_f64 */, AMDGPU::V_CMPS_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11741 /* v_cmps_neq_f64_e32 */, AMDGPU::V_CMPS_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11760 /* v_cmps_nge_f32 */, AMDGPU::V_CMPS_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11775 /* v_cmps_nge_f32_e32 */, AMDGPU::V_CMPS_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11794 /* v_cmps_nge_f64 */, AMDGPU::V_CMPS_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11809 /* v_cmps_nge_f64_e32 */, AMDGPU::V_CMPS_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11828 /* v_cmps_ngt_f32 */, AMDGPU::V_CMPS_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11843 /* v_cmps_ngt_f32_e32 */, AMDGPU::V_CMPS_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11862 /* v_cmps_ngt_f64 */, AMDGPU::V_CMPS_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11877 /* v_cmps_ngt_f64_e32 */, AMDGPU::V_CMPS_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11896 /* v_cmps_nle_f32 */, AMDGPU::V_CMPS_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11911 /* v_cmps_nle_f32_e32 */, AMDGPU::V_CMPS_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11930 /* v_cmps_nle_f64 */, AMDGPU::V_CMPS_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11945 /* v_cmps_nle_f64_e32 */, AMDGPU::V_CMPS_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 11964 /* v_cmps_nlg_f32 */, AMDGPU::V_CMPS_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11979 /* v_cmps_nlg_f32_e32 */, AMDGPU::V_CMPS_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 11998 /* v_cmps_nlg_f64 */, AMDGPU::V_CMPS_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12013 /* v_cmps_nlg_f64_e32 */, AMDGPU::V_CMPS_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12032 /* v_cmps_nlt_f32 */, AMDGPU::V_CMPS_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12047 /* v_cmps_nlt_f32_e32 */, AMDGPU::V_CMPS_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12066 /* v_cmps_nlt_f64 */, AMDGPU::V_CMPS_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12081 /* v_cmps_nlt_f64_e32 */, AMDGPU::V_CMPS_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12100 /* v_cmps_o_f32 */, AMDGPU::V_CMPS_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12113 /* v_cmps_o_f32_e32 */, AMDGPU::V_CMPS_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12130 /* v_cmps_o_f64 */, AMDGPU::V_CMPS_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12143 /* v_cmps_o_f64_e32 */, AMDGPU::V_CMPS_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12160 /* v_cmps_tru_f32 */, AMDGPU::V_CMPS_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12175 /* v_cmps_tru_f32_e32 */, AMDGPU::V_CMPS_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12194 /* v_cmps_tru_f64 */, AMDGPU::V_CMPS_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12209 /* v_cmps_tru_f64_e32 */, AMDGPU::V_CMPS_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12228 /* v_cmps_u_f32 */, AMDGPU::V_CMPS_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12241 /* v_cmps_u_f32_e32 */, AMDGPU::V_CMPS_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12258 /* v_cmps_u_f64 */, AMDGPU::V_CMPS_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12271 /* v_cmps_u_f64_e32 */, AMDGPU::V_CMPS_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12288 /* v_cmpsx_eq_f32 */, AMDGPU::V_CMPSX_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12303 /* v_cmpsx_eq_f32_e32 */, AMDGPU::V_CMPSX_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12322 /* v_cmpsx_eq_f64 */, AMDGPU::V_CMPSX_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12337 /* v_cmpsx_eq_f64_e32 */, AMDGPU::V_CMPSX_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12356 /* v_cmpsx_f_f32 */, AMDGPU::V_CMPSX_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12370 /* v_cmpsx_f_f32_e32 */, AMDGPU::V_CMPSX_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12388 /* v_cmpsx_f_f64 */, AMDGPU::V_CMPSX_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12402 /* v_cmpsx_f_f64_e32 */, AMDGPU::V_CMPSX_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12420 /* v_cmpsx_ge_f32 */, AMDGPU::V_CMPSX_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12435 /* v_cmpsx_ge_f32_e32 */, AMDGPU::V_CMPSX_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12454 /* v_cmpsx_ge_f64 */, AMDGPU::V_CMPSX_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12469 /* v_cmpsx_ge_f64_e32 */, AMDGPU::V_CMPSX_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12488 /* v_cmpsx_gt_f32 */, AMDGPU::V_CMPSX_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12503 /* v_cmpsx_gt_f32_e32 */, AMDGPU::V_CMPSX_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12522 /* v_cmpsx_gt_f64 */, AMDGPU::V_CMPSX_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12537 /* v_cmpsx_gt_f64_e32 */, AMDGPU::V_CMPSX_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12556 /* v_cmpsx_le_f32 */, AMDGPU::V_CMPSX_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12571 /* v_cmpsx_le_f32_e32 */, AMDGPU::V_CMPSX_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12590 /* v_cmpsx_le_f64 */, AMDGPU::V_CMPSX_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12605 /* v_cmpsx_le_f64_e32 */, AMDGPU::V_CMPSX_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12624 /* v_cmpsx_lg_f32 */, AMDGPU::V_CMPSX_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12639 /* v_cmpsx_lg_f32_e32 */, AMDGPU::V_CMPSX_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12658 /* v_cmpsx_lg_f64 */, AMDGPU::V_CMPSX_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12673 /* v_cmpsx_lg_f64_e32 */, AMDGPU::V_CMPSX_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12692 /* v_cmpsx_lt_f32 */, AMDGPU::V_CMPSX_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12707 /* v_cmpsx_lt_f32_e32 */, AMDGPU::V_CMPSX_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12726 /* v_cmpsx_lt_f64 */, AMDGPU::V_CMPSX_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12741 /* v_cmpsx_lt_f64_e32 */, AMDGPU::V_CMPSX_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12760 /* v_cmpsx_neq_f32 */, AMDGPU::V_CMPSX_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12776 /* v_cmpsx_neq_f32_e32 */, AMDGPU::V_CMPSX_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12796 /* v_cmpsx_neq_f64 */, AMDGPU::V_CMPSX_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12812 /* v_cmpsx_neq_f64_e32 */, AMDGPU::V_CMPSX_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12832 /* v_cmpsx_nge_f32 */, AMDGPU::V_CMPSX_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12848 /* v_cmpsx_nge_f32_e32 */, AMDGPU::V_CMPSX_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12868 /* v_cmpsx_nge_f64 */, AMDGPU::V_CMPSX_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12884 /* v_cmpsx_nge_f64_e32 */, AMDGPU::V_CMPSX_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12904 /* v_cmpsx_ngt_f32 */, AMDGPU::V_CMPSX_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12920 /* v_cmpsx_ngt_f32_e32 */, AMDGPU::V_CMPSX_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12940 /* v_cmpsx_ngt_f64 */, AMDGPU::V_CMPSX_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12956 /* v_cmpsx_ngt_f64_e32 */, AMDGPU::V_CMPSX_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 12976 /* v_cmpsx_nle_f32 */, AMDGPU::V_CMPSX_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 12992 /* v_cmpsx_nle_f32_e32 */, AMDGPU::V_CMPSX_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13012 /* v_cmpsx_nle_f64 */, AMDGPU::V_CMPSX_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13028 /* v_cmpsx_nle_f64_e32 */, AMDGPU::V_CMPSX_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13048 /* v_cmpsx_nlg_f32 */, AMDGPU::V_CMPSX_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13064 /* v_cmpsx_nlg_f32_e32 */, AMDGPU::V_CMPSX_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13084 /* v_cmpsx_nlg_f64 */, AMDGPU::V_CMPSX_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13100 /* v_cmpsx_nlg_f64_e32 */, AMDGPU::V_CMPSX_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13120 /* v_cmpsx_nlt_f32 */, AMDGPU::V_CMPSX_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13136 /* v_cmpsx_nlt_f32_e32 */, AMDGPU::V_CMPSX_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13156 /* v_cmpsx_nlt_f64 */, AMDGPU::V_CMPSX_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13172 /* v_cmpsx_nlt_f64_e32 */, AMDGPU::V_CMPSX_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13192 /* v_cmpsx_o_f32 */, AMDGPU::V_CMPSX_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13206 /* v_cmpsx_o_f32_e32 */, AMDGPU::V_CMPSX_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13224 /* v_cmpsx_o_f64 */, AMDGPU::V_CMPSX_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13238 /* v_cmpsx_o_f64_e32 */, AMDGPU::V_CMPSX_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13256 /* v_cmpsx_tru_f32 */, AMDGPU::V_CMPSX_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13272 /* v_cmpsx_tru_f32_e32 */, AMDGPU::V_CMPSX_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13292 /* v_cmpsx_tru_f64 */, AMDGPU::V_CMPSX_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13308 /* v_cmpsx_tru_f64_e32 */, AMDGPU::V_CMPSX_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13328 /* v_cmpsx_u_f32 */, AMDGPU::V_CMPSX_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13342 /* v_cmpsx_u_f32_e32 */, AMDGPU::V_CMPSX_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13360 /* v_cmpsx_u_f64 */, AMDGPU::V_CMPSX_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13374 /* v_cmpsx_u_f64_e32 */, AMDGPU::V_CMPSX_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13392 /* v_cmpx_class_f16 */, AMDGPU::V_CMPX_CLASS_F16_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13409 /* v_cmpx_class_f16_e32 */, AMDGPU::V_CMPX_CLASS_F16_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13430 /* v_cmpx_class_f32 */, AMDGPU::V_CMPX_CLASS_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13430 /* v_cmpx_class_f32 */, AMDGPU::V_CMPX_CLASS_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13447 /* v_cmpx_class_f32_e32 */, AMDGPU::V_CMPX_CLASS_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13447 /* v_cmpx_class_f32_e32 */, AMDGPU::V_CMPX_CLASS_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13468 /* v_cmpx_class_f64 */, AMDGPU::V_CMPX_CLASS_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 13468 /* v_cmpx_class_f64 */, AMDGPU::V_CMPX_CLASS_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 13485 /* v_cmpx_class_f64_e32 */, AMDGPU::V_CMPX_CLASS_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 13485 /* v_cmpx_class_f64_e32 */, AMDGPU::V_CMPX_CLASS_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VGPR_32 }, },
  { 13506 /* v_cmpx_eq_f16 */, AMDGPU::V_CMPX_EQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 13520 /* v_cmpx_eq_f16_e32 */, AMDGPU::V_CMPX_EQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 13538 /* v_cmpx_eq_f32 */, AMDGPU::V_CMPX_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13538 /* v_cmpx_eq_f32 */, AMDGPU::V_CMPX_EQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13552 /* v_cmpx_eq_f32_e32 */, AMDGPU::V_CMPX_EQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13552 /* v_cmpx_eq_f32_e32 */, AMDGPU::V_CMPX_EQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13570 /* v_cmpx_eq_f64 */, AMDGPU::V_CMPX_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13570 /* v_cmpx_eq_f64 */, AMDGPU::V_CMPX_EQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13584 /* v_cmpx_eq_f64_e32 */, AMDGPU::V_CMPX_EQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13584 /* v_cmpx_eq_f64_e32 */, AMDGPU::V_CMPX_EQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13602 /* v_cmpx_eq_i16 */, AMDGPU::V_CMPX_EQ_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13616 /* v_cmpx_eq_i16_e32 */, AMDGPU::V_CMPX_EQ_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13634 /* v_cmpx_eq_i32 */, AMDGPU::V_CMPX_EQ_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13634 /* v_cmpx_eq_i32 */, AMDGPU::V_CMPX_EQ_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13648 /* v_cmpx_eq_i32_e32 */, AMDGPU::V_CMPX_EQ_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13648 /* v_cmpx_eq_i32_e32 */, AMDGPU::V_CMPX_EQ_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13666 /* v_cmpx_eq_i64 */, AMDGPU::V_CMPX_EQ_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13666 /* v_cmpx_eq_i64 */, AMDGPU::V_CMPX_EQ_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13680 /* v_cmpx_eq_i64_e32 */, AMDGPU::V_CMPX_EQ_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13680 /* v_cmpx_eq_i64_e32 */, AMDGPU::V_CMPX_EQ_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13698 /* v_cmpx_eq_u16 */, AMDGPU::V_CMPX_EQ_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13712 /* v_cmpx_eq_u16_e32 */, AMDGPU::V_CMPX_EQ_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13730 /* v_cmpx_eq_u32 */, AMDGPU::V_CMPX_EQ_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13730 /* v_cmpx_eq_u32 */, AMDGPU::V_CMPX_EQ_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13744 /* v_cmpx_eq_u32_e32 */, AMDGPU::V_CMPX_EQ_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13744 /* v_cmpx_eq_u32_e32 */, AMDGPU::V_CMPX_EQ_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13762 /* v_cmpx_eq_u64 */, AMDGPU::V_CMPX_EQ_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13762 /* v_cmpx_eq_u64 */, AMDGPU::V_CMPX_EQ_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13776 /* v_cmpx_eq_u64_e32 */, AMDGPU::V_CMPX_EQ_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13776 /* v_cmpx_eq_u64_e32 */, AMDGPU::V_CMPX_EQ_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13794 /* v_cmpx_f_f16 */, AMDGPU::V_CMPX_F_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 13807 /* v_cmpx_f_f16_e32 */, AMDGPU::V_CMPX_F_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 13824 /* v_cmpx_f_f32 */, AMDGPU::V_CMPX_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13824 /* v_cmpx_f_f32 */, AMDGPU::V_CMPX_F_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13837 /* v_cmpx_f_f32_e32 */, AMDGPU::V_CMPX_F_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13837 /* v_cmpx_f_f32_e32 */, AMDGPU::V_CMPX_F_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 13854 /* v_cmpx_f_f64 */, AMDGPU::V_CMPX_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13854 /* v_cmpx_f_f64 */, AMDGPU::V_CMPX_F_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13867 /* v_cmpx_f_f64_e32 */, AMDGPU::V_CMPX_F_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13867 /* v_cmpx_f_f64_e32 */, AMDGPU::V_CMPX_F_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 13884 /* v_cmpx_f_i16 */, AMDGPU::V_CMPX_F_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13897 /* v_cmpx_f_i16_e32 */, AMDGPU::V_CMPX_F_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13914 /* v_cmpx_f_i32 */, AMDGPU::V_CMPX_F_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13914 /* v_cmpx_f_i32 */, AMDGPU::V_CMPX_F_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13927 /* v_cmpx_f_i32_e32 */, AMDGPU::V_CMPX_F_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13927 /* v_cmpx_f_i32_e32 */, AMDGPU::V_CMPX_F_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 13944 /* v_cmpx_f_i64 */, AMDGPU::V_CMPX_F_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13944 /* v_cmpx_f_i64 */, AMDGPU::V_CMPX_F_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13957 /* v_cmpx_f_i64_e32 */, AMDGPU::V_CMPX_F_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13957 /* v_cmpx_f_i64_e32 */, AMDGPU::V_CMPX_F_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 13974 /* v_cmpx_f_u16 */, AMDGPU::V_CMPX_F_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 13987 /* v_cmpx_f_u16_e32 */, AMDGPU::V_CMPX_F_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14004 /* v_cmpx_f_u32 */, AMDGPU::V_CMPX_F_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14004 /* v_cmpx_f_u32 */, AMDGPU::V_CMPX_F_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14017 /* v_cmpx_f_u32_e32 */, AMDGPU::V_CMPX_F_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14017 /* v_cmpx_f_u32_e32 */, AMDGPU::V_CMPX_F_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14034 /* v_cmpx_f_u64 */, AMDGPU::V_CMPX_F_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14034 /* v_cmpx_f_u64 */, AMDGPU::V_CMPX_F_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14047 /* v_cmpx_f_u64_e32 */, AMDGPU::V_CMPX_F_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14047 /* v_cmpx_f_u64_e32 */, AMDGPU::V_CMPX_F_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14064 /* v_cmpx_ge_f16 */, AMDGPU::V_CMPX_GE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14078 /* v_cmpx_ge_f16_e32 */, AMDGPU::V_CMPX_GE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14096 /* v_cmpx_ge_f32 */, AMDGPU::V_CMPX_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14096 /* v_cmpx_ge_f32 */, AMDGPU::V_CMPX_GE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14110 /* v_cmpx_ge_f32_e32 */, AMDGPU::V_CMPX_GE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14110 /* v_cmpx_ge_f32_e32 */, AMDGPU::V_CMPX_GE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14128 /* v_cmpx_ge_f64 */, AMDGPU::V_CMPX_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14128 /* v_cmpx_ge_f64 */, AMDGPU::V_CMPX_GE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14142 /* v_cmpx_ge_f64_e32 */, AMDGPU::V_CMPX_GE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14142 /* v_cmpx_ge_f64_e32 */, AMDGPU::V_CMPX_GE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14160 /* v_cmpx_ge_i16 */, AMDGPU::V_CMPX_GE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14174 /* v_cmpx_ge_i16_e32 */, AMDGPU::V_CMPX_GE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14192 /* v_cmpx_ge_i32 */, AMDGPU::V_CMPX_GE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14192 /* v_cmpx_ge_i32 */, AMDGPU::V_CMPX_GE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14206 /* v_cmpx_ge_i32_e32 */, AMDGPU::V_CMPX_GE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14206 /* v_cmpx_ge_i32_e32 */, AMDGPU::V_CMPX_GE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14224 /* v_cmpx_ge_i64 */, AMDGPU::V_CMPX_GE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14224 /* v_cmpx_ge_i64 */, AMDGPU::V_CMPX_GE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14238 /* v_cmpx_ge_i64_e32 */, AMDGPU::V_CMPX_GE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14238 /* v_cmpx_ge_i64_e32 */, AMDGPU::V_CMPX_GE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14256 /* v_cmpx_ge_u16 */, AMDGPU::V_CMPX_GE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14270 /* v_cmpx_ge_u16_e32 */, AMDGPU::V_CMPX_GE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14288 /* v_cmpx_ge_u32 */, AMDGPU::V_CMPX_GE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14288 /* v_cmpx_ge_u32 */, AMDGPU::V_CMPX_GE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14302 /* v_cmpx_ge_u32_e32 */, AMDGPU::V_CMPX_GE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14302 /* v_cmpx_ge_u32_e32 */, AMDGPU::V_CMPX_GE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14320 /* v_cmpx_ge_u64 */, AMDGPU::V_CMPX_GE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14320 /* v_cmpx_ge_u64 */, AMDGPU::V_CMPX_GE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14334 /* v_cmpx_ge_u64_e32 */, AMDGPU::V_CMPX_GE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14334 /* v_cmpx_ge_u64_e32 */, AMDGPU::V_CMPX_GE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14352 /* v_cmpx_gt_f16 */, AMDGPU::V_CMPX_GT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14366 /* v_cmpx_gt_f16_e32 */, AMDGPU::V_CMPX_GT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14384 /* v_cmpx_gt_f32 */, AMDGPU::V_CMPX_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14384 /* v_cmpx_gt_f32 */, AMDGPU::V_CMPX_GT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14398 /* v_cmpx_gt_f32_e32 */, AMDGPU::V_CMPX_GT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14398 /* v_cmpx_gt_f32_e32 */, AMDGPU::V_CMPX_GT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14416 /* v_cmpx_gt_f64 */, AMDGPU::V_CMPX_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14416 /* v_cmpx_gt_f64 */, AMDGPU::V_CMPX_GT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14430 /* v_cmpx_gt_f64_e32 */, AMDGPU::V_CMPX_GT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14430 /* v_cmpx_gt_f64_e32 */, AMDGPU::V_CMPX_GT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14448 /* v_cmpx_gt_i16 */, AMDGPU::V_CMPX_GT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14462 /* v_cmpx_gt_i16_e32 */, AMDGPU::V_CMPX_GT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14480 /* v_cmpx_gt_i32 */, AMDGPU::V_CMPX_GT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14480 /* v_cmpx_gt_i32 */, AMDGPU::V_CMPX_GT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14494 /* v_cmpx_gt_i32_e32 */, AMDGPU::V_CMPX_GT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14494 /* v_cmpx_gt_i32_e32 */, AMDGPU::V_CMPX_GT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14512 /* v_cmpx_gt_i64 */, AMDGPU::V_CMPX_GT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14512 /* v_cmpx_gt_i64 */, AMDGPU::V_CMPX_GT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14526 /* v_cmpx_gt_i64_e32 */, AMDGPU::V_CMPX_GT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14526 /* v_cmpx_gt_i64_e32 */, AMDGPU::V_CMPX_GT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14544 /* v_cmpx_gt_u16 */, AMDGPU::V_CMPX_GT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14558 /* v_cmpx_gt_u16_e32 */, AMDGPU::V_CMPX_GT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14576 /* v_cmpx_gt_u32 */, AMDGPU::V_CMPX_GT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14576 /* v_cmpx_gt_u32 */, AMDGPU::V_CMPX_GT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14590 /* v_cmpx_gt_u32_e32 */, AMDGPU::V_CMPX_GT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14590 /* v_cmpx_gt_u32_e32 */, AMDGPU::V_CMPX_GT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14608 /* v_cmpx_gt_u64 */, AMDGPU::V_CMPX_GT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14608 /* v_cmpx_gt_u64 */, AMDGPU::V_CMPX_GT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14622 /* v_cmpx_gt_u64_e32 */, AMDGPU::V_CMPX_GT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14622 /* v_cmpx_gt_u64_e32 */, AMDGPU::V_CMPX_GT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14640 /* v_cmpx_le_f16 */, AMDGPU::V_CMPX_LE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14654 /* v_cmpx_le_f16_e32 */, AMDGPU::V_CMPX_LE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14672 /* v_cmpx_le_f32 */, AMDGPU::V_CMPX_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14672 /* v_cmpx_le_f32 */, AMDGPU::V_CMPX_LE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14686 /* v_cmpx_le_f32_e32 */, AMDGPU::V_CMPX_LE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14686 /* v_cmpx_le_f32_e32 */, AMDGPU::V_CMPX_LE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14704 /* v_cmpx_le_f64 */, AMDGPU::V_CMPX_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14704 /* v_cmpx_le_f64 */, AMDGPU::V_CMPX_LE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14718 /* v_cmpx_le_f64_e32 */, AMDGPU::V_CMPX_LE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14718 /* v_cmpx_le_f64_e32 */, AMDGPU::V_CMPX_LE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14736 /* v_cmpx_le_i16 */, AMDGPU::V_CMPX_LE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14750 /* v_cmpx_le_i16_e32 */, AMDGPU::V_CMPX_LE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14768 /* v_cmpx_le_i32 */, AMDGPU::V_CMPX_LE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14768 /* v_cmpx_le_i32 */, AMDGPU::V_CMPX_LE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14782 /* v_cmpx_le_i32_e32 */, AMDGPU::V_CMPX_LE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14782 /* v_cmpx_le_i32_e32 */, AMDGPU::V_CMPX_LE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14800 /* v_cmpx_le_i64 */, AMDGPU::V_CMPX_LE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14800 /* v_cmpx_le_i64 */, AMDGPU::V_CMPX_LE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14814 /* v_cmpx_le_i64_e32 */, AMDGPU::V_CMPX_LE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14814 /* v_cmpx_le_i64_e32 */, AMDGPU::V_CMPX_LE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14832 /* v_cmpx_le_u16 */, AMDGPU::V_CMPX_LE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14846 /* v_cmpx_le_u16_e32 */, AMDGPU::V_CMPX_LE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 14864 /* v_cmpx_le_u32 */, AMDGPU::V_CMPX_LE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14864 /* v_cmpx_le_u32 */, AMDGPU::V_CMPX_LE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14878 /* v_cmpx_le_u32_e32 */, AMDGPU::V_CMPX_LE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14878 /* v_cmpx_le_u32_e32 */, AMDGPU::V_CMPX_LE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 14896 /* v_cmpx_le_u64 */, AMDGPU::V_CMPX_LE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14896 /* v_cmpx_le_u64 */, AMDGPU::V_CMPX_LE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14910 /* v_cmpx_le_u64_e32 */, AMDGPU::V_CMPX_LE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14910 /* v_cmpx_le_u64_e32 */, AMDGPU::V_CMPX_LE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 14928 /* v_cmpx_lg_f16 */, AMDGPU::V_CMPX_LG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14942 /* v_cmpx_lg_f16_e32 */, AMDGPU::V_CMPX_LG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 14960 /* v_cmpx_lg_f32 */, AMDGPU::V_CMPX_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14960 /* v_cmpx_lg_f32 */, AMDGPU::V_CMPX_LG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14974 /* v_cmpx_lg_f32_e32 */, AMDGPU::V_CMPX_LG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14974 /* v_cmpx_lg_f32_e32 */, AMDGPU::V_CMPX_LG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 14992 /* v_cmpx_lg_f64 */, AMDGPU::V_CMPX_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 14992 /* v_cmpx_lg_f64 */, AMDGPU::V_CMPX_LG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15006 /* v_cmpx_lg_f64_e32 */, AMDGPU::V_CMPX_LG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15006 /* v_cmpx_lg_f64_e32 */, AMDGPU::V_CMPX_LG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15024 /* v_cmpx_lt_f16 */, AMDGPU::V_CMPX_LT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15038 /* v_cmpx_lt_f16_e32 */, AMDGPU::V_CMPX_LT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15056 /* v_cmpx_lt_f32 */, AMDGPU::V_CMPX_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15056 /* v_cmpx_lt_f32 */, AMDGPU::V_CMPX_LT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15070 /* v_cmpx_lt_f32_e32 */, AMDGPU::V_CMPX_LT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15070 /* v_cmpx_lt_f32_e32 */, AMDGPU::V_CMPX_LT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15088 /* v_cmpx_lt_f64 */, AMDGPU::V_CMPX_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15088 /* v_cmpx_lt_f64 */, AMDGPU::V_CMPX_LT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15102 /* v_cmpx_lt_f64_e32 */, AMDGPU::V_CMPX_LT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15102 /* v_cmpx_lt_f64_e32 */, AMDGPU::V_CMPX_LT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15120 /* v_cmpx_lt_i16 */, AMDGPU::V_CMPX_LT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 15134 /* v_cmpx_lt_i16_e32 */, AMDGPU::V_CMPX_LT_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 15152 /* v_cmpx_lt_i32 */, AMDGPU::V_CMPX_LT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15152 /* v_cmpx_lt_i32 */, AMDGPU::V_CMPX_LT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15166 /* v_cmpx_lt_i32_e32 */, AMDGPU::V_CMPX_LT_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15166 /* v_cmpx_lt_i32_e32 */, AMDGPU::V_CMPX_LT_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15184 /* v_cmpx_lt_i64 */, AMDGPU::V_CMPX_LT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15184 /* v_cmpx_lt_i64 */, AMDGPU::V_CMPX_LT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15198 /* v_cmpx_lt_i64_e32 */, AMDGPU::V_CMPX_LT_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15198 /* v_cmpx_lt_i64_e32 */, AMDGPU::V_CMPX_LT_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15216 /* v_cmpx_lt_u16 */, AMDGPU::V_CMPX_LT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 15230 /* v_cmpx_lt_u16_e32 */, AMDGPU::V_CMPX_LT_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 15248 /* v_cmpx_lt_u32 */, AMDGPU::V_CMPX_LT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15248 /* v_cmpx_lt_u32 */, AMDGPU::V_CMPX_LT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15262 /* v_cmpx_lt_u32_e32 */, AMDGPU::V_CMPX_LT_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15262 /* v_cmpx_lt_u32_e32 */, AMDGPU::V_CMPX_LT_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15280 /* v_cmpx_lt_u64 */, AMDGPU::V_CMPX_LT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15280 /* v_cmpx_lt_u64 */, AMDGPU::V_CMPX_LT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15294 /* v_cmpx_lt_u64_e32 */, AMDGPU::V_CMPX_LT_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15294 /* v_cmpx_lt_u64_e32 */, AMDGPU::V_CMPX_LT_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15312 /* v_cmpx_ne_i16 */, AMDGPU::V_CMPX_NE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 15326 /* v_cmpx_ne_i16_e32 */, AMDGPU::V_CMPX_NE_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 15344 /* v_cmpx_ne_i32 */, AMDGPU::V_CMPX_NE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15344 /* v_cmpx_ne_i32 */, AMDGPU::V_CMPX_NE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15358 /* v_cmpx_ne_i32_e32 */, AMDGPU::V_CMPX_NE_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15358 /* v_cmpx_ne_i32_e32 */, AMDGPU::V_CMPX_NE_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15376 /* v_cmpx_ne_i64 */, AMDGPU::V_CMPX_NE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15376 /* v_cmpx_ne_i64 */, AMDGPU::V_CMPX_NE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15390 /* v_cmpx_ne_i64_e32 */, AMDGPU::V_CMPX_NE_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15390 /* v_cmpx_ne_i64_e32 */, AMDGPU::V_CMPX_NE_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15408 /* v_cmpx_ne_u16 */, AMDGPU::V_CMPX_NE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 15422 /* v_cmpx_ne_u16_e32 */, AMDGPU::V_CMPX_NE_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 15440 /* v_cmpx_ne_u32 */, AMDGPU::V_CMPX_NE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15440 /* v_cmpx_ne_u32 */, AMDGPU::V_CMPX_NE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15454 /* v_cmpx_ne_u32_e32 */, AMDGPU::V_CMPX_NE_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15454 /* v_cmpx_ne_u32_e32 */, AMDGPU::V_CMPX_NE_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 15472 /* v_cmpx_ne_u64 */, AMDGPU::V_CMPX_NE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15472 /* v_cmpx_ne_u64 */, AMDGPU::V_CMPX_NE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15486 /* v_cmpx_ne_u64_e32 */, AMDGPU::V_CMPX_NE_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15486 /* v_cmpx_ne_u64_e32 */, AMDGPU::V_CMPX_NE_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 15504 /* v_cmpx_neq_f16 */, AMDGPU::V_CMPX_NEQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15519 /* v_cmpx_neq_f16_e32 */, AMDGPU::V_CMPX_NEQ_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15538 /* v_cmpx_neq_f32 */, AMDGPU::V_CMPX_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15538 /* v_cmpx_neq_f32 */, AMDGPU::V_CMPX_NEQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15553 /* v_cmpx_neq_f32_e32 */, AMDGPU::V_CMPX_NEQ_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15553 /* v_cmpx_neq_f32_e32 */, AMDGPU::V_CMPX_NEQ_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15572 /* v_cmpx_neq_f64 */, AMDGPU::V_CMPX_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15572 /* v_cmpx_neq_f64 */, AMDGPU::V_CMPX_NEQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15587 /* v_cmpx_neq_f64_e32 */, AMDGPU::V_CMPX_NEQ_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15587 /* v_cmpx_neq_f64_e32 */, AMDGPU::V_CMPX_NEQ_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15606 /* v_cmpx_nge_f16 */, AMDGPU::V_CMPX_NGE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15621 /* v_cmpx_nge_f16_e32 */, AMDGPU::V_CMPX_NGE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15640 /* v_cmpx_nge_f32 */, AMDGPU::V_CMPX_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15640 /* v_cmpx_nge_f32 */, AMDGPU::V_CMPX_NGE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15655 /* v_cmpx_nge_f32_e32 */, AMDGPU::V_CMPX_NGE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15655 /* v_cmpx_nge_f32_e32 */, AMDGPU::V_CMPX_NGE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15674 /* v_cmpx_nge_f64 */, AMDGPU::V_CMPX_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15674 /* v_cmpx_nge_f64 */, AMDGPU::V_CMPX_NGE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15689 /* v_cmpx_nge_f64_e32 */, AMDGPU::V_CMPX_NGE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15689 /* v_cmpx_nge_f64_e32 */, AMDGPU::V_CMPX_NGE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15708 /* v_cmpx_ngt_f16 */, AMDGPU::V_CMPX_NGT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15723 /* v_cmpx_ngt_f16_e32 */, AMDGPU::V_CMPX_NGT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15742 /* v_cmpx_ngt_f32 */, AMDGPU::V_CMPX_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15742 /* v_cmpx_ngt_f32 */, AMDGPU::V_CMPX_NGT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15757 /* v_cmpx_ngt_f32_e32 */, AMDGPU::V_CMPX_NGT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15757 /* v_cmpx_ngt_f32_e32 */, AMDGPU::V_CMPX_NGT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15776 /* v_cmpx_ngt_f64 */, AMDGPU::V_CMPX_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15776 /* v_cmpx_ngt_f64 */, AMDGPU::V_CMPX_NGT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15791 /* v_cmpx_ngt_f64_e32 */, AMDGPU::V_CMPX_NGT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15791 /* v_cmpx_ngt_f64_e32 */, AMDGPU::V_CMPX_NGT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15810 /* v_cmpx_nle_f16 */, AMDGPU::V_CMPX_NLE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15825 /* v_cmpx_nle_f16_e32 */, AMDGPU::V_CMPX_NLE_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15844 /* v_cmpx_nle_f32 */, AMDGPU::V_CMPX_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15844 /* v_cmpx_nle_f32 */, AMDGPU::V_CMPX_NLE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15859 /* v_cmpx_nle_f32_e32 */, AMDGPU::V_CMPX_NLE_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15859 /* v_cmpx_nle_f32_e32 */, AMDGPU::V_CMPX_NLE_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15878 /* v_cmpx_nle_f64 */, AMDGPU::V_CMPX_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15878 /* v_cmpx_nle_f64 */, AMDGPU::V_CMPX_NLE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15893 /* v_cmpx_nle_f64_e32 */, AMDGPU::V_CMPX_NLE_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15893 /* v_cmpx_nle_f64_e32 */, AMDGPU::V_CMPX_NLE_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15912 /* v_cmpx_nlg_f16 */, AMDGPU::V_CMPX_NLG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15927 /* v_cmpx_nlg_f16_e32 */, AMDGPU::V_CMPX_NLG_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 15946 /* v_cmpx_nlg_f32 */, AMDGPU::V_CMPX_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15946 /* v_cmpx_nlg_f32 */, AMDGPU::V_CMPX_NLG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15961 /* v_cmpx_nlg_f32_e32 */, AMDGPU::V_CMPX_NLG_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15961 /* v_cmpx_nlg_f32_e32 */, AMDGPU::V_CMPX_NLG_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 15980 /* v_cmpx_nlg_f64 */, AMDGPU::V_CMPX_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15980 /* v_cmpx_nlg_f64 */, AMDGPU::V_CMPX_NLG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15995 /* v_cmpx_nlg_f64_e32 */, AMDGPU::V_CMPX_NLG_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 15995 /* v_cmpx_nlg_f64_e32 */, AMDGPU::V_CMPX_NLG_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16014 /* v_cmpx_nlt_f16 */, AMDGPU::V_CMPX_NLT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 16029 /* v_cmpx_nlt_f16_e32 */, AMDGPU::V_CMPX_NLT_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 16048 /* v_cmpx_nlt_f32 */, AMDGPU::V_CMPX_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16048 /* v_cmpx_nlt_f32 */, AMDGPU::V_CMPX_NLT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16063 /* v_cmpx_nlt_f32_e32 */, AMDGPU::V_CMPX_NLT_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16063 /* v_cmpx_nlt_f32_e32 */, AMDGPU::V_CMPX_NLT_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16082 /* v_cmpx_nlt_f64 */, AMDGPU::V_CMPX_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16082 /* v_cmpx_nlt_f64 */, AMDGPU::V_CMPX_NLT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16097 /* v_cmpx_nlt_f64_e32 */, AMDGPU::V_CMPX_NLT_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16097 /* v_cmpx_nlt_f64_e32 */, AMDGPU::V_CMPX_NLT_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16116 /* v_cmpx_o_f16 */, AMDGPU::V_CMPX_O_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 16129 /* v_cmpx_o_f16_e32 */, AMDGPU::V_CMPX_O_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 16146 /* v_cmpx_o_f32 */, AMDGPU::V_CMPX_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16146 /* v_cmpx_o_f32 */, AMDGPU::V_CMPX_O_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16159 /* v_cmpx_o_f32_e32 */, AMDGPU::V_CMPX_O_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16159 /* v_cmpx_o_f32_e32 */, AMDGPU::V_CMPX_O_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16176 /* v_cmpx_o_f64 */, AMDGPU::V_CMPX_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16176 /* v_cmpx_o_f64 */, AMDGPU::V_CMPX_O_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16189 /* v_cmpx_o_f64_e32 */, AMDGPU::V_CMPX_O_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16189 /* v_cmpx_o_f64_e32 */, AMDGPU::V_CMPX_O_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16206 /* v_cmpx_t_i16 */, AMDGPU::V_CMPX_T_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 16219 /* v_cmpx_t_i16_e32 */, AMDGPU::V_CMPX_T_I16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 16236 /* v_cmpx_t_i32 */, AMDGPU::V_CMPX_T_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 16236 /* v_cmpx_t_i32 */, AMDGPU::V_CMPX_T_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 16249 /* v_cmpx_t_i32_e32 */, AMDGPU::V_CMPX_T_I32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 16249 /* v_cmpx_t_i32_e32 */, AMDGPU::V_CMPX_T_I32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 16266 /* v_cmpx_t_i64 */, AMDGPU::V_CMPX_T_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 16266 /* v_cmpx_t_i64 */, AMDGPU::V_CMPX_T_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 16279 /* v_cmpx_t_i64_e32 */, AMDGPU::V_CMPX_T_I64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 16279 /* v_cmpx_t_i64_e32 */, AMDGPU::V_CMPX_T_I64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 16296 /* v_cmpx_t_u16 */, AMDGPU::V_CMPX_T_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 16309 /* v_cmpx_t_u16_e32 */, AMDGPU::V_CMPX_T_U16_e32_vi, Convert__VSrcB161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcB16, MCK_VGPR_32 }, },
  { 16326 /* v_cmpx_t_u32 */, AMDGPU::V_CMPX_T_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 16326 /* v_cmpx_t_u32 */, AMDGPU::V_CMPX_T_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 16339 /* v_cmpx_t_u32_e32 */, AMDGPU::V_CMPX_T_U32_e32_si, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 16339 /* v_cmpx_t_u32_e32 */, AMDGPU::V_CMPX_T_U32_e32_vi, Convert__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 16356 /* v_cmpx_t_u64 */, AMDGPU::V_CMPX_T_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 16356 /* v_cmpx_t_u64 */, AMDGPU::V_CMPX_T_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 16369 /* v_cmpx_t_u64_e32 */, AMDGPU::V_CMPX_T_U64_e32_si, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 16369 /* v_cmpx_t_u64_e32 */, AMDGPU::V_CMPX_T_U64_e32_vi, Convert__VSrcB641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcB64, MCK_VReg_64 }, },
  { 16386 /* v_cmpx_tru_f16 */, AMDGPU::V_CMPX_TRU_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 16401 /* v_cmpx_tru_f16_e32 */, AMDGPU::V_CMPX_TRU_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 16420 /* v_cmpx_tru_f32 */, AMDGPU::V_CMPX_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16420 /* v_cmpx_tru_f32 */, AMDGPU::V_CMPX_TRU_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16435 /* v_cmpx_tru_f32_e32 */, AMDGPU::V_CMPX_TRU_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16435 /* v_cmpx_tru_f32_e32 */, AMDGPU::V_CMPX_TRU_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16454 /* v_cmpx_tru_f64 */, AMDGPU::V_CMPX_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16454 /* v_cmpx_tru_f64 */, AMDGPU::V_CMPX_TRU_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16469 /* v_cmpx_tru_f64_e32 */, AMDGPU::V_CMPX_TRU_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16469 /* v_cmpx_tru_f64_e32 */, AMDGPU::V_CMPX_TRU_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16488 /* v_cmpx_u_f16 */, AMDGPU::V_CMPX_U_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 16501 /* v_cmpx_u_f16_e32 */, AMDGPU::V_CMPX_U_F16_e32_vi, Convert__VSrcF161_1__Reg1_2, Feature_isVI, { MCK_VCC, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 16518 /* v_cmpx_u_f32 */, AMDGPU::V_CMPX_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16518 /* v_cmpx_u_f32 */, AMDGPU::V_CMPX_U_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16531 /* v_cmpx_u_f32_e32 */, AMDGPU::V_CMPX_U_F32_e32_si, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16531 /* v_cmpx_u_f32_e32 */, AMDGPU::V_CMPX_U_F32_e32_vi, Convert__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 16548 /* v_cmpx_u_f64 */, AMDGPU::V_CMPX_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16548 /* v_cmpx_u_f64 */, AMDGPU::V_CMPX_U_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16561 /* v_cmpx_u_f64_e32 */, AMDGPU::V_CMPX_U_F64_e32_si, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16561 /* v_cmpx_u_f64_e32 */, AMDGPU::V_CMPX_U_F64_e32_vi, Convert__VSrcF641_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VCC, MCK_VSrcF64, MCK_VReg_64 }, },
  { 16578 /* v_cndmask_b32 */, AMDGPU::V_CNDMASK_B32_e32_si, Convert__Reg1_0__VCSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 16578 /* v_cndmask_b32 */, AMDGPU::V_CNDMASK_B32_e32_vi, Convert__Reg1_0__VCSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 16592 /* v_cos_f16 */, AMDGPU::V_COS_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 16602 /* v_cos_f32 */, AMDGPU::V_COS_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 16602 /* v_cos_f32 */, AMDGPU::V_COS_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 16664 /* v_cvt_f16_f32 */, AMDGPU::V_CVT_F16_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 16664 /* v_cvt_f16_f32 */, AMDGPU::V_CVT_F16_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 16678 /* v_cvt_f16_i16 */, AMDGPU::V_CVT_F16_I16_e32_vi, Convert__Reg1_0__VSrcB161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16 }, },
  { 16692 /* v_cvt_f16_u16 */, AMDGPU::V_CVT_F16_U16_e32_vi, Convert__Reg1_0__VSrcB161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB16 }, },
  { 16706 /* v_cvt_f32_f16 */, AMDGPU::V_CVT_F32_F16_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16706 /* v_cvt_f32_f16 */, AMDGPU::V_CVT_F32_F16_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16720 /* v_cvt_f32_f64 */, AMDGPU::V_CVT_F32_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 16720 /* v_cvt_f32_f64 */, AMDGPU::V_CVT_F32_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 16734 /* v_cvt_f32_i32 */, AMDGPU::V_CVT_F32_I32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16734 /* v_cvt_f32_i32 */, AMDGPU::V_CVT_F32_I32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16748 /* v_cvt_f32_u32 */, AMDGPU::V_CVT_F32_U32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16748 /* v_cvt_f32_u32 */, AMDGPU::V_CVT_F32_U32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16762 /* v_cvt_f32_ubyte0 */, AMDGPU::V_CVT_F32_UBYTE0_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16762 /* v_cvt_f32_ubyte0 */, AMDGPU::V_CVT_F32_UBYTE0_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16779 /* v_cvt_f32_ubyte1 */, AMDGPU::V_CVT_F32_UBYTE1_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16779 /* v_cvt_f32_ubyte1 */, AMDGPU::V_CVT_F32_UBYTE1_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16796 /* v_cvt_f32_ubyte2 */, AMDGPU::V_CVT_F32_UBYTE2_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16796 /* v_cvt_f32_ubyte2 */, AMDGPU::V_CVT_F32_UBYTE2_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16813 /* v_cvt_f32_ubyte3 */, AMDGPU::V_CVT_F32_UBYTE3_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16813 /* v_cvt_f32_ubyte3 */, AMDGPU::V_CVT_F32_UBYTE3_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16830 /* v_cvt_f64_f32 */, AMDGPU::V_CVT_F64_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF32 }, },
  { 16830 /* v_cvt_f64_f32 */, AMDGPU::V_CVT_F64_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcF32 }, },
  { 16844 /* v_cvt_f64_i32 */, AMDGPU::V_CVT_F64_I32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcB32 }, },
  { 16844 /* v_cvt_f64_i32 */, AMDGPU::V_CVT_F64_I32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcB32 }, },
  { 16858 /* v_cvt_f64_u32 */, AMDGPU::V_CVT_F64_U32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcB32 }, },
  { 16858 /* v_cvt_f64_u32 */, AMDGPU::V_CVT_F64_U32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcB32 }, },
  { 16872 /* v_cvt_flr_i32_f32 */, AMDGPU::V_CVT_FLR_I32_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 16872 /* v_cvt_flr_i32_f32 */, AMDGPU::V_CVT_FLR_I32_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 16890 /* v_cvt_i16_f16 */, AMDGPU::V_CVT_I16_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 16904 /* v_cvt_i32_f32 */, AMDGPU::V_CVT_I32_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 16904 /* v_cvt_i32_f32 */, AMDGPU::V_CVT_I32_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 16918 /* v_cvt_i32_f64 */, AMDGPU::V_CVT_I32_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 16918 /* v_cvt_i32_f64 */, AMDGPU::V_CVT_I32_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 16932 /* v_cvt_off_f32_i4 */, AMDGPU::V_CVT_OFF_F32_I4_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16932 /* v_cvt_off_f32_i4 */, AMDGPU::V_CVT_OFF_F32_I4_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 16949 /* v_cvt_pk_i16_i32 */, AMDGPU::V_CVT_PK_I16_I32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 16966 /* v_cvt_pk_u16_u32 */, AMDGPU::V_CVT_PK_U16_U32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 16999 /* v_cvt_pkaccum_u8_f32 */, AMDGPU::V_CVT_PKACCUM_U8_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17020 /* v_cvt_pknorm_i16_f32 */, AMDGPU::V_CVT_PKNORM_I16_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17041 /* v_cvt_pknorm_u16_f32 */, AMDGPU::V_CVT_PKNORM_U16_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17062 /* v_cvt_pkrtz_f16_f32 */, AMDGPU::V_CVT_PKRTZ_F16_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17082 /* v_cvt_rpi_i32_f32 */, AMDGPU::V_CVT_RPI_I32_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17082 /* v_cvt_rpi_i32_f32 */, AMDGPU::V_CVT_RPI_I32_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17100 /* v_cvt_u16_f16 */, AMDGPU::V_CVT_U16_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 17114 /* v_cvt_u32_f32 */, AMDGPU::V_CVT_U32_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17114 /* v_cvt_u32_f32 */, AMDGPU::V_CVT_U32_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17128 /* v_cvt_u32_f64 */, AMDGPU::V_CVT_U32_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 17128 /* v_cvt_u32_f64 */, AMDGPU::V_CVT_U32_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 17252 /* v_exp_f16 */, AMDGPU::V_EXP_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 17262 /* v_exp_f32 */, AMDGPU::V_EXP_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17262 /* v_exp_f32 */, AMDGPU::V_EXP_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17272 /* v_exp_legacy_f32 */, AMDGPU::V_EXP_LEGACY_F32_e32_ci, Convert__Reg1_0__VSrcF321_1, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17272 /* v_exp_legacy_f32 */, AMDGPU::V_EXP_LEGACY_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17289 /* v_ffbh_i32 */, AMDGPU::V_FFBH_I32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 17289 /* v_ffbh_i32 */, AMDGPU::V_FFBH_I32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 17300 /* v_ffbh_u32 */, AMDGPU::V_FFBH_U32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 17300 /* v_ffbh_u32 */, AMDGPU::V_FFBH_U32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 17311 /* v_ffbl_b32 */, AMDGPU::V_FFBL_B32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 17311 /* v_ffbl_b32 */, AMDGPU::V_FFBL_B32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 17322 /* v_floor_f16 */, AMDGPU::V_FLOOR_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 17334 /* v_floor_f32 */, AMDGPU::V_FLOOR_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17334 /* v_floor_f32 */, AMDGPU::V_FLOOR_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17346 /* v_floor_f64 */, AMDGPU::V_FLOOR_F64_e32_ci, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 17346 /* v_floor_f64 */, AMDGPU::V_FLOOR_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 17388 /* v_fract_f16 */, AMDGPU::V_FRACT_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 17400 /* v_fract_f32 */, AMDGPU::V_FRACT_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17400 /* v_fract_f32 */, AMDGPU::V_FRACT_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17412 /* v_fract_f64 */, AMDGPU::V_FRACT_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 17412 /* v_fract_f64 */, AMDGPU::V_FRACT_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 17424 /* v_frexp_exp_i16_f16 */, AMDGPU::V_FREXP_EXP_I16_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 17444 /* v_frexp_exp_i32_f32 */, AMDGPU::V_FREXP_EXP_I32_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17444 /* v_frexp_exp_i32_f32 */, AMDGPU::V_FREXP_EXP_I32_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17464 /* v_frexp_exp_i32_f64 */, AMDGPU::V_FREXP_EXP_I32_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 17464 /* v_frexp_exp_i32_f64 */, AMDGPU::V_FREXP_EXP_I32_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF64 }, },
  { 17484 /* v_frexp_mant_f16 */, AMDGPU::V_FREXP_MANT_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 17501 /* v_frexp_mant_f32 */, AMDGPU::V_FREXP_MANT_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17501 /* v_frexp_mant_f32 */, AMDGPU::V_FREXP_MANT_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17518 /* v_frexp_mant_f64 */, AMDGPU::V_FREXP_MANT_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 17518 /* v_frexp_mant_f64 */, AMDGPU::V_FREXP_MANT_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 17535 /* v_interp_mov_f32 */, AMDGPU::V_INTERP_MOV_F32_si, Convert__Reg1_0__InterpSlot1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_InterpSlot, MCK_Attr, MCK_AttrChan }, },
  { 17535 /* v_interp_mov_f32 */, AMDGPU::V_INTERP_MOV_F32_vi, Convert__Reg1_0__InterpSlot1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_InterpSlot, MCK_Attr, MCK_AttrChan }, },
  { 17552 /* v_interp_p1_f32 */, AMDGPU::V_INTERP_P1_F32_16bank_si, Convert__Reg1_0__Reg1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_Attr, MCK_AttrChan }, },
  { 17552 /* v_interp_p1_f32 */, AMDGPU::V_INTERP_P1_F32_16bank_vi, Convert__Reg1_0__Reg1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_Attr, MCK_AttrChan }, },
  { 17552 /* v_interp_p1_f32 */, AMDGPU::V_INTERP_P1_F32_si, Convert__Reg1_0__Reg1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_Attr, MCK_AttrChan }, },
  { 17552 /* v_interp_p1_f32 */, AMDGPU::V_INTERP_P1_F32_vi, Convert__Reg1_0__Reg1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_Attr, MCK_AttrChan }, },
  { 17620 /* v_interp_p2_f32 */, AMDGPU::V_INTERP_P2_F32_si, Convert__Reg1_0__Tie0__Reg1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32, MCK_Attr, MCK_AttrChan }, },
  { 17620 /* v_interp_p2_f32 */, AMDGPU::V_INTERP_P2_F32_vi, Convert__Reg1_0__Tie0__Reg1_1__Attr1_2__AttrChan1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_Attr, MCK_AttrChan }, },
  { 17636 /* v_ldexp_f16 */, AMDGPU::V_LDEXP_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 17648 /* v_ldexp_f32 */, AMDGPU::V_LDEXP_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17682 /* v_log_clamp_f32 */, AMDGPU::V_LOG_CLAMP_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17698 /* v_log_f16 */, AMDGPU::V_LOG_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 17708 /* v_log_f32 */, AMDGPU::V_LOG_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17708 /* v_log_f32 */, AMDGPU::V_LOG_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17718 /* v_log_legacy_f32 */, AMDGPU::V_LOG_LEGACY_F32_e32_ci, Convert__Reg1_0__VSrcF321_1, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17718 /* v_log_legacy_f32 */, AMDGPU::V_LOG_LEGACY_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 17735 /* v_lshl_b32 */, AMDGPU::V_LSHL_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 17757 /* v_lshlrev_b16 */, AMDGPU::V_LSHLREV_B16_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 17771 /* v_lshlrev_b32 */, AMDGPU::V_LSHLREV_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 17771 /* v_lshlrev_b32 */, AMDGPU::V_LSHLREV_B32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 17799 /* v_lshr_b32 */, AMDGPU::V_LSHR_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 17821 /* v_lshrrev_b16 */, AMDGPU::V_LSHRREV_B16_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 17835 /* v_lshrrev_b32 */, AMDGPU::V_LSHRREV_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 17835 /* v_lshrrev_b32 */, AMDGPU::V_LSHRREV_B32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 17863 /* v_mac_f16 */, AMDGPU::V_MAC_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2__Tie0, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 17873 /* v_mac_f32 */, AMDGPU::V_MAC_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2__Tie0, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17873 /* v_mac_f32 */, AMDGPU::V_MAC_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2__Tie0, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 17883 /* v_mac_legacy_f32 */, AMDGPU::V_MAC_LEGACY_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18013 /* v_madak_f16 */, AMDGPU::V_MADAK_F16_vi, Convert__Reg1_0__VCSrcF321_1__Reg1_2__KImmFP161_3, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VGPR_32, MCK_KImmFP16 }, },
  { 18025 /* v_madak_f32 */, AMDGPU::V_MADAK_F32_si, Convert__Reg1_0__VCSrcF321_1__Reg1_2__KImmFP321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VGPR_32, MCK_KImmFP32 }, },
  { 18025 /* v_madak_f32 */, AMDGPU::V_MADAK_F32_vi, Convert__Reg1_0__VCSrcF321_1__Reg1_2__KImmFP321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VGPR_32, MCK_KImmFP32 }, },
  { 18037 /* v_madmk_f16 */, AMDGPU::V_MADMK_F16_vi, Convert__Reg1_0__VCSrcF321_1__KImmFP161_2__Reg1_3, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_KImmFP16, MCK_VGPR_32 }, },
  { 18049 /* v_madmk_f32 */, AMDGPU::V_MADMK_F32_si, Convert__Reg1_0__VCSrcF321_1__KImmFP321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_KImmFP32, MCK_VGPR_32 }, },
  { 18049 /* v_madmk_f32 */, AMDGPU::V_MADMK_F32_vi, Convert__Reg1_0__VCSrcF321_1__KImmFP321_2__Reg1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_KImmFP32, MCK_VGPR_32 }, },
  { 18094 /* v_max_f16 */, AMDGPU::V_MAX_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 18104 /* v_max_f32 */, AMDGPU::V_MAX_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18104 /* v_max_f32 */, AMDGPU::V_MAX_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18124 /* v_max_i16 */, AMDGPU::V_MAX_I16_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18134 /* v_max_i32 */, AMDGPU::V_MAX_I32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18134 /* v_max_i32 */, AMDGPU::V_MAX_I32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18144 /* v_max_legacy_f32 */, AMDGPU::V_MAX_LEGACY_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18161 /* v_max_u16 */, AMDGPU::V_MAX_U16_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18171 /* v_max_u32 */, AMDGPU::V_MAX_U32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18171 /* v_max_u32 */, AMDGPU::V_MAX_U32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18181 /* v_mbcnt_hi_u32_b32 */, AMDGPU::V_MBCNT_HI_U32_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18200 /* v_mbcnt_lo_u32_b32 */, AMDGPU::V_MBCNT_LO_U32_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18285 /* v_min_f16 */, AMDGPU::V_MIN_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 18295 /* v_min_f32 */, AMDGPU::V_MIN_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18295 /* v_min_f32 */, AMDGPU::V_MIN_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18315 /* v_min_i16 */, AMDGPU::V_MIN_I16_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18325 /* v_min_i32 */, AMDGPU::V_MIN_I32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18325 /* v_min_i32 */, AMDGPU::V_MIN_I32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18335 /* v_min_legacy_f32 */, AMDGPU::V_MIN_LEGACY_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18352 /* v_min_u16 */, AMDGPU::V_MIN_U16_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18362 /* v_min_u32 */, AMDGPU::V_MIN_U32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18362 /* v_min_u32 */, AMDGPU::V_MIN_U32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18372 /* v_mov_b32 */, AMDGPU::V_MOV_B32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 18372 /* v_mov_b32 */, AMDGPU::V_MOV_B32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 18382 /* v_mov_fed_b32 */, AMDGPU::V_MOV_FED_B32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 18396 /* v_movreld_b32 */, AMDGPU::V_MOVRELD_B32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_HasMovrel|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 18396 /* v_movreld_b32 */, AMDGPU::V_MOVRELD_B32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_HasMovrel|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 18410 /* v_movrels_b32 */, AMDGPU::V_MOVRELS_B32_e32_si, Convert__Reg1_0__Reg1_1, Feature_HasMovrel|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32 }, },
  { 18410 /* v_movrels_b32 */, AMDGPU::V_MOVRELS_B32_e32_vi, Convert__Reg1_0__Reg1_1, Feature_HasMovrel|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32 }, },
  { 18424 /* v_movrelsd_b32 */, AMDGPU::V_MOVRELSD_B32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_HasMovrel|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 18424 /* v_movrelsd_b32 */, AMDGPU::V_MOVRELSD_B32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_HasMovrel|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 18497 /* v_mul_f16 */, AMDGPU::V_MUL_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 18507 /* v_mul_f32 */, AMDGPU::V_MUL_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18507 /* v_mul_f32 */, AMDGPU::V_MUL_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18540 /* v_mul_hi_i32_i24 */, AMDGPU::V_MUL_HI_I32_I24_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18540 /* v_mul_hi_i32_i24 */, AMDGPU::V_MUL_HI_I32_I24_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18570 /* v_mul_hi_u32_u24 */, AMDGPU::V_MUL_HI_U32_U24_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18570 /* v_mul_hi_u32_u24 */, AMDGPU::V_MUL_HI_U32_U24_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18587 /* v_mul_i32_i24 */, AMDGPU::V_MUL_I32_I24_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18587 /* v_mul_i32_i24 */, AMDGPU::V_MUL_I32_I24_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18601 /* v_mul_legacy_f32 */, AMDGPU::V_MUL_LEGACY_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18601 /* v_mul_legacy_f32 */, AMDGPU::V_MUL_LEGACY_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 18631 /* v_mul_lo_u16 */, AMDGPU::V_MUL_LO_U16_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18657 /* v_mul_u32_u24 */, AMDGPU::V_MUL_U32_U24_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18657 /* v_mul_u32_u24 */, AMDGPU::V_MUL_U32_U24_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18684 /* v_nop */, AMDGPU::V_NOP_e32_si, Convert_NoOperands, Feature_isGCN|Feature_isSICI, {  }, },
  { 18684 /* v_nop */, AMDGPU::V_NOP_e32_vi, Convert_NoOperands, Feature_isGCN|Feature_isVI, {  }, },
  { 18690 /* v_not_b32 */, AMDGPU::V_NOT_B32_e32_si, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 18690 /* v_not_b32 */, AMDGPU::V_NOT_B32_e32_vi, Convert__Reg1_0__VSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 18700 /* v_or_b32 */, AMDGPU::V_OR_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18700 /* v_or_b32 */, AMDGPU::V_OR_B32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 18726 /* v_rcp_clamp_f32 */, AMDGPU::V_RCP_CLAMP_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 18742 /* v_rcp_clamp_f64 */, AMDGPU::V_RCP_CLAMP_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isSICI|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 18758 /* v_rcp_f16 */, AMDGPU::V_RCP_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 18768 /* v_rcp_f32 */, AMDGPU::V_RCP_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 18768 /* v_rcp_f32 */, AMDGPU::V_RCP_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 18778 /* v_rcp_f64 */, AMDGPU::V_RCP_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 18778 /* v_rcp_f64 */, AMDGPU::V_RCP_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 18788 /* v_rcp_iflag_f32 */, AMDGPU::V_RCP_IFLAG_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 18788 /* v_rcp_iflag_f32 */, AMDGPU::V_RCP_IFLAG_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 18804 /* v_rcp_legacy_f32 */, AMDGPU::V_RCP_LEGACY_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 18821 /* v_readfirstlane_b32 */, AMDGPU::V_READFIRSTLANE_B32, Convert__Reg1_0__Reg1_1, Feature_isGCN, { MCK_SReg_32, MCK_VGPR_32 }, },
  { 18841 /* v_readlane_b32 */, AMDGPU::V_READLANE_B32_si, Convert__Reg1_0__Reg1_1__SCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_32, MCK_VGPR_32, MCK_SCSrcB32 }, },
  { 18841 /* v_readlane_b32 */, AMDGPU::V_READLANE_B32_vi, Convert__Reg1_0__Reg1_1__SCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_32, MCK_VGPR_32, MCK_SCSrcB32 }, },
  { 18856 /* v_rndne_f16 */, AMDGPU::V_RNDNE_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 18868 /* v_rndne_f32 */, AMDGPU::V_RNDNE_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 18868 /* v_rndne_f32 */, AMDGPU::V_RNDNE_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 18880 /* v_rndne_f64 */, AMDGPU::V_RNDNE_F64_e32_ci, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 18880 /* v_rndne_f64 */, AMDGPU::V_RNDNE_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 18892 /* v_rsq_clamp_f32 */, AMDGPU::V_RSQ_CLAMP_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 18908 /* v_rsq_clamp_f64 */, AMDGPU::V_RSQ_CLAMP_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isSICI|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 18924 /* v_rsq_f16 */, AMDGPU::V_RSQ_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 18934 /* v_rsq_f32 */, AMDGPU::V_RSQ_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 18934 /* v_rsq_f32 */, AMDGPU::V_RSQ_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 18944 /* v_rsq_f64 */, AMDGPU::V_RSQ_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 18944 /* v_rsq_f64 */, AMDGPU::V_RSQ_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 18954 /* v_rsq_legacy_f32 */, AMDGPU::V_RSQ_LEGACY_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 19012 /* v_sin_f16 */, AMDGPU::V_SIN_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 19022 /* v_sin_f32 */, AMDGPU::V_SIN_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 19022 /* v_sin_f32 */, AMDGPU::V_SIN_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 19032 /* v_sqrt_f16 */, AMDGPU::V_SQRT_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 19043 /* v_sqrt_f32 */, AMDGPU::V_SQRT_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 19043 /* v_sqrt_f32 */, AMDGPU::V_SQRT_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 19054 /* v_sqrt_f64 */, AMDGPU::V_SQRT_F64_e32_si, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 19054 /* v_sqrt_f64 */, AMDGPU::V_SQRT_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 19065 /* v_sub_f16 */, AMDGPU::V_SUB_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 19075 /* v_sub_f32 */, AMDGPU::V_SUB_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19075 /* v_sub_f32 */, AMDGPU::V_SUB_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19085 /* v_sub_i32 */, AMDGPU::V_SUB_I32_e32_si, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19085 /* v_sub_i32 */, AMDGPU::V_SUB_I32_e32_vi, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19095 /* v_sub_u16 */, AMDGPU::V_SUB_U16_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19105 /* v_subb_u32 */, AMDGPU::V_SUBB_U32_e32_si, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 19105 /* v_subb_u32 */, AMDGPU::V_SUBB_U32_e32_vi, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 19116 /* v_subbrev_u32 */, AMDGPU::V_SUBBREV_U32_e32_si, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 19116 /* v_subbrev_u32 */, AMDGPU::V_SUBBREV_U32_e32_vi, Convert__Reg1_0__VCSrcB321_2__Reg1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VCSrcB32, MCK_VGPR_32, MCK_VCC }, },
  { 19130 /* v_subrev_f16 */, AMDGPU::V_SUBREV_F16_e32_vi, Convert__Reg1_0__VSrcF161_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16, MCK_VGPR_32 }, },
  { 19143 /* v_subrev_f32 */, AMDGPU::V_SUBREV_F32_e32_si, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19143 /* v_subrev_f32 */, AMDGPU::V_SUBREV_F32_e32_vi, Convert__Reg1_0__VSrcF321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32, MCK_VGPR_32 }, },
  { 19156 /* v_subrev_i32 */, AMDGPU::V_SUBREV_I32_e32_si, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19156 /* v_subrev_i32 */, AMDGPU::V_SUBREV_I32_e32_vi, Convert__Reg1_0__VSrcB321_2__Reg1_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19169 /* v_subrev_u16 */, AMDGPU::V_SUBREV_U16_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19199 /* v_trunc_f16 */, AMDGPU::V_TRUNC_F16_e32_vi, Convert__Reg1_0__VSrcF161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF16 }, },
  { 19211 /* v_trunc_f32 */, AMDGPU::V_TRUNC_F32_e32_si, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 19211 /* v_trunc_f32 */, AMDGPU::V_TRUNC_F32_e32_vi, Convert__Reg1_0__VSrcF321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcF32 }, },
  { 19223 /* v_trunc_f64 */, AMDGPU::V_TRUNC_F64_e32_ci, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 19223 /* v_trunc_f64 */, AMDGPU::V_TRUNC_F64_e32_vi, Convert__Reg1_0__VSrcF641_1, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VSrcF64 }, },
  { 19235 /* v_writelane_b32 */, AMDGPU::V_WRITELANE_B32_si, Convert__Reg1_0__Reg1_1__SCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_32, MCK_SCSrcB32 }, },
  { 19235 /* v_writelane_b32 */, AMDGPU::V_WRITELANE_B32_vi, Convert__Reg1_0__Reg1_1__SCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_SReg_32, MCK_SCSrcB32 }, },
  { 19251 /* v_xor_b32 */, AMDGPU::V_XOR_B32_e32_si, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
  { 19251 /* v_xor_b32 */, AMDGPU::V_XOR_B32_e32_vi, Convert__Reg1_0__VSrcB321_1__Reg1_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32, MCK_VGPR_32 }, },
};

static const MatchEntry MatchTable1[] = {
  { 0 /* CALL_FS */, AMDGPU::CF_CALL_FS_EG, Convert_NoOperands, 0, {  }, },
  { 0 /* CALL_FS */, AMDGPU::CF_CALL_FS_R600, Convert_NoOperands, 0, {  }, },
  { 8 /* CF_END */, AMDGPU::CF_END_CM, Convert_NoOperands, 0, {  }, },
  { 8 /* CF_END */, AMDGPU::CF_END_EG, Convert_NoOperands, 0, {  }, },
  { 8 /* CF_END */, AMDGPU::CF_END_R600, Convert_NoOperands, 0, {  }, },
  { 15 /* CONTINUE */, AMDGPU::CF_CONTINUE_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 15 /* CONTINUE */, AMDGPU::CF_CONTINUE_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 24 /* ELSE */, AMDGPU::CF_ELSE_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 24 /* ELSE */, AMDGPU::CF_ELSE_R600, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 29 /* END_LOOP */, AMDGPU::END_LOOP_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 29 /* END_LOOP */, AMDGPU::END_LOOP_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 38 /* INTERP_LOAD */, AMDGPU::INTERP_VEC_LOAD, Convert__Reg1_2__Imm1_0, 0, { MCK_Imm, MCK__COLON_, MCK_R600_Reg128 }, },
  { 50 /* INTERP_PAIR_XY */, AMDGPU::INTERP_PAIR_XY, Convert__Reg1_4__imm_95_0__Imm1_0__Reg1_1__Reg1_2, 0, { MCK_Imm, MCK_R600_TReg32_Y, MCK_R600_TReg32_X, MCK__COLON_, MCK_R600_TReg32_X, MCK_dst1 }, },
  { 65 /* INTERP_PAIR_ZW */, AMDGPU::INTERP_PAIR_ZW, Convert__Reg1_4__imm_95_0__Imm1_0__Reg1_1__Reg1_2, 0, { MCK_Imm, MCK_R600_TReg32_Y, MCK_R600_TReg32_X, MCK__COLON_, MCK_R600_TReg32_Z, MCK_dst1 }, },
  { 80 /* JUMP */, AMDGPU::CF_JUMP_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 80 /* JUMP */, AMDGPU::CF_JUMP_R600, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 85 /* LOOP_BREAK */, AMDGPU::LOOP_BREAK_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 85 /* LOOP_BREAK */, AMDGPU::LOOP_BREAK_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 96 /* LOOP_START_DX10 */, AMDGPU::WHILE_LOOP_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 96 /* LOOP_START_DX10 */, AMDGPU::WHILE_LOOP_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 112 /* MASK_WRITE */, AMDGPU::MASK_WRITE, Convert__Reg1_0, 0, { MCK_R600_Reg32 }, },
  { 123 /* PAD */, AMDGPU::PAD, Convert_NoOperands, 0, {  }, },
  { 127 /* POP */, AMDGPU::POP_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 127 /* POP */, AMDGPU::POP_R600, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 131 /* PUSH */, AMDGPU::CF_PUSH_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 136 /* PUSH_ELSE */, AMDGPU::CF_PUSH_ELSE_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 146 /* TEX */, AMDGPU::CF_TC_EG, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 146 /* TEX */, AMDGPU::CF_TC_R600, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 150 /* VTX */, AMDGPU::CF_VC_EG, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 150 /* VTX */, AMDGPU::CF_VC_R600, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 7984 /* v_add_f16 */, AMDGPU::V_ADD_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 7994 /* v_add_f32 */, AMDGPU::V_ADD_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 7994 /* v_add_f32 */, AMDGPU::V_ADD_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8004 /* v_add_f64 */, AMDGPU::V_ADD_F64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8004 /* v_add_f64 */, AMDGPU::V_ADD_F64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8014 /* v_add_i32 */, AMDGPU::V_ADD_I32_e64_si, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8014 /* v_add_i32 */, AMDGPU::V_ADD_I32_e64_vi, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8024 /* v_add_u16 */, AMDGPU::V_ADD_U16_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8034 /* v_addc_u32 */, AMDGPU::V_ADDC_U32_e64_si, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__SCSrcB641_4, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SCSrcB64 }, },
  { 8034 /* v_addc_u32 */, AMDGPU::V_ADDC_U32_e64_vi, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__SCSrcB641_4, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SCSrcB64 }, },
  { 8045 /* v_alignbit_b32 */, AMDGPU::V_ALIGNBIT_B32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8045 /* v_alignbit_b32 */, AMDGPU::V_ALIGNBIT_B32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8060 /* v_alignbyte_b32 */, AMDGPU::V_ALIGNBYTE_B32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8060 /* v_alignbyte_b32 */, AMDGPU::V_ALIGNBYTE_B32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8076 /* v_and_b32 */, AMDGPU::V_AND_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8076 /* v_and_b32 */, AMDGPU::V_AND_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8086 /* v_ashr_i32 */, AMDGPU::V_ASHR_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8097 /* v_ashr_i64 */, AMDGPU::V_ASHR_I64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2, Feature_isSICI|Feature_isSICI, { MCK_VReg_64, MCK_VCSrcB64, MCK_VCSrcB32 }, },
  { 8108 /* v_ashrrev_i16 */, AMDGPU::V_ASHRREV_I16_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8122 /* v_ashrrev_i32 */, AMDGPU::V_ASHRREV_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8122 /* v_ashrrev_i32 */, AMDGPU::V_ASHRREV_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8136 /* v_ashrrev_i64 */, AMDGPU::V_ASHRREV_I64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB641_2, Feature_isVI|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB32, MCK_VCSrcB64 }, },
  { 8150 /* v_bcnt_u32_b32 */, AMDGPU::V_BCNT_U32_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8150 /* v_bcnt_u32_b32 */, AMDGPU::V_BCNT_U32_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8165 /* v_bfe_i32 */, AMDGPU::V_BFE_I32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8165 /* v_bfe_i32 */, AMDGPU::V_BFE_I32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8175 /* v_bfe_u32 */, AMDGPU::V_BFE_U32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8175 /* v_bfe_u32 */, AMDGPU::V_BFE_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8185 /* v_bfi_b32 */, AMDGPU::V_BFI_B32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8185 /* v_bfi_b32 */, AMDGPU::V_BFI_B32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8195 /* v_bfm_b32 */, AMDGPU::V_BFM_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8195 /* v_bfm_b32 */, AMDGPU::V_BFM_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8205 /* v_bfrev_b32 */, AMDGPU::V_BFREV_B32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 8205 /* v_bfrev_b32 */, AMDGPU::V_BFREV_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 8217 /* v_ceil_f16 */, AMDGPU::V_CEIL_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8228 /* v_ceil_f32 */, AMDGPU::V_CEIL_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8228 /* v_ceil_f32 */, AMDGPU::V_CEIL_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8239 /* v_ceil_f64 */, AMDGPU::V_CEIL_F64_e64_ci, ConvertCustom_cvtVOP3_2_mod, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8239 /* v_ceil_f64 */, AMDGPU::V_CEIL_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8250 /* v_clrexcp */, AMDGPU::V_CLREXCP_e64_si, Convert_NoOperands, Feature_isGCN|Feature_isSICI, {  }, },
  { 8250 /* v_clrexcp */, AMDGPU::V_CLREXCP_e64_vi, Convert_NoOperands, Feature_isGCN|Feature_isVI, {  }, },
  { 8260 /* v_cmp_class_f16 */, AMDGPU::V_CMP_CLASS_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_VCSrcB32 }, },
  { 8296 /* v_cmp_class_f32 */, AMDGPU::V_CMP_CLASS_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_VCSrcB32 }, },
  { 8296 /* v_cmp_class_f32 */, AMDGPU::V_CMP_CLASS_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_VCSrcB32 }, },
  { 8332 /* v_cmp_class_f64 */, AMDGPU::V_CMP_CLASS_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_VCSrcB32 }, },
  { 8332 /* v_cmp_class_f64 */, AMDGPU::V_CMP_CLASS_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_VCSrcB32 }, },
  { 8368 /* v_cmp_eq_f16 */, AMDGPU::V_CMP_EQ_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8398 /* v_cmp_eq_f32 */, AMDGPU::V_CMP_EQ_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8398 /* v_cmp_eq_f32 */, AMDGPU::V_CMP_EQ_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8428 /* v_cmp_eq_f64 */, AMDGPU::V_CMP_EQ_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8428 /* v_cmp_eq_f64 */, AMDGPU::V_CMP_EQ_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8458 /* v_cmp_eq_i16 */, AMDGPU::V_CMP_EQ_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 8488 /* v_cmp_eq_i32 */, AMDGPU::V_CMP_EQ_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8488 /* v_cmp_eq_i32 */, AMDGPU::V_CMP_EQ_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8518 /* v_cmp_eq_i64 */, AMDGPU::V_CMP_EQ_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 8518 /* v_cmp_eq_i64 */, AMDGPU::V_CMP_EQ_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 8548 /* v_cmp_eq_u16 */, AMDGPU::V_CMP_EQ_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 8578 /* v_cmp_eq_u32 */, AMDGPU::V_CMP_EQ_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8578 /* v_cmp_eq_u32 */, AMDGPU::V_CMP_EQ_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8608 /* v_cmp_eq_u64 */, AMDGPU::V_CMP_EQ_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 8608 /* v_cmp_eq_u64 */, AMDGPU::V_CMP_EQ_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 8638 /* v_cmp_f_f16 */, AMDGPU::V_CMP_F_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8666 /* v_cmp_f_f32 */, AMDGPU::V_CMP_F_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8666 /* v_cmp_f_f32 */, AMDGPU::V_CMP_F_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8694 /* v_cmp_f_f64 */, AMDGPU::V_CMP_F_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8694 /* v_cmp_f_f64 */, AMDGPU::V_CMP_F_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8722 /* v_cmp_f_i16 */, AMDGPU::V_CMP_F_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 8750 /* v_cmp_f_i32 */, AMDGPU::V_CMP_F_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8750 /* v_cmp_f_i32 */, AMDGPU::V_CMP_F_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8778 /* v_cmp_f_i64 */, AMDGPU::V_CMP_F_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 8778 /* v_cmp_f_i64 */, AMDGPU::V_CMP_F_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 8806 /* v_cmp_f_u16 */, AMDGPU::V_CMP_F_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 8834 /* v_cmp_f_u32 */, AMDGPU::V_CMP_F_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8834 /* v_cmp_f_u32 */, AMDGPU::V_CMP_F_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 8862 /* v_cmp_f_u64 */, AMDGPU::V_CMP_F_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 8862 /* v_cmp_f_u64 */, AMDGPU::V_CMP_F_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 8890 /* v_cmp_ge_f16 */, AMDGPU::V_CMP_GE_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8920 /* v_cmp_ge_f32 */, AMDGPU::V_CMP_GE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8920 /* v_cmp_ge_f32 */, AMDGPU::V_CMP_GE_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8950 /* v_cmp_ge_f64 */, AMDGPU::V_CMP_GE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8950 /* v_cmp_ge_f64 */, AMDGPU::V_CMP_GE_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 8980 /* v_cmp_ge_i16 */, AMDGPU::V_CMP_GE_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 9010 /* v_cmp_ge_i32 */, AMDGPU::V_CMP_GE_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 9010 /* v_cmp_ge_i32 */, AMDGPU::V_CMP_GE_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 9040 /* v_cmp_ge_i64 */, AMDGPU::V_CMP_GE_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 9040 /* v_cmp_ge_i64 */, AMDGPU::V_CMP_GE_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 9070 /* v_cmp_ge_u16 */, AMDGPU::V_CMP_GE_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 9100 /* v_cmp_ge_u32 */, AMDGPU::V_CMP_GE_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 9100 /* v_cmp_ge_u32 */, AMDGPU::V_CMP_GE_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 9130 /* v_cmp_ge_u64 */, AMDGPU::V_CMP_GE_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 9130 /* v_cmp_ge_u64 */, AMDGPU::V_CMP_GE_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 9160 /* v_cmp_gt_f16 */, AMDGPU::V_CMP_GT_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9190 /* v_cmp_gt_f32 */, AMDGPU::V_CMP_GT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9190 /* v_cmp_gt_f32 */, AMDGPU::V_CMP_GT_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9220 /* v_cmp_gt_f64 */, AMDGPU::V_CMP_GT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9220 /* v_cmp_gt_f64 */, AMDGPU::V_CMP_GT_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9250 /* v_cmp_gt_i16 */, AMDGPU::V_CMP_GT_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 9280 /* v_cmp_gt_i32 */, AMDGPU::V_CMP_GT_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 9280 /* v_cmp_gt_i32 */, AMDGPU::V_CMP_GT_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 9310 /* v_cmp_gt_i64 */, AMDGPU::V_CMP_GT_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 9310 /* v_cmp_gt_i64 */, AMDGPU::V_CMP_GT_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 9340 /* v_cmp_gt_u16 */, AMDGPU::V_CMP_GT_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 9370 /* v_cmp_gt_u32 */, AMDGPU::V_CMP_GT_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 9370 /* v_cmp_gt_u32 */, AMDGPU::V_CMP_GT_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 9400 /* v_cmp_gt_u64 */, AMDGPU::V_CMP_GT_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 9400 /* v_cmp_gt_u64 */, AMDGPU::V_CMP_GT_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 9430 /* v_cmp_le_f16 */, AMDGPU::V_CMP_LE_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9460 /* v_cmp_le_f32 */, AMDGPU::V_CMP_LE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9460 /* v_cmp_le_f32 */, AMDGPU::V_CMP_LE_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9490 /* v_cmp_le_f64 */, AMDGPU::V_CMP_LE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9490 /* v_cmp_le_f64 */, AMDGPU::V_CMP_LE_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9520 /* v_cmp_le_i16 */, AMDGPU::V_CMP_LE_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 9550 /* v_cmp_le_i32 */, AMDGPU::V_CMP_LE_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 9550 /* v_cmp_le_i32 */, AMDGPU::V_CMP_LE_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 9580 /* v_cmp_le_i64 */, AMDGPU::V_CMP_LE_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 9580 /* v_cmp_le_i64 */, AMDGPU::V_CMP_LE_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 9610 /* v_cmp_le_u16 */, AMDGPU::V_CMP_LE_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 9640 /* v_cmp_le_u32 */, AMDGPU::V_CMP_LE_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 9640 /* v_cmp_le_u32 */, AMDGPU::V_CMP_LE_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 9670 /* v_cmp_le_u64 */, AMDGPU::V_CMP_LE_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 9670 /* v_cmp_le_u64 */, AMDGPU::V_CMP_LE_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 9700 /* v_cmp_lg_f16 */, AMDGPU::V_CMP_LG_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9730 /* v_cmp_lg_f32 */, AMDGPU::V_CMP_LG_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9730 /* v_cmp_lg_f32 */, AMDGPU::V_CMP_LG_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9760 /* v_cmp_lg_f64 */, AMDGPU::V_CMP_LG_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9760 /* v_cmp_lg_f64 */, AMDGPU::V_CMP_LG_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9790 /* v_cmp_lt_f16 */, AMDGPU::V_CMP_LT_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9820 /* v_cmp_lt_f32 */, AMDGPU::V_CMP_LT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9820 /* v_cmp_lt_f32 */, AMDGPU::V_CMP_LT_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9850 /* v_cmp_lt_f64 */, AMDGPU::V_CMP_LT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9850 /* v_cmp_lt_f64 */, AMDGPU::V_CMP_LT_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 9880 /* v_cmp_lt_i16 */, AMDGPU::V_CMP_LT_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 9910 /* v_cmp_lt_i32 */, AMDGPU::V_CMP_LT_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 9910 /* v_cmp_lt_i32 */, AMDGPU::V_CMP_LT_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 9940 /* v_cmp_lt_i64 */, AMDGPU::V_CMP_LT_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 9940 /* v_cmp_lt_i64 */, AMDGPU::V_CMP_LT_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 9970 /* v_cmp_lt_u16 */, AMDGPU::V_CMP_LT_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 10000 /* v_cmp_lt_u32 */, AMDGPU::V_CMP_LT_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 10000 /* v_cmp_lt_u32 */, AMDGPU::V_CMP_LT_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 10030 /* v_cmp_lt_u64 */, AMDGPU::V_CMP_LT_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 10030 /* v_cmp_lt_u64 */, AMDGPU::V_CMP_LT_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 10060 /* v_cmp_ne_i16 */, AMDGPU::V_CMP_NE_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 10090 /* v_cmp_ne_i32 */, AMDGPU::V_CMP_NE_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 10090 /* v_cmp_ne_i32 */, AMDGPU::V_CMP_NE_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 10120 /* v_cmp_ne_i64 */, AMDGPU::V_CMP_NE_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 10120 /* v_cmp_ne_i64 */, AMDGPU::V_CMP_NE_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 10150 /* v_cmp_ne_u16 */, AMDGPU::V_CMP_NE_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 10180 /* v_cmp_ne_u32 */, AMDGPU::V_CMP_NE_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 10180 /* v_cmp_ne_u32 */, AMDGPU::V_CMP_NE_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 10210 /* v_cmp_ne_u64 */, AMDGPU::V_CMP_NE_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 10210 /* v_cmp_ne_u64 */, AMDGPU::V_CMP_NE_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 10240 /* v_cmp_neq_f16 */, AMDGPU::V_CMP_NEQ_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10272 /* v_cmp_neq_f32 */, AMDGPU::V_CMP_NEQ_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10272 /* v_cmp_neq_f32 */, AMDGPU::V_CMP_NEQ_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10304 /* v_cmp_neq_f64 */, AMDGPU::V_CMP_NEQ_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10304 /* v_cmp_neq_f64 */, AMDGPU::V_CMP_NEQ_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10336 /* v_cmp_nge_f16 */, AMDGPU::V_CMP_NGE_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10368 /* v_cmp_nge_f32 */, AMDGPU::V_CMP_NGE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10368 /* v_cmp_nge_f32 */, AMDGPU::V_CMP_NGE_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10400 /* v_cmp_nge_f64 */, AMDGPU::V_CMP_NGE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10400 /* v_cmp_nge_f64 */, AMDGPU::V_CMP_NGE_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10432 /* v_cmp_ngt_f16 */, AMDGPU::V_CMP_NGT_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10464 /* v_cmp_ngt_f32 */, AMDGPU::V_CMP_NGT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10464 /* v_cmp_ngt_f32 */, AMDGPU::V_CMP_NGT_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10496 /* v_cmp_ngt_f64 */, AMDGPU::V_CMP_NGT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10496 /* v_cmp_ngt_f64 */, AMDGPU::V_CMP_NGT_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10528 /* v_cmp_nle_f16 */, AMDGPU::V_CMP_NLE_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10560 /* v_cmp_nle_f32 */, AMDGPU::V_CMP_NLE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10560 /* v_cmp_nle_f32 */, AMDGPU::V_CMP_NLE_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10592 /* v_cmp_nle_f64 */, AMDGPU::V_CMP_NLE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10592 /* v_cmp_nle_f64 */, AMDGPU::V_CMP_NLE_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10624 /* v_cmp_nlg_f16 */, AMDGPU::V_CMP_NLG_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10656 /* v_cmp_nlg_f32 */, AMDGPU::V_CMP_NLG_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10656 /* v_cmp_nlg_f32 */, AMDGPU::V_CMP_NLG_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10688 /* v_cmp_nlg_f64 */, AMDGPU::V_CMP_NLG_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10688 /* v_cmp_nlg_f64 */, AMDGPU::V_CMP_NLG_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10720 /* v_cmp_nlt_f16 */, AMDGPU::V_CMP_NLT_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10752 /* v_cmp_nlt_f32 */, AMDGPU::V_CMP_NLT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10752 /* v_cmp_nlt_f32 */, AMDGPU::V_CMP_NLT_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10784 /* v_cmp_nlt_f64 */, AMDGPU::V_CMP_NLT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10784 /* v_cmp_nlt_f64 */, AMDGPU::V_CMP_NLT_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10816 /* v_cmp_o_f16 */, AMDGPU::V_CMP_O_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10844 /* v_cmp_o_f32 */, AMDGPU::V_CMP_O_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10844 /* v_cmp_o_f32 */, AMDGPU::V_CMP_O_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10872 /* v_cmp_o_f64 */, AMDGPU::V_CMP_O_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10872 /* v_cmp_o_f64 */, AMDGPU::V_CMP_O_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 10900 /* v_cmp_t_i16 */, AMDGPU::V_CMP_T_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 10928 /* v_cmp_t_i32 */, AMDGPU::V_CMP_T_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 10928 /* v_cmp_t_i32 */, AMDGPU::V_CMP_T_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 10956 /* v_cmp_t_i64 */, AMDGPU::V_CMP_T_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 10956 /* v_cmp_t_i64 */, AMDGPU::V_CMP_T_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 10984 /* v_cmp_t_u16 */, AMDGPU::V_CMP_T_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 11012 /* v_cmp_t_u32 */, AMDGPU::V_CMP_T_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 11012 /* v_cmp_t_u32 */, AMDGPU::V_CMP_T_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 11040 /* v_cmp_t_u64 */, AMDGPU::V_CMP_T_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 11040 /* v_cmp_t_u64 */, AMDGPU::V_CMP_T_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 11068 /* v_cmp_tru_f16 */, AMDGPU::V_CMP_TRU_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11100 /* v_cmp_tru_f32 */, AMDGPU::V_CMP_TRU_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11100 /* v_cmp_tru_f32 */, AMDGPU::V_CMP_TRU_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11132 /* v_cmp_tru_f64 */, AMDGPU::V_CMP_TRU_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11132 /* v_cmp_tru_f64 */, AMDGPU::V_CMP_TRU_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11164 /* v_cmp_u_f16 */, AMDGPU::V_CMP_U_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11192 /* v_cmp_u_f32 */, AMDGPU::V_CMP_U_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11192 /* v_cmp_u_f32 */, AMDGPU::V_CMP_U_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11220 /* v_cmp_u_f64 */, AMDGPU::V_CMP_U_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11220 /* v_cmp_u_f64 */, AMDGPU::V_CMP_U_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11248 /* v_cmps_eq_f32 */, AMDGPU::V_CMPS_EQ_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11280 /* v_cmps_eq_f64 */, AMDGPU::V_CMPS_EQ_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11312 /* v_cmps_f_f32 */, AMDGPU::V_CMPS_F_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11342 /* v_cmps_f_f64 */, AMDGPU::V_CMPS_F_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11372 /* v_cmps_ge_f32 */, AMDGPU::V_CMPS_GE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11404 /* v_cmps_ge_f64 */, AMDGPU::V_CMPS_GE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11436 /* v_cmps_gt_f32 */, AMDGPU::V_CMPS_GT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11468 /* v_cmps_gt_f64 */, AMDGPU::V_CMPS_GT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11500 /* v_cmps_le_f32 */, AMDGPU::V_CMPS_LE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11532 /* v_cmps_le_f64 */, AMDGPU::V_CMPS_LE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11564 /* v_cmps_lg_f32 */, AMDGPU::V_CMPS_LG_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11596 /* v_cmps_lg_f64 */, AMDGPU::V_CMPS_LG_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11628 /* v_cmps_lt_f32 */, AMDGPU::V_CMPS_LT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11660 /* v_cmps_lt_f64 */, AMDGPU::V_CMPS_LT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11692 /* v_cmps_neq_f32 */, AMDGPU::V_CMPS_NEQ_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11726 /* v_cmps_neq_f64 */, AMDGPU::V_CMPS_NEQ_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11760 /* v_cmps_nge_f32 */, AMDGPU::V_CMPS_NGE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11794 /* v_cmps_nge_f64 */, AMDGPU::V_CMPS_NGE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11828 /* v_cmps_ngt_f32 */, AMDGPU::V_CMPS_NGT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11862 /* v_cmps_ngt_f64 */, AMDGPU::V_CMPS_NGT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11896 /* v_cmps_nle_f32 */, AMDGPU::V_CMPS_NLE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11930 /* v_cmps_nle_f64 */, AMDGPU::V_CMPS_NLE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11964 /* v_cmps_nlg_f32 */, AMDGPU::V_CMPS_NLG_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 11998 /* v_cmps_nlg_f64 */, AMDGPU::V_CMPS_NLG_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12032 /* v_cmps_nlt_f32 */, AMDGPU::V_CMPS_NLT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12066 /* v_cmps_nlt_f64 */, AMDGPU::V_CMPS_NLT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12100 /* v_cmps_o_f32 */, AMDGPU::V_CMPS_O_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12130 /* v_cmps_o_f64 */, AMDGPU::V_CMPS_O_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12160 /* v_cmps_tru_f32 */, AMDGPU::V_CMPS_TRU_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12194 /* v_cmps_tru_f64 */, AMDGPU::V_CMPS_TRU_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12228 /* v_cmps_u_f32 */, AMDGPU::V_CMPS_U_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12258 /* v_cmps_u_f64 */, AMDGPU::V_CMPS_U_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12288 /* v_cmpsx_eq_f32 */, AMDGPU::V_CMPSX_EQ_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12322 /* v_cmpsx_eq_f64 */, AMDGPU::V_CMPSX_EQ_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12356 /* v_cmpsx_f_f32 */, AMDGPU::V_CMPSX_F_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12388 /* v_cmpsx_f_f64 */, AMDGPU::V_CMPSX_F_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12420 /* v_cmpsx_ge_f32 */, AMDGPU::V_CMPSX_GE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12454 /* v_cmpsx_ge_f64 */, AMDGPU::V_CMPSX_GE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12488 /* v_cmpsx_gt_f32 */, AMDGPU::V_CMPSX_GT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12522 /* v_cmpsx_gt_f64 */, AMDGPU::V_CMPSX_GT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12556 /* v_cmpsx_le_f32 */, AMDGPU::V_CMPSX_LE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12590 /* v_cmpsx_le_f64 */, AMDGPU::V_CMPSX_LE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12624 /* v_cmpsx_lg_f32 */, AMDGPU::V_CMPSX_LG_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12658 /* v_cmpsx_lg_f64 */, AMDGPU::V_CMPSX_LG_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12692 /* v_cmpsx_lt_f32 */, AMDGPU::V_CMPSX_LT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12726 /* v_cmpsx_lt_f64 */, AMDGPU::V_CMPSX_LT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12760 /* v_cmpsx_neq_f32 */, AMDGPU::V_CMPSX_NEQ_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12796 /* v_cmpsx_neq_f64 */, AMDGPU::V_CMPSX_NEQ_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12832 /* v_cmpsx_nge_f32 */, AMDGPU::V_CMPSX_NGE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12868 /* v_cmpsx_nge_f64 */, AMDGPU::V_CMPSX_NGE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12904 /* v_cmpsx_ngt_f32 */, AMDGPU::V_CMPSX_NGT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12940 /* v_cmpsx_ngt_f64 */, AMDGPU::V_CMPSX_NGT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 12976 /* v_cmpsx_nle_f32 */, AMDGPU::V_CMPSX_NLE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13012 /* v_cmpsx_nle_f64 */, AMDGPU::V_CMPSX_NLE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13048 /* v_cmpsx_nlg_f32 */, AMDGPU::V_CMPSX_NLG_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13084 /* v_cmpsx_nlg_f64 */, AMDGPU::V_CMPSX_NLG_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13120 /* v_cmpsx_nlt_f32 */, AMDGPU::V_CMPSX_NLT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13156 /* v_cmpsx_nlt_f64 */, AMDGPU::V_CMPSX_NLT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13192 /* v_cmpsx_o_f32 */, AMDGPU::V_CMPSX_O_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13224 /* v_cmpsx_o_f64 */, AMDGPU::V_CMPSX_O_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13256 /* v_cmpsx_tru_f32 */, AMDGPU::V_CMPSX_TRU_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13292 /* v_cmpsx_tru_f64 */, AMDGPU::V_CMPSX_TRU_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13328 /* v_cmpsx_u_f32 */, AMDGPU::V_CMPSX_U_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13360 /* v_cmpsx_u_f64 */, AMDGPU::V_CMPSX_U_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13392 /* v_cmpx_class_f16 */, AMDGPU::V_CMPX_CLASS_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_VCSrcB32 }, },
  { 13430 /* v_cmpx_class_f32 */, AMDGPU::V_CMPX_CLASS_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_VCSrcB32 }, },
  { 13430 /* v_cmpx_class_f32 */, AMDGPU::V_CMPX_CLASS_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_VCSrcB32 }, },
  { 13468 /* v_cmpx_class_f64 */, AMDGPU::V_CMPX_CLASS_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_VCSrcB32 }, },
  { 13468 /* v_cmpx_class_f64 */, AMDGPU::V_CMPX_CLASS_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_VCSrcB32 }, },
  { 13506 /* v_cmpx_eq_f16 */, AMDGPU::V_CMPX_EQ_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13538 /* v_cmpx_eq_f32 */, AMDGPU::V_CMPX_EQ_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13538 /* v_cmpx_eq_f32 */, AMDGPU::V_CMPX_EQ_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13570 /* v_cmpx_eq_f64 */, AMDGPU::V_CMPX_EQ_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13570 /* v_cmpx_eq_f64 */, AMDGPU::V_CMPX_EQ_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13602 /* v_cmpx_eq_i16 */, AMDGPU::V_CMPX_EQ_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 13634 /* v_cmpx_eq_i32 */, AMDGPU::V_CMPX_EQ_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13634 /* v_cmpx_eq_i32 */, AMDGPU::V_CMPX_EQ_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13666 /* v_cmpx_eq_i64 */, AMDGPU::V_CMPX_EQ_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13666 /* v_cmpx_eq_i64 */, AMDGPU::V_CMPX_EQ_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13698 /* v_cmpx_eq_u16 */, AMDGPU::V_CMPX_EQ_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 13730 /* v_cmpx_eq_u32 */, AMDGPU::V_CMPX_EQ_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13730 /* v_cmpx_eq_u32 */, AMDGPU::V_CMPX_EQ_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13762 /* v_cmpx_eq_u64 */, AMDGPU::V_CMPX_EQ_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13762 /* v_cmpx_eq_u64 */, AMDGPU::V_CMPX_EQ_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13794 /* v_cmpx_f_f16 */, AMDGPU::V_CMPX_F_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13824 /* v_cmpx_f_f32 */, AMDGPU::V_CMPX_F_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13824 /* v_cmpx_f_f32 */, AMDGPU::V_CMPX_F_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13854 /* v_cmpx_f_f64 */, AMDGPU::V_CMPX_F_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13854 /* v_cmpx_f_f64 */, AMDGPU::V_CMPX_F_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 13884 /* v_cmpx_f_i16 */, AMDGPU::V_CMPX_F_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 13914 /* v_cmpx_f_i32 */, AMDGPU::V_CMPX_F_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13914 /* v_cmpx_f_i32 */, AMDGPU::V_CMPX_F_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 13944 /* v_cmpx_f_i64 */, AMDGPU::V_CMPX_F_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13944 /* v_cmpx_f_i64 */, AMDGPU::V_CMPX_F_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 13974 /* v_cmpx_f_u16 */, AMDGPU::V_CMPX_F_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 14004 /* v_cmpx_f_u32 */, AMDGPU::V_CMPX_F_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14004 /* v_cmpx_f_u32 */, AMDGPU::V_CMPX_F_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14034 /* v_cmpx_f_u64 */, AMDGPU::V_CMPX_F_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14034 /* v_cmpx_f_u64 */, AMDGPU::V_CMPX_F_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14064 /* v_cmpx_ge_f16 */, AMDGPU::V_CMPX_GE_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14096 /* v_cmpx_ge_f32 */, AMDGPU::V_CMPX_GE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14096 /* v_cmpx_ge_f32 */, AMDGPU::V_CMPX_GE_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14128 /* v_cmpx_ge_f64 */, AMDGPU::V_CMPX_GE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14128 /* v_cmpx_ge_f64 */, AMDGPU::V_CMPX_GE_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14160 /* v_cmpx_ge_i16 */, AMDGPU::V_CMPX_GE_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 14192 /* v_cmpx_ge_i32 */, AMDGPU::V_CMPX_GE_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14192 /* v_cmpx_ge_i32 */, AMDGPU::V_CMPX_GE_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14224 /* v_cmpx_ge_i64 */, AMDGPU::V_CMPX_GE_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14224 /* v_cmpx_ge_i64 */, AMDGPU::V_CMPX_GE_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14256 /* v_cmpx_ge_u16 */, AMDGPU::V_CMPX_GE_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 14288 /* v_cmpx_ge_u32 */, AMDGPU::V_CMPX_GE_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14288 /* v_cmpx_ge_u32 */, AMDGPU::V_CMPX_GE_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14320 /* v_cmpx_ge_u64 */, AMDGPU::V_CMPX_GE_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14320 /* v_cmpx_ge_u64 */, AMDGPU::V_CMPX_GE_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14352 /* v_cmpx_gt_f16 */, AMDGPU::V_CMPX_GT_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14384 /* v_cmpx_gt_f32 */, AMDGPU::V_CMPX_GT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14384 /* v_cmpx_gt_f32 */, AMDGPU::V_CMPX_GT_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14416 /* v_cmpx_gt_f64 */, AMDGPU::V_CMPX_GT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14416 /* v_cmpx_gt_f64 */, AMDGPU::V_CMPX_GT_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14448 /* v_cmpx_gt_i16 */, AMDGPU::V_CMPX_GT_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 14480 /* v_cmpx_gt_i32 */, AMDGPU::V_CMPX_GT_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14480 /* v_cmpx_gt_i32 */, AMDGPU::V_CMPX_GT_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14512 /* v_cmpx_gt_i64 */, AMDGPU::V_CMPX_GT_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14512 /* v_cmpx_gt_i64 */, AMDGPU::V_CMPX_GT_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14544 /* v_cmpx_gt_u16 */, AMDGPU::V_CMPX_GT_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 14576 /* v_cmpx_gt_u32 */, AMDGPU::V_CMPX_GT_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14576 /* v_cmpx_gt_u32 */, AMDGPU::V_CMPX_GT_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14608 /* v_cmpx_gt_u64 */, AMDGPU::V_CMPX_GT_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14608 /* v_cmpx_gt_u64 */, AMDGPU::V_CMPX_GT_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14640 /* v_cmpx_le_f16 */, AMDGPU::V_CMPX_LE_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14672 /* v_cmpx_le_f32 */, AMDGPU::V_CMPX_LE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14672 /* v_cmpx_le_f32 */, AMDGPU::V_CMPX_LE_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14704 /* v_cmpx_le_f64 */, AMDGPU::V_CMPX_LE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14704 /* v_cmpx_le_f64 */, AMDGPU::V_CMPX_LE_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14736 /* v_cmpx_le_i16 */, AMDGPU::V_CMPX_LE_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 14768 /* v_cmpx_le_i32 */, AMDGPU::V_CMPX_LE_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14768 /* v_cmpx_le_i32 */, AMDGPU::V_CMPX_LE_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14800 /* v_cmpx_le_i64 */, AMDGPU::V_CMPX_LE_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14800 /* v_cmpx_le_i64 */, AMDGPU::V_CMPX_LE_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14832 /* v_cmpx_le_u16 */, AMDGPU::V_CMPX_LE_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 14864 /* v_cmpx_le_u32 */, AMDGPU::V_CMPX_LE_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14864 /* v_cmpx_le_u32 */, AMDGPU::V_CMPX_LE_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 14896 /* v_cmpx_le_u64 */, AMDGPU::V_CMPX_LE_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14896 /* v_cmpx_le_u64 */, AMDGPU::V_CMPX_LE_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 14928 /* v_cmpx_lg_f16 */, AMDGPU::V_CMPX_LG_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14960 /* v_cmpx_lg_f32 */, AMDGPU::V_CMPX_LG_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14960 /* v_cmpx_lg_f32 */, AMDGPU::V_CMPX_LG_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14992 /* v_cmpx_lg_f64 */, AMDGPU::V_CMPX_LG_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 14992 /* v_cmpx_lg_f64 */, AMDGPU::V_CMPX_LG_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15024 /* v_cmpx_lt_f16 */, AMDGPU::V_CMPX_LT_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15056 /* v_cmpx_lt_f32 */, AMDGPU::V_CMPX_LT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15056 /* v_cmpx_lt_f32 */, AMDGPU::V_CMPX_LT_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15088 /* v_cmpx_lt_f64 */, AMDGPU::V_CMPX_LT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15088 /* v_cmpx_lt_f64 */, AMDGPU::V_CMPX_LT_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15120 /* v_cmpx_lt_i16 */, AMDGPU::V_CMPX_LT_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 15152 /* v_cmpx_lt_i32 */, AMDGPU::V_CMPX_LT_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 15152 /* v_cmpx_lt_i32 */, AMDGPU::V_CMPX_LT_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 15184 /* v_cmpx_lt_i64 */, AMDGPU::V_CMPX_LT_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 15184 /* v_cmpx_lt_i64 */, AMDGPU::V_CMPX_LT_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 15216 /* v_cmpx_lt_u16 */, AMDGPU::V_CMPX_LT_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 15248 /* v_cmpx_lt_u32 */, AMDGPU::V_CMPX_LT_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 15248 /* v_cmpx_lt_u32 */, AMDGPU::V_CMPX_LT_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 15280 /* v_cmpx_lt_u64 */, AMDGPU::V_CMPX_LT_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 15280 /* v_cmpx_lt_u64 */, AMDGPU::V_CMPX_LT_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 15312 /* v_cmpx_ne_i16 */, AMDGPU::V_CMPX_NE_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 15344 /* v_cmpx_ne_i32 */, AMDGPU::V_CMPX_NE_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 15344 /* v_cmpx_ne_i32 */, AMDGPU::V_CMPX_NE_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 15376 /* v_cmpx_ne_i64 */, AMDGPU::V_CMPX_NE_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 15376 /* v_cmpx_ne_i64 */, AMDGPU::V_CMPX_NE_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 15408 /* v_cmpx_ne_u16 */, AMDGPU::V_CMPX_NE_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 15440 /* v_cmpx_ne_u32 */, AMDGPU::V_CMPX_NE_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 15440 /* v_cmpx_ne_u32 */, AMDGPU::V_CMPX_NE_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 15472 /* v_cmpx_ne_u64 */, AMDGPU::V_CMPX_NE_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 15472 /* v_cmpx_ne_u64 */, AMDGPU::V_CMPX_NE_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 15504 /* v_cmpx_neq_f16 */, AMDGPU::V_CMPX_NEQ_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15538 /* v_cmpx_neq_f32 */, AMDGPU::V_CMPX_NEQ_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15538 /* v_cmpx_neq_f32 */, AMDGPU::V_CMPX_NEQ_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15572 /* v_cmpx_neq_f64 */, AMDGPU::V_CMPX_NEQ_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15572 /* v_cmpx_neq_f64 */, AMDGPU::V_CMPX_NEQ_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15606 /* v_cmpx_nge_f16 */, AMDGPU::V_CMPX_NGE_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15640 /* v_cmpx_nge_f32 */, AMDGPU::V_CMPX_NGE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15640 /* v_cmpx_nge_f32 */, AMDGPU::V_CMPX_NGE_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15674 /* v_cmpx_nge_f64 */, AMDGPU::V_CMPX_NGE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15674 /* v_cmpx_nge_f64 */, AMDGPU::V_CMPX_NGE_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15708 /* v_cmpx_ngt_f16 */, AMDGPU::V_CMPX_NGT_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15742 /* v_cmpx_ngt_f32 */, AMDGPU::V_CMPX_NGT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15742 /* v_cmpx_ngt_f32 */, AMDGPU::V_CMPX_NGT_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15776 /* v_cmpx_ngt_f64 */, AMDGPU::V_CMPX_NGT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15776 /* v_cmpx_ngt_f64 */, AMDGPU::V_CMPX_NGT_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15810 /* v_cmpx_nle_f16 */, AMDGPU::V_CMPX_NLE_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15844 /* v_cmpx_nle_f32 */, AMDGPU::V_CMPX_NLE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15844 /* v_cmpx_nle_f32 */, AMDGPU::V_CMPX_NLE_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15878 /* v_cmpx_nle_f64 */, AMDGPU::V_CMPX_NLE_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15878 /* v_cmpx_nle_f64 */, AMDGPU::V_CMPX_NLE_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15912 /* v_cmpx_nlg_f16 */, AMDGPU::V_CMPX_NLG_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15946 /* v_cmpx_nlg_f32 */, AMDGPU::V_CMPX_NLG_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15946 /* v_cmpx_nlg_f32 */, AMDGPU::V_CMPX_NLG_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15980 /* v_cmpx_nlg_f64 */, AMDGPU::V_CMPX_NLG_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 15980 /* v_cmpx_nlg_f64 */, AMDGPU::V_CMPX_NLG_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16014 /* v_cmpx_nlt_f16 */, AMDGPU::V_CMPX_NLT_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16048 /* v_cmpx_nlt_f32 */, AMDGPU::V_CMPX_NLT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16048 /* v_cmpx_nlt_f32 */, AMDGPU::V_CMPX_NLT_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16082 /* v_cmpx_nlt_f64 */, AMDGPU::V_CMPX_NLT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16082 /* v_cmpx_nlt_f64 */, AMDGPU::V_CMPX_NLT_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16116 /* v_cmpx_o_f16 */, AMDGPU::V_CMPX_O_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16146 /* v_cmpx_o_f32 */, AMDGPU::V_CMPX_O_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16146 /* v_cmpx_o_f32 */, AMDGPU::V_CMPX_O_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16176 /* v_cmpx_o_f64 */, AMDGPU::V_CMPX_O_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16176 /* v_cmpx_o_f64 */, AMDGPU::V_CMPX_O_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16206 /* v_cmpx_t_i16 */, AMDGPU::V_CMPX_T_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 16236 /* v_cmpx_t_i32 */, AMDGPU::V_CMPX_T_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 16236 /* v_cmpx_t_i32 */, AMDGPU::V_CMPX_T_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 16266 /* v_cmpx_t_i64 */, AMDGPU::V_CMPX_T_I64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 16266 /* v_cmpx_t_i64 */, AMDGPU::V_CMPX_T_I64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 16296 /* v_cmpx_t_u16 */, AMDGPU::V_CMPX_T_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1__VCSrcB161_2, Feature_isVI, { MCK_SReg_64, MCK_VCSrcB16, MCK_VCSrcB16 }, },
  { 16326 /* v_cmpx_t_u32 */, AMDGPU::V_CMPX_T_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 16326 /* v_cmpx_t_u32 */, AMDGPU::V_CMPX_T_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 16356 /* v_cmpx_t_u64 */, AMDGPU::V_CMPX_T_U64_e64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 16356 /* v_cmpx_t_u64 */, AMDGPU::V_CMPX_T_U64_e64_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB641_2, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_VCSrcB64, MCK_VCSrcB64 }, },
  { 16386 /* v_cmpx_tru_f16 */, AMDGPU::V_CMPX_TRU_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16420 /* v_cmpx_tru_f32 */, AMDGPU::V_CMPX_TRU_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16420 /* v_cmpx_tru_f32 */, AMDGPU::V_CMPX_TRU_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16454 /* v_cmpx_tru_f64 */, AMDGPU::V_CMPX_TRU_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16454 /* v_cmpx_tru_f64 */, AMDGPU::V_CMPX_TRU_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16488 /* v_cmpx_u_f16 */, AMDGPU::V_CMPX_U_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16518 /* v_cmpx_u_f32 */, AMDGPU::V_CMPX_U_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16518 /* v_cmpx_u_f32 */, AMDGPU::V_CMPX_U_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16548 /* v_cmpx_u_f64 */, AMDGPU::V_CMPX_U_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16548 /* v_cmpx_u_f64 */, AMDGPU::V_CMPX_U_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_SReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16578 /* v_cndmask_b32 */, AMDGPU::V_CNDMASK_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__SCSrcB641_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SCSrcB64 }, },
  { 16578 /* v_cndmask_b32 */, AMDGPU::V_CNDMASK_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__SCSrcB641_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SCSrcB64 }, },
  { 16592 /* v_cos_f16 */, AMDGPU::V_COS_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16602 /* v_cos_f32 */, AMDGPU::V_COS_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16602 /* v_cos_f32 */, AMDGPU::V_COS_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16612 /* v_cubeid_f32 */, AMDGPU::V_CUBEID_F32_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16612 /* v_cubeid_f32 */, AMDGPU::V_CUBEID_F32_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16625 /* v_cubema_f32 */, AMDGPU::V_CUBEMA_F32_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16625 /* v_cubema_f32 */, AMDGPU::V_CUBEMA_F32_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16638 /* v_cubesc_f32 */, AMDGPU::V_CUBESC_F32_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16638 /* v_cubesc_f32 */, AMDGPU::V_CUBESC_F32_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16651 /* v_cubetc_f32 */, AMDGPU::V_CUBETC_F32_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16651 /* v_cubetc_f32 */, AMDGPU::V_CUBETC_F32_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16664 /* v_cvt_f16_f32 */, AMDGPU::V_CVT_F16_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16664 /* v_cvt_f16_f32 */, AMDGPU::V_CVT_F16_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16678 /* v_cvt_f16_i16 */, AMDGPU::V_CVT_F16_I16_e64_vi, Convert__Reg1_0__VCSrcB161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16 }, },
  { 16692 /* v_cvt_f16_u16 */, AMDGPU::V_CVT_F16_U16_e64_vi, Convert__Reg1_0__VCSrcB161_1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB16 }, },
  { 16706 /* v_cvt_f32_f16 */, AMDGPU::V_CVT_F32_F16_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16706 /* v_cvt_f32_f16 */, AMDGPU::V_CVT_F32_F16_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16720 /* v_cvt_f32_f64 */, AMDGPU::V_CVT_F32_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16720 /* v_cvt_f32_f64 */, AMDGPU::V_CVT_F32_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16734 /* v_cvt_f32_i32 */, AMDGPU::V_CVT_F32_I32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16734 /* v_cvt_f32_i32 */, AMDGPU::V_CVT_F32_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16748 /* v_cvt_f32_u32 */, AMDGPU::V_CVT_F32_U32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16748 /* v_cvt_f32_u32 */, AMDGPU::V_CVT_F32_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16762 /* v_cvt_f32_ubyte0 */, AMDGPU::V_CVT_F32_UBYTE0_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16762 /* v_cvt_f32_ubyte0 */, AMDGPU::V_CVT_F32_UBYTE0_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16779 /* v_cvt_f32_ubyte1 */, AMDGPU::V_CVT_F32_UBYTE1_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16779 /* v_cvt_f32_ubyte1 */, AMDGPU::V_CVT_F32_UBYTE1_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16796 /* v_cvt_f32_ubyte2 */, AMDGPU::V_CVT_F32_UBYTE2_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16796 /* v_cvt_f32_ubyte2 */, AMDGPU::V_CVT_F32_UBYTE2_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16813 /* v_cvt_f32_ubyte3 */, AMDGPU::V_CVT_F32_UBYTE3_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16813 /* v_cvt_f32_ubyte3 */, AMDGPU::V_CVT_F32_UBYTE3_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16830 /* v_cvt_f64_f32 */, AMDGPU::V_CVT_F64_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16830 /* v_cvt_f64_f32 */, AMDGPU::V_CVT_F64_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16844 /* v_cvt_f64_i32 */, AMDGPU::V_CVT_F64_I32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VCSrcB32 }, },
  { 16844 /* v_cvt_f64_i32 */, AMDGPU::V_CVT_F64_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB32 }, },
  { 16858 /* v_cvt_f64_u32 */, AMDGPU::V_CVT_F64_U32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VCSrcB32 }, },
  { 16858 /* v_cvt_f64_u32 */, AMDGPU::V_CVT_F64_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB32 }, },
  { 16872 /* v_cvt_flr_i32_f32 */, AMDGPU::V_CVT_FLR_I32_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16872 /* v_cvt_flr_i32_f32 */, AMDGPU::V_CVT_FLR_I32_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16890 /* v_cvt_i16_f16 */, AMDGPU::V_CVT_I16_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16904 /* v_cvt_i32_f32 */, AMDGPU::V_CVT_I32_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16904 /* v_cvt_i32_f32 */, AMDGPU::V_CVT_I32_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16918 /* v_cvt_i32_f64 */, AMDGPU::V_CVT_I32_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16918 /* v_cvt_i32_f64 */, AMDGPU::V_CVT_I32_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16932 /* v_cvt_off_f32_i4 */, AMDGPU::V_CVT_OFF_F32_I4_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16932 /* v_cvt_off_f32_i4 */, AMDGPU::V_CVT_OFF_F32_I4_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 16949 /* v_cvt_pk_i16_i32 */, AMDGPU::V_CVT_PK_I16_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 16949 /* v_cvt_pk_i16_i32 */, AMDGPU::V_CVT_PK_I16_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 16966 /* v_cvt_pk_u16_u32 */, AMDGPU::V_CVT_PK_U16_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 16966 /* v_cvt_pk_u16_u32 */, AMDGPU::V_CVT_PK_U16_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 16983 /* v_cvt_pk_u8_f32 */, AMDGPU::V_CVT_PK_U8_F32_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16983 /* v_cvt_pk_u8_f32 */, AMDGPU::V_CVT_PK_U8_F32_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16999 /* v_cvt_pkaccum_u8_f32 */, AMDGPU::V_CVT_PKACCUM_U8_F32_e64_vi, Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0__imm_95_0, Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VCSrcF32 }, },
  { 16999 /* v_cvt_pkaccum_u8_f32 */, AMDGPU::V_CVT_PKACCUM_U8_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 16999 /* v_cvt_pkaccum_u8_f32 */, AMDGPU::V_CVT_PKACCUM_U8_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17020 /* v_cvt_pknorm_i16_f32 */, AMDGPU::V_CVT_PKNORM_I16_F32_e64_vi, Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0__imm_95_0, Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VCSrcF32 }, },
  { 17020 /* v_cvt_pknorm_i16_f32 */, AMDGPU::V_CVT_PKNORM_I16_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17020 /* v_cvt_pknorm_i16_f32 */, AMDGPU::V_CVT_PKNORM_I16_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17041 /* v_cvt_pknorm_u16_f32 */, AMDGPU::V_CVT_PKNORM_U16_F32_e64_vi, Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0__imm_95_0, Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VCSrcF32 }, },
  { 17041 /* v_cvt_pknorm_u16_f32 */, AMDGPU::V_CVT_PKNORM_U16_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17041 /* v_cvt_pknorm_u16_f32 */, AMDGPU::V_CVT_PKNORM_U16_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17062 /* v_cvt_pkrtz_f16_f32 */, AMDGPU::V_CVT_PKRTZ_F16_F32_e64_vi, Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0__imm_95_0, Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VCSrcF32 }, },
  { 17062 /* v_cvt_pkrtz_f16_f32 */, AMDGPU::V_CVT_PKRTZ_F16_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17062 /* v_cvt_pkrtz_f16_f32 */, AMDGPU::V_CVT_PKRTZ_F16_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17082 /* v_cvt_rpi_i32_f32 */, AMDGPU::V_CVT_RPI_I32_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17082 /* v_cvt_rpi_i32_f32 */, AMDGPU::V_CVT_RPI_I32_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17100 /* v_cvt_u16_f16 */, AMDGPU::V_CVT_U16_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17114 /* v_cvt_u32_f32 */, AMDGPU::V_CVT_U32_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17114 /* v_cvt_u32_f32 */, AMDGPU::V_CVT_U32_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17128 /* v_cvt_u32_f64 */, AMDGPU::V_CVT_U32_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17128 /* v_cvt_u32_f64 */, AMDGPU::V_CVT_U32_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17142 /* v_div_fixup_f16 */, AMDGPU::V_DIV_FIXUP_F16_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17158 /* v_div_fixup_f32 */, AMDGPU::V_DIV_FIXUP_F32_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17158 /* v_div_fixup_f32 */, AMDGPU::V_DIV_FIXUP_F32_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17174 /* v_div_fixup_f64 */, AMDGPU::V_DIV_FIXUP_F64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17174 /* v_div_fixup_f64 */, AMDGPU::V_DIV_FIXUP_F64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17190 /* v_div_fmas_f32 */, AMDGPU::V_DIV_FMAS_F32_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17190 /* v_div_fmas_f32 */, AMDGPU::V_DIV_FMAS_F32_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17205 /* v_div_fmas_f64 */, AMDGPU::V_DIV_FMAS_F64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17205 /* v_div_fmas_f64 */, AMDGPU::V_DIV_FMAS_F64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17220 /* v_div_scale_f32 */, AMDGPU::V_DIV_SCALE_F32_si, Convert__Reg1_0__Reg1_1__VCSrcF321_2__VCSrcF321_3__VCSrcF321_4, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcF32, MCK_VCSrcF32, MCK_VCSrcF32 }, },
  { 17220 /* v_div_scale_f32 */, AMDGPU::V_DIV_SCALE_F32_vi, Convert__Reg1_0__Reg1_1__VCSrcF321_2__VCSrcF321_3__VCSrcF321_4, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcF32, MCK_VCSrcF32, MCK_VCSrcF32 }, },
  { 17236 /* v_div_scale_f64 */, AMDGPU::V_DIV_SCALE_F64_si, Convert__Reg1_0__Reg1_1__VCSrcF641_2__VCSrcF641_3__VCSrcF641_4, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_SReg_64, MCK_VCSrcF64, MCK_VCSrcF64, MCK_VCSrcF64 }, },
  { 17236 /* v_div_scale_f64 */, AMDGPU::V_DIV_SCALE_F64_vi, Convert__Reg1_0__Reg1_1__VCSrcF641_2__VCSrcF641_3__VCSrcF641_4, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_SReg_64, MCK_VCSrcF64, MCK_VCSrcF64, MCK_VCSrcF64 }, },
  { 17252 /* v_exp_f16 */, AMDGPU::V_EXP_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17262 /* v_exp_f32 */, AMDGPU::V_EXP_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17262 /* v_exp_f32 */, AMDGPU::V_EXP_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17272 /* v_exp_legacy_f32 */, AMDGPU::V_EXP_LEGACY_F32_e64_ci, ConvertCustom_cvtVOP3_2_mod, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17272 /* v_exp_legacy_f32 */, AMDGPU::V_EXP_LEGACY_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17289 /* v_ffbh_i32 */, AMDGPU::V_FFBH_I32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 17289 /* v_ffbh_i32 */, AMDGPU::V_FFBH_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 17300 /* v_ffbh_u32 */, AMDGPU::V_FFBH_U32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 17300 /* v_ffbh_u32 */, AMDGPU::V_FFBH_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 17311 /* v_ffbl_b32 */, AMDGPU::V_FFBL_B32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 17311 /* v_ffbl_b32 */, AMDGPU::V_FFBL_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 17322 /* v_floor_f16 */, AMDGPU::V_FLOOR_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17334 /* v_floor_f32 */, AMDGPU::V_FLOOR_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17334 /* v_floor_f32 */, AMDGPU::V_FLOOR_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17346 /* v_floor_f64 */, AMDGPU::V_FLOOR_F64_e64_ci, ConvertCustom_cvtVOP3_2_mod, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17346 /* v_floor_f64 */, AMDGPU::V_FLOOR_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17358 /* v_fma_f16 */, AMDGPU::V_FMA_F16_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17368 /* v_fma_f32 */, AMDGPU::V_FMA_F32_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17368 /* v_fma_f32 */, AMDGPU::V_FMA_F32_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17378 /* v_fma_f64 */, AMDGPU::V_FMA_F64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17378 /* v_fma_f64 */, AMDGPU::V_FMA_F64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17388 /* v_fract_f16 */, AMDGPU::V_FRACT_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17400 /* v_fract_f32 */, AMDGPU::V_FRACT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17400 /* v_fract_f32 */, AMDGPU::V_FRACT_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17412 /* v_fract_f64 */, AMDGPU::V_FRACT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17412 /* v_fract_f64 */, AMDGPU::V_FRACT_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17424 /* v_frexp_exp_i16_f16 */, AMDGPU::V_FREXP_EXP_I16_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17444 /* v_frexp_exp_i32_f32 */, AMDGPU::V_FREXP_EXP_I32_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17444 /* v_frexp_exp_i32_f32 */, AMDGPU::V_FREXP_EXP_I32_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17464 /* v_frexp_exp_i32_f64 */, AMDGPU::V_FREXP_EXP_I32_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17464 /* v_frexp_exp_i32_f64 */, AMDGPU::V_FREXP_EXP_I32_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17484 /* v_frexp_mant_f16 */, AMDGPU::V_FREXP_MANT_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17501 /* v_frexp_mant_f32 */, AMDGPU::V_FREXP_MANT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17501 /* v_frexp_mant_f32 */, AMDGPU::V_FREXP_MANT_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17518 /* v_frexp_mant_f64 */, AMDGPU::V_FREXP_MANT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17518 /* v_frexp_mant_f64 */, AMDGPU::V_FREXP_MANT_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17568 /* v_interp_p1ll_f16 */, AMDGPU::V_INTERP_P1LL_F16_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17586 /* v_interp_p1lv_f16 */, AMDGPU::V_INTERP_P1LV_F16_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17604 /* v_interp_p2_f16 */, AMDGPU::V_INTERP_P2_F16_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17636 /* v_ldexp_f16 */, AMDGPU::V_LDEXP_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17648 /* v_ldexp_f32 */, AMDGPU::V_LDEXP_F32_e64_vi, Convert__Reg1_0__imm_95_0__VCSrcF321_1__imm_95_0__VCSrcF321_2__imm_95_0__imm_95_0, Feature_isVI, { MCK_VGPR_32, MCK_VCSrcF32, MCK_VCSrcF32 }, },
  { 17648 /* v_ldexp_f32 */, AMDGPU::V_LDEXP_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17648 /* v_ldexp_f32 */, AMDGPU::V_LDEXP_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17660 /* v_ldexp_f64 */, AMDGPU::V_LDEXP_F64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17660 /* v_ldexp_f64 */, AMDGPU::V_LDEXP_F64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17672 /* v_lerp_u8 */, AMDGPU::V_LERP_U8_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17672 /* v_lerp_u8 */, AMDGPU::V_LERP_U8_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17682 /* v_log_clamp_f32 */, AMDGPU::V_LOG_CLAMP_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17698 /* v_log_f16 */, AMDGPU::V_LOG_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17708 /* v_log_f32 */, AMDGPU::V_LOG_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17708 /* v_log_f32 */, AMDGPU::V_LOG_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17718 /* v_log_legacy_f32 */, AMDGPU::V_LOG_LEGACY_F32_e64_ci, ConvertCustom_cvtVOP3_2_mod, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17718 /* v_log_legacy_f32 */, AMDGPU::V_LOG_LEGACY_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17735 /* v_lshl_b32 */, AMDGPU::V_LSHL_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17746 /* v_lshl_b64 */, AMDGPU::V_LSHL_B64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2, Feature_isSICI|Feature_isSICI, { MCK_VReg_64, MCK_VCSrcB64, MCK_VCSrcB32 }, },
  { 17757 /* v_lshlrev_b16 */, AMDGPU::V_LSHLREV_B16_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17771 /* v_lshlrev_b32 */, AMDGPU::V_LSHLREV_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17771 /* v_lshlrev_b32 */, AMDGPU::V_LSHLREV_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17785 /* v_lshlrev_b64 */, AMDGPU::V_LSHLREV_B64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB641_2, Feature_isVI|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB32, MCK_VCSrcB64 }, },
  { 17799 /* v_lshr_b32 */, AMDGPU::V_LSHR_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17810 /* v_lshr_b64 */, AMDGPU::V_LSHR_B64_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2, Feature_isSICI|Feature_isSICI, { MCK_VReg_64, MCK_VCSrcB64, MCK_VCSrcB32 }, },
  { 17821 /* v_lshrrev_b16 */, AMDGPU::V_LSHRREV_B16_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17835 /* v_lshrrev_b32 */, AMDGPU::V_LSHRREV_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17835 /* v_lshrrev_b32 */, AMDGPU::V_LSHRREV_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17849 /* v_lshrrev_b64 */, AMDGPU::V_LSHRREV_B64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB641_2, Feature_isVI|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB32, MCK_VCSrcB64 }, },
  { 17863 /* v_mac_f16 */, AMDGPU::V_MAC_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17873 /* v_mac_f32 */, AMDGPU::V_MAC_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17873 /* v_mac_f32 */, AMDGPU::V_MAC_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17883 /* v_mac_legacy_f32 */, AMDGPU::V_MAC_LEGACY_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17900 /* v_mad_f16 */, AMDGPU::V_MAD_F16_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17910 /* v_mad_f32 */, AMDGPU::V_MAD_F32_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17910 /* v_mad_f32 */, AMDGPU::V_MAD_F32_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17920 /* v_mad_i16 */, AMDGPU::V_MAD_I16_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17930 /* v_mad_i32_i24 */, AMDGPU::V_MAD_I32_I24_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17930 /* v_mad_i32_i24 */, AMDGPU::V_MAD_I32_I24_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17944 /* v_mad_i64_i32 */, AMDGPU::V_MAD_I64_I32_ci, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB641_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB64 }, },
  { 17944 /* v_mad_i64_i32 */, AMDGPU::V_MAD_I64_I32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB641_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB64 }, },
  { 17958 /* v_mad_legacy_f32 */, AMDGPU::V_MAD_LEGACY_F32_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17958 /* v_mad_legacy_f32 */, AMDGPU::V_MAD_LEGACY_F32_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 17975 /* v_mad_u16 */, AMDGPU::V_MAD_U16_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17985 /* v_mad_u32_u24 */, AMDGPU::V_MAD_U32_U24_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17985 /* v_mad_u32_u24 */, AMDGPU::V_MAD_U32_U24_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 17999 /* v_mad_u64_u32 */, AMDGPU::V_MAD_U64_U32_ci, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB641_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB64 }, },
  { 17999 /* v_mad_u64_u32 */, AMDGPU::V_MAD_U64_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB641_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB64 }, },
  { 18061 /* v_max3_f32 */, AMDGPU::V_MAX3_F32_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18061 /* v_max3_f32 */, AMDGPU::V_MAX3_F32_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18072 /* v_max3_i32 */, AMDGPU::V_MAX3_I32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18072 /* v_max3_i32 */, AMDGPU::V_MAX3_I32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18083 /* v_max3_u32 */, AMDGPU::V_MAX3_U32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18083 /* v_max3_u32 */, AMDGPU::V_MAX3_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18094 /* v_max_f16 */, AMDGPU::V_MAX_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18104 /* v_max_f32 */, AMDGPU::V_MAX_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18104 /* v_max_f32 */, AMDGPU::V_MAX_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18114 /* v_max_f64 */, AMDGPU::V_MAX_F64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18114 /* v_max_f64 */, AMDGPU::V_MAX_F64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18124 /* v_max_i16 */, AMDGPU::V_MAX_I16_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18134 /* v_max_i32 */, AMDGPU::V_MAX_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18134 /* v_max_i32 */, AMDGPU::V_MAX_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18144 /* v_max_legacy_f32 */, AMDGPU::V_MAX_LEGACY_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18161 /* v_max_u16 */, AMDGPU::V_MAX_U16_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18171 /* v_max_u32 */, AMDGPU::V_MAX_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18171 /* v_max_u32 */, AMDGPU::V_MAX_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18181 /* v_mbcnt_hi_u32_b32 */, AMDGPU::V_MBCNT_HI_U32_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18181 /* v_mbcnt_hi_u32_b32 */, AMDGPU::V_MBCNT_HI_U32_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18200 /* v_mbcnt_lo_u32_b32 */, AMDGPU::V_MBCNT_LO_U32_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18200 /* v_mbcnt_lo_u32_b32 */, AMDGPU::V_MBCNT_LO_U32_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18219 /* v_med3_f32 */, AMDGPU::V_MED3_F32_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18219 /* v_med3_f32 */, AMDGPU::V_MED3_F32_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18230 /* v_med3_i32 */, AMDGPU::V_MED3_I32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18230 /* v_med3_i32 */, AMDGPU::V_MED3_I32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18241 /* v_med3_u32 */, AMDGPU::V_MED3_U32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18241 /* v_med3_u32 */, AMDGPU::V_MED3_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18252 /* v_min3_f32 */, AMDGPU::V_MIN3_F32_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18252 /* v_min3_f32 */, AMDGPU::V_MIN3_F32_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18263 /* v_min3_i32 */, AMDGPU::V_MIN3_I32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18263 /* v_min3_i32 */, AMDGPU::V_MIN3_I32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18274 /* v_min3_u32 */, AMDGPU::V_MIN3_U32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18274 /* v_min3_u32 */, AMDGPU::V_MIN3_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18285 /* v_min_f16 */, AMDGPU::V_MIN_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18295 /* v_min_f32 */, AMDGPU::V_MIN_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18295 /* v_min_f32 */, AMDGPU::V_MIN_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18305 /* v_min_f64 */, AMDGPU::V_MIN_F64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18305 /* v_min_f64 */, AMDGPU::V_MIN_F64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18315 /* v_min_i16 */, AMDGPU::V_MIN_I16_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18325 /* v_min_i32 */, AMDGPU::V_MIN_I32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18325 /* v_min_i32 */, AMDGPU::V_MIN_I32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18335 /* v_min_legacy_f32 */, AMDGPU::V_MIN_LEGACY_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18352 /* v_min_u16 */, AMDGPU::V_MIN_U16_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18362 /* v_min_u32 */, AMDGPU::V_MIN_U32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18362 /* v_min_u32 */, AMDGPU::V_MIN_U32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18372 /* v_mov_b32 */, AMDGPU::V_MOV_B32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 18372 /* v_mov_b32 */, AMDGPU::V_MOV_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 18382 /* v_mov_fed_b32 */, AMDGPU::V_MOV_FED_B32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 18396 /* v_movreld_b32 */, AMDGPU::V_MOVRELD_B32_e64_si, Convert__Reg1_0__VSrcB321_1, Feature_HasMovrel|Feature_isSICI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 18396 /* v_movreld_b32 */, AMDGPU::V_MOVRELD_B32_e64_vi, Convert__Reg1_0__VSrcB321_1, Feature_HasMovrel|Feature_isVI, { MCK_VGPR_32, MCK_VSrcB32 }, },
  { 18410 /* v_movrels_b32 */, AMDGPU::V_MOVRELS_B32_e64_si, Convert__Reg1_0__Reg1_1, Feature_HasMovrel|Feature_isSICI, { MCK_VGPR_32, MCK_VGPR_32 }, },
  { 18410 /* v_movrels_b32 */, AMDGPU::V_MOVRELS_B32_e64_vi, Convert__Reg1_0__Reg1_1, Feature_HasMovrel|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32 }, },
  { 18424 /* v_movrelsd_b32 */, AMDGPU::V_MOVRELSD_B32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_HasMovrel|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 18424 /* v_movrelsd_b32 */, AMDGPU::V_MOVRELSD_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_HasMovrel|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 18439 /* v_mqsad_pk_u16_u8 */, AMDGPU::V_MQSAD_PK_U16_U8_si, Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2__VCSrcB641_3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_VCSrcB64, MCK_VCSrcB32, MCK_VCSrcB64 }, },
  { 18439 /* v_mqsad_pk_u16_u8 */, AMDGPU::V_MQSAD_PK_U16_U8_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2__VCSrcB641_3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB64, MCK_VCSrcB32, MCK_VCSrcB64 }, },
  { 18457 /* v_mqsad_u16_u8 */, AMDGPU::V_MQSAD_U16_U8_ci, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isCIVI|Feature_isCIOnly, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18457 /* v_mqsad_u16_u8 */, AMDGPU::V_MQSAD_U16_U8_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18472 /* v_mqsad_u32_u8 */, AMDGPU::V_MQSAD_U32_U8_ci, Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2__Reg1_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_128, MCK_VCSrcB64, MCK_VCSrcB32, MCK_VReg_128 }, },
  { 18472 /* v_mqsad_u32_u8 */, AMDGPU::V_MQSAD_U32_U8_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2__Reg1_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_128, MCK_VCSrcB64, MCK_VCSrcB32, MCK_VReg_128 }, },
  { 18487 /* v_msad_u8 */, AMDGPU::V_MSAD_U8_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18487 /* v_msad_u8 */, AMDGPU::V_MSAD_U8_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18497 /* v_mul_f16 */, AMDGPU::V_MUL_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18507 /* v_mul_f32 */, AMDGPU::V_MUL_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18507 /* v_mul_f32 */, AMDGPU::V_MUL_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18517 /* v_mul_f64 */, AMDGPU::V_MUL_F64_si, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18517 /* v_mul_f64 */, AMDGPU::V_MUL_F64_vi, ConvertCustom_cvtVOP3, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18527 /* v_mul_hi_i32 */, AMDGPU::V_MUL_HI_I32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18527 /* v_mul_hi_i32 */, AMDGPU::V_MUL_HI_I32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18540 /* v_mul_hi_i32_i24 */, AMDGPU::V_MUL_HI_I32_I24_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18540 /* v_mul_hi_i32_i24 */, AMDGPU::V_MUL_HI_I32_I24_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18557 /* v_mul_hi_u32 */, AMDGPU::V_MUL_HI_U32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18557 /* v_mul_hi_u32 */, AMDGPU::V_MUL_HI_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18570 /* v_mul_hi_u32_u24 */, AMDGPU::V_MUL_HI_U32_U24_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18570 /* v_mul_hi_u32_u24 */, AMDGPU::V_MUL_HI_U32_U24_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18587 /* v_mul_i32_i24 */, AMDGPU::V_MUL_I32_I24_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18587 /* v_mul_i32_i24 */, AMDGPU::V_MUL_I32_I24_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18601 /* v_mul_legacy_f32 */, AMDGPU::V_MUL_LEGACY_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18601 /* v_mul_legacy_f32 */, AMDGPU::V_MUL_LEGACY_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18618 /* v_mul_lo_i32 */, AMDGPU::V_MUL_LO_I32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18618 /* v_mul_lo_i32 */, AMDGPU::V_MUL_LO_I32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18631 /* v_mul_lo_u16 */, AMDGPU::V_MUL_LO_U16_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18644 /* v_mul_lo_u32 */, AMDGPU::V_MUL_LO_U32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18644 /* v_mul_lo_u32 */, AMDGPU::V_MUL_LO_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18657 /* v_mul_u32_u24 */, AMDGPU::V_MUL_U32_U24_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18657 /* v_mul_u32_u24 */, AMDGPU::V_MUL_U32_U24_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18671 /* v_mullit_f32 */, AMDGPU::V_MULLIT_F32_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18684 /* v_nop */, AMDGPU::V_NOP_e64_si, Convert_NoOperands, Feature_isGCN|Feature_isSICI, {  }, },
  { 18684 /* v_nop */, AMDGPU::V_NOP_e64_vi, Convert_NoOperands, Feature_isGCN|Feature_isVI, {  }, },
  { 18690 /* v_not_b32 */, AMDGPU::V_NOT_B32_e64_si, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 18690 /* v_not_b32 */, AMDGPU::V_NOT_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32 }, },
  { 18700 /* v_or_b32 */, AMDGPU::V_OR_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18700 /* v_or_b32 */, AMDGPU::V_OR_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18709 /* v_qsad_pk_u16_u8 */, AMDGPU::V_QSAD_PK_U16_U8_ci, Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2__VCSrcB641_3, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_VCSrcB64, MCK_VCSrcB32, MCK_VCSrcB64 }, },
  { 18709 /* v_qsad_pk_u16_u8 */, AMDGPU::V_QSAD_PK_U16_U8_vi, Convert__Reg1_0__VCSrcB641_1__VCSrcB321_2__VCSrcB641_3, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_VCSrcB64, MCK_VCSrcB32, MCK_VCSrcB64 }, },
  { 18726 /* v_rcp_clamp_f32 */, AMDGPU::V_RCP_CLAMP_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18742 /* v_rcp_clamp_f64 */, AMDGPU::V_RCP_CLAMP_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18758 /* v_rcp_f16 */, AMDGPU::V_RCP_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18768 /* v_rcp_f32 */, AMDGPU::V_RCP_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18768 /* v_rcp_f32 */, AMDGPU::V_RCP_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18778 /* v_rcp_f64 */, AMDGPU::V_RCP_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18778 /* v_rcp_f64 */, AMDGPU::V_RCP_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18788 /* v_rcp_iflag_f32 */, AMDGPU::V_RCP_IFLAG_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18788 /* v_rcp_iflag_f32 */, AMDGPU::V_RCP_IFLAG_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18804 /* v_rcp_legacy_f32 */, AMDGPU::V_RCP_LEGACY_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18856 /* v_rndne_f16 */, AMDGPU::V_RNDNE_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18868 /* v_rndne_f32 */, AMDGPU::V_RNDNE_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18868 /* v_rndne_f32 */, AMDGPU::V_RNDNE_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18880 /* v_rndne_f64 */, AMDGPU::V_RNDNE_F64_e64_ci, ConvertCustom_cvtVOP3_2_mod, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18880 /* v_rndne_f64 */, AMDGPU::V_RNDNE_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18892 /* v_rsq_clamp_f32 */, AMDGPU::V_RSQ_CLAMP_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18908 /* v_rsq_clamp_f64 */, AMDGPU::V_RSQ_CLAMP_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18924 /* v_rsq_f16 */, AMDGPU::V_RSQ_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18934 /* v_rsq_f32 */, AMDGPU::V_RSQ_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18934 /* v_rsq_f32 */, AMDGPU::V_RSQ_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18944 /* v_rsq_f64 */, AMDGPU::V_RSQ_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18944 /* v_rsq_f64 */, AMDGPU::V_RSQ_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18954 /* v_rsq_legacy_f32 */, AMDGPU::V_RSQ_LEGACY_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isSICI|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 18971 /* v_sad_hi_u8 */, AMDGPU::V_SAD_HI_U8_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18971 /* v_sad_hi_u8 */, AMDGPU::V_SAD_HI_U8_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18983 /* v_sad_u16 */, AMDGPU::V_SAD_U16_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18983 /* v_sad_u16 */, AMDGPU::V_SAD_U16_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18993 /* v_sad_u32 */, AMDGPU::V_SAD_U32_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 18993 /* v_sad_u32 */, AMDGPU::V_SAD_U32_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19003 /* v_sad_u8 */, AMDGPU::V_SAD_U8_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19003 /* v_sad_u8 */, AMDGPU::V_SAD_U8_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19012 /* v_sin_f16 */, AMDGPU::V_SIN_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19022 /* v_sin_f32 */, AMDGPU::V_SIN_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19022 /* v_sin_f32 */, AMDGPU::V_SIN_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19032 /* v_sqrt_f16 */, AMDGPU::V_SQRT_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19043 /* v_sqrt_f32 */, AMDGPU::V_SQRT_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19043 /* v_sqrt_f32 */, AMDGPU::V_SQRT_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19054 /* v_sqrt_f64 */, AMDGPU::V_SQRT_F64_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19054 /* v_sqrt_f64 */, AMDGPU::V_SQRT_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19065 /* v_sub_f16 */, AMDGPU::V_SUB_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19075 /* v_sub_f32 */, AMDGPU::V_SUB_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19075 /* v_sub_f32 */, AMDGPU::V_SUB_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19085 /* v_sub_i32 */, AMDGPU::V_SUB_I32_e64_si, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19085 /* v_sub_i32 */, AMDGPU::V_SUB_I32_e64_vi, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19095 /* v_sub_u16 */, AMDGPU::V_SUB_U16_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19105 /* v_subb_u32 */, AMDGPU::V_SUBB_U32_e64_si, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__SCSrcB641_4, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SCSrcB64 }, },
  { 19105 /* v_subb_u32 */, AMDGPU::V_SUBB_U32_e64_vi, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__SCSrcB641_4, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SCSrcB64 }, },
  { 19116 /* v_subbrev_u32 */, AMDGPU::V_SUBBREV_U32_e64_si, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__SCSrcB641_4, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SCSrcB64 }, },
  { 19116 /* v_subbrev_u32 */, AMDGPU::V_SUBBREV_U32_e64_vi, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3__SCSrcB641_4, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32, MCK_SCSrcB64 }, },
  { 19130 /* v_subrev_f16 */, AMDGPU::V_SUBREV_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19143 /* v_subrev_f32 */, AMDGPU::V_SUBREV_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19143 /* v_subrev_f32 */, AMDGPU::V_SUBREV_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19156 /* v_subrev_i32 */, AMDGPU::V_SUBREV_I32_e64_si, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19156 /* v_subrev_i32 */, AMDGPU::V_SUBREV_I32_e64_vi, Convert__Reg1_0__Reg1_1__VCSrcB321_2__VCSrcB321_3, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_SReg_64, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19169 /* v_subrev_u16 */, AMDGPU::V_SUBREV_U16_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19182 /* v_trig_preop_f64 */, AMDGPU::V_TRIG_PREOP_F64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19182 /* v_trig_preop_f64 */, AMDGPU::V_TRIG_PREOP_F64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_RegOrImmWithInt32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19199 /* v_trunc_f16 */, AMDGPU::V_TRUNC_F16_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP16InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19211 /* v_trunc_f32 */, AMDGPU::V_TRUNC_F32_e64_si, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19211 /* v_trunc_f32 */, AMDGPU::V_TRUNC_F32_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_RegOrImmWithFP32InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19223 /* v_trunc_f64 */, AMDGPU::V_TRUNC_F64_e64_ci, ConvertCustom_cvtVOP3_2_mod, Feature_isCIVI|Feature_isCIOnly, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19223 /* v_trunc_f64 */, AMDGPU::V_TRUNC_F64_e64_vi, ConvertCustom_cvtVOP3_2_mod, Feature_isCIVI|Feature_isVI, { MCK_VReg_64, MCK_RegOrImmWithFP64InputMods, MCK_ImmClampSI, MCK_ImmOModSI }, },
  { 19251 /* v_xor_b32 */, AMDGPU::V_XOR_B32_e64_si, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isSICI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
  { 19251 /* v_xor_b32 */, AMDGPU::V_XOR_B32_e64_vi, Convert__Reg1_0__VCSrcB321_1__VCSrcB321_2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCSrcB32, MCK_VCSrcB32 }, },
};

static const MatchEntry MatchTable2[] = {
  { 0 /* CALL_FS */, AMDGPU::CF_CALL_FS_EG, Convert_NoOperands, 0, {  }, },
  { 0 /* CALL_FS */, AMDGPU::CF_CALL_FS_R600, Convert_NoOperands, 0, {  }, },
  { 8 /* CF_END */, AMDGPU::CF_END_CM, Convert_NoOperands, 0, {  }, },
  { 8 /* CF_END */, AMDGPU::CF_END_EG, Convert_NoOperands, 0, {  }, },
  { 8 /* CF_END */, AMDGPU::CF_END_R600, Convert_NoOperands, 0, {  }, },
  { 15 /* CONTINUE */, AMDGPU::CF_CONTINUE_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 15 /* CONTINUE */, AMDGPU::CF_CONTINUE_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 24 /* ELSE */, AMDGPU::CF_ELSE_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 24 /* ELSE */, AMDGPU::CF_ELSE_R600, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 29 /* END_LOOP */, AMDGPU::END_LOOP_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 29 /* END_LOOP */, AMDGPU::END_LOOP_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 38 /* INTERP_LOAD */, AMDGPU::INTERP_VEC_LOAD, Convert__Reg1_2__Imm1_0, 0, { MCK_Imm, MCK__COLON_, MCK_R600_Reg128 }, },
  { 50 /* INTERP_PAIR_XY */, AMDGPU::INTERP_PAIR_XY, Convert__Reg1_4__imm_95_0__Imm1_0__Reg1_1__Reg1_2, 0, { MCK_Imm, MCK_R600_TReg32_Y, MCK_R600_TReg32_X, MCK__COLON_, MCK_R600_TReg32_X, MCK_dst1 }, },
  { 65 /* INTERP_PAIR_ZW */, AMDGPU::INTERP_PAIR_ZW, Convert__Reg1_4__imm_95_0__Imm1_0__Reg1_1__Reg1_2, 0, { MCK_Imm, MCK_R600_TReg32_Y, MCK_R600_TReg32_X, MCK__COLON_, MCK_R600_TReg32_Z, MCK_dst1 }, },
  { 80 /* JUMP */, AMDGPU::CF_JUMP_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 80 /* JUMP */, AMDGPU::CF_JUMP_R600, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 85 /* LOOP_BREAK */, AMDGPU::LOOP_BREAK_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 85 /* LOOP_BREAK */, AMDGPU::LOOP_BREAK_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 96 /* LOOP_START_DX10 */, AMDGPU::WHILE_LOOP_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 96 /* LOOP_START_DX10 */, AMDGPU::WHILE_LOOP_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 112 /* MASK_WRITE */, AMDGPU::MASK_WRITE, Convert__Reg1_0, 0, { MCK_R600_Reg32 }, },
  { 123 /* PAD */, AMDGPU::PAD, Convert_NoOperands, 0, {  }, },
  { 127 /* POP */, AMDGPU::POP_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 127 /* POP */, AMDGPU::POP_R600, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 131 /* PUSH */, AMDGPU::CF_PUSH_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 136 /* PUSH_ELSE */, AMDGPU::CF_PUSH_ELSE_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 146 /* TEX */, AMDGPU::CF_TC_EG, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 146 /* TEX */, AMDGPU::CF_TC_R600, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 150 /* VTX */, AMDGPU::CF_VC_EG, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 150 /* VTX */, AMDGPU::CF_VC_R600, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 7984 /* v_add_f16 */, AMDGPU::V_ADD_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 7994 /* v_add_f32 */, AMDGPU::V_ADD_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8014 /* v_add_i32 */, AMDGPU::V_ADD_I32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8024 /* v_add_u16 */, AMDGPU::V_ADD_U16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8034 /* v_addc_u32 */, AMDGPU::V_ADDC_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_RegOrImmWithInt32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_VCC, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8076 /* v_and_b32 */, AMDGPU::V_AND_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8108 /* v_ashrrev_i16 */, AMDGPU::V_ASHRREV_I16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8122 /* v_ashrrev_i32 */, AMDGPU::V_ASHRREV_I32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8205 /* v_bfrev_b32 */, AMDGPU::V_BFREV_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 8217 /* v_ceil_f16 */, AMDGPU::V_CEIL_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 8228 /* v_ceil_f32 */, AMDGPU::V_CEIL_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 8260 /* v_cmp_class_f16 */, AMDGPU::V_CMP_CLASS_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8296 /* v_cmp_class_f32 */, AMDGPU::V_CMP_CLASS_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8368 /* v_cmp_eq_f16 */, AMDGPU::V_CMP_EQ_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8398 /* v_cmp_eq_f32 */, AMDGPU::V_CMP_EQ_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8458 /* v_cmp_eq_i16 */, AMDGPU::V_CMP_EQ_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8488 /* v_cmp_eq_i32 */, AMDGPU::V_CMP_EQ_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8548 /* v_cmp_eq_u16 */, AMDGPU::V_CMP_EQ_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8578 /* v_cmp_eq_u32 */, AMDGPU::V_CMP_EQ_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8638 /* v_cmp_f_f16 */, AMDGPU::V_CMP_F_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8666 /* v_cmp_f_f32 */, AMDGPU::V_CMP_F_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8722 /* v_cmp_f_i16 */, AMDGPU::V_CMP_F_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8750 /* v_cmp_f_i32 */, AMDGPU::V_CMP_F_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8806 /* v_cmp_f_u16 */, AMDGPU::V_CMP_F_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8834 /* v_cmp_f_u32 */, AMDGPU::V_CMP_F_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8890 /* v_cmp_ge_f16 */, AMDGPU::V_CMP_GE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8920 /* v_cmp_ge_f32 */, AMDGPU::V_CMP_GE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 8980 /* v_cmp_ge_i16 */, AMDGPU::V_CMP_GE_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9010 /* v_cmp_ge_i32 */, AMDGPU::V_CMP_GE_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9070 /* v_cmp_ge_u16 */, AMDGPU::V_CMP_GE_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9100 /* v_cmp_ge_u32 */, AMDGPU::V_CMP_GE_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9160 /* v_cmp_gt_f16 */, AMDGPU::V_CMP_GT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9190 /* v_cmp_gt_f32 */, AMDGPU::V_CMP_GT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9250 /* v_cmp_gt_i16 */, AMDGPU::V_CMP_GT_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9280 /* v_cmp_gt_i32 */, AMDGPU::V_CMP_GT_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9340 /* v_cmp_gt_u16 */, AMDGPU::V_CMP_GT_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9370 /* v_cmp_gt_u32 */, AMDGPU::V_CMP_GT_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9430 /* v_cmp_le_f16 */, AMDGPU::V_CMP_LE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9460 /* v_cmp_le_f32 */, AMDGPU::V_CMP_LE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9520 /* v_cmp_le_i16 */, AMDGPU::V_CMP_LE_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9550 /* v_cmp_le_i32 */, AMDGPU::V_CMP_LE_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9610 /* v_cmp_le_u16 */, AMDGPU::V_CMP_LE_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9640 /* v_cmp_le_u32 */, AMDGPU::V_CMP_LE_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9700 /* v_cmp_lg_f16 */, AMDGPU::V_CMP_LG_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9730 /* v_cmp_lg_f32 */, AMDGPU::V_CMP_LG_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9790 /* v_cmp_lt_f16 */, AMDGPU::V_CMP_LT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9820 /* v_cmp_lt_f32 */, AMDGPU::V_CMP_LT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9880 /* v_cmp_lt_i16 */, AMDGPU::V_CMP_LT_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9910 /* v_cmp_lt_i32 */, AMDGPU::V_CMP_LT_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 9970 /* v_cmp_lt_u16 */, AMDGPU::V_CMP_LT_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10000 /* v_cmp_lt_u32 */, AMDGPU::V_CMP_LT_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10060 /* v_cmp_ne_i16 */, AMDGPU::V_CMP_NE_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10090 /* v_cmp_ne_i32 */, AMDGPU::V_CMP_NE_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10150 /* v_cmp_ne_u16 */, AMDGPU::V_CMP_NE_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10180 /* v_cmp_ne_u32 */, AMDGPU::V_CMP_NE_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10240 /* v_cmp_neq_f16 */, AMDGPU::V_CMP_NEQ_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10272 /* v_cmp_neq_f32 */, AMDGPU::V_CMP_NEQ_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10336 /* v_cmp_nge_f16 */, AMDGPU::V_CMP_NGE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10368 /* v_cmp_nge_f32 */, AMDGPU::V_CMP_NGE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10432 /* v_cmp_ngt_f16 */, AMDGPU::V_CMP_NGT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10464 /* v_cmp_ngt_f32 */, AMDGPU::V_CMP_NGT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10528 /* v_cmp_nle_f16 */, AMDGPU::V_CMP_NLE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10560 /* v_cmp_nle_f32 */, AMDGPU::V_CMP_NLE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10624 /* v_cmp_nlg_f16 */, AMDGPU::V_CMP_NLG_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10656 /* v_cmp_nlg_f32 */, AMDGPU::V_CMP_NLG_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10720 /* v_cmp_nlt_f16 */, AMDGPU::V_CMP_NLT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10752 /* v_cmp_nlt_f32 */, AMDGPU::V_CMP_NLT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10816 /* v_cmp_o_f16 */, AMDGPU::V_CMP_O_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10844 /* v_cmp_o_f32 */, AMDGPU::V_CMP_O_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10900 /* v_cmp_t_i16 */, AMDGPU::V_CMP_T_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10928 /* v_cmp_t_i32 */, AMDGPU::V_CMP_T_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 10984 /* v_cmp_t_u16 */, AMDGPU::V_CMP_T_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 11012 /* v_cmp_t_u32 */, AMDGPU::V_CMP_T_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 11068 /* v_cmp_tru_f16 */, AMDGPU::V_CMP_TRU_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 11100 /* v_cmp_tru_f32 */, AMDGPU::V_CMP_TRU_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 11164 /* v_cmp_u_f16 */, AMDGPU::V_CMP_U_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 11192 /* v_cmp_u_f32 */, AMDGPU::V_CMP_U_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13392 /* v_cmpx_class_f16 */, AMDGPU::V_CMPX_CLASS_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13430 /* v_cmpx_class_f32 */, AMDGPU::V_CMPX_CLASS_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13506 /* v_cmpx_eq_f16 */, AMDGPU::V_CMPX_EQ_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13538 /* v_cmpx_eq_f32 */, AMDGPU::V_CMPX_EQ_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13602 /* v_cmpx_eq_i16 */, AMDGPU::V_CMPX_EQ_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13634 /* v_cmpx_eq_i32 */, AMDGPU::V_CMPX_EQ_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13698 /* v_cmpx_eq_u16 */, AMDGPU::V_CMPX_EQ_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13730 /* v_cmpx_eq_u32 */, AMDGPU::V_CMPX_EQ_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13794 /* v_cmpx_f_f16 */, AMDGPU::V_CMPX_F_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13824 /* v_cmpx_f_f32 */, AMDGPU::V_CMPX_F_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13884 /* v_cmpx_f_i16 */, AMDGPU::V_CMPX_F_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13914 /* v_cmpx_f_i32 */, AMDGPU::V_CMPX_F_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 13974 /* v_cmpx_f_u16 */, AMDGPU::V_CMPX_F_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14004 /* v_cmpx_f_u32 */, AMDGPU::V_CMPX_F_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14064 /* v_cmpx_ge_f16 */, AMDGPU::V_CMPX_GE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14096 /* v_cmpx_ge_f32 */, AMDGPU::V_CMPX_GE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14160 /* v_cmpx_ge_i16 */, AMDGPU::V_CMPX_GE_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14192 /* v_cmpx_ge_i32 */, AMDGPU::V_CMPX_GE_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14256 /* v_cmpx_ge_u16 */, AMDGPU::V_CMPX_GE_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14288 /* v_cmpx_ge_u32 */, AMDGPU::V_CMPX_GE_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14352 /* v_cmpx_gt_f16 */, AMDGPU::V_CMPX_GT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14384 /* v_cmpx_gt_f32 */, AMDGPU::V_CMPX_GT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14448 /* v_cmpx_gt_i16 */, AMDGPU::V_CMPX_GT_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14480 /* v_cmpx_gt_i32 */, AMDGPU::V_CMPX_GT_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14544 /* v_cmpx_gt_u16 */, AMDGPU::V_CMPX_GT_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14576 /* v_cmpx_gt_u32 */, AMDGPU::V_CMPX_GT_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14640 /* v_cmpx_le_f16 */, AMDGPU::V_CMPX_LE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14672 /* v_cmpx_le_f32 */, AMDGPU::V_CMPX_LE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14736 /* v_cmpx_le_i16 */, AMDGPU::V_CMPX_LE_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14768 /* v_cmpx_le_i32 */, AMDGPU::V_CMPX_LE_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14832 /* v_cmpx_le_u16 */, AMDGPU::V_CMPX_LE_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14864 /* v_cmpx_le_u32 */, AMDGPU::V_CMPX_LE_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14928 /* v_cmpx_lg_f16 */, AMDGPU::V_CMPX_LG_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 14960 /* v_cmpx_lg_f32 */, AMDGPU::V_CMPX_LG_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15024 /* v_cmpx_lt_f16 */, AMDGPU::V_CMPX_LT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15056 /* v_cmpx_lt_f32 */, AMDGPU::V_CMPX_LT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15120 /* v_cmpx_lt_i16 */, AMDGPU::V_CMPX_LT_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15152 /* v_cmpx_lt_i32 */, AMDGPU::V_CMPX_LT_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15216 /* v_cmpx_lt_u16 */, AMDGPU::V_CMPX_LT_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15248 /* v_cmpx_lt_u32 */, AMDGPU::V_CMPX_LT_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15312 /* v_cmpx_ne_i16 */, AMDGPU::V_CMPX_NE_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15344 /* v_cmpx_ne_i32 */, AMDGPU::V_CMPX_NE_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15408 /* v_cmpx_ne_u16 */, AMDGPU::V_CMPX_NE_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15440 /* v_cmpx_ne_u32 */, AMDGPU::V_CMPX_NE_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15504 /* v_cmpx_neq_f16 */, AMDGPU::V_CMPX_NEQ_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15538 /* v_cmpx_neq_f32 */, AMDGPU::V_CMPX_NEQ_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15606 /* v_cmpx_nge_f16 */, AMDGPU::V_CMPX_NGE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15640 /* v_cmpx_nge_f32 */, AMDGPU::V_CMPX_NGE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15708 /* v_cmpx_ngt_f16 */, AMDGPU::V_CMPX_NGT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15742 /* v_cmpx_ngt_f32 */, AMDGPU::V_CMPX_NGT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15810 /* v_cmpx_nle_f16 */, AMDGPU::V_CMPX_NLE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15844 /* v_cmpx_nle_f32 */, AMDGPU::V_CMPX_NLE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15912 /* v_cmpx_nlg_f16 */, AMDGPU::V_CMPX_NLG_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 15946 /* v_cmpx_nlg_f32 */, AMDGPU::V_CMPX_NLG_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 16014 /* v_cmpx_nlt_f16 */, AMDGPU::V_CMPX_NLT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 16048 /* v_cmpx_nlt_f32 */, AMDGPU::V_CMPX_NLT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 16116 /* v_cmpx_o_f16 */, AMDGPU::V_CMPX_O_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 16146 /* v_cmpx_o_f32 */, AMDGPU::V_CMPX_O_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 16206 /* v_cmpx_t_i16 */, AMDGPU::V_CMPX_T_I16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 16236 /* v_cmpx_t_i32 */, AMDGPU::V_CMPX_T_I32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 16296 /* v_cmpx_t_u16 */, AMDGPU::V_CMPX_T_U16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 16326 /* v_cmpx_t_u32 */, AMDGPU::V_CMPX_T_U32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 16386 /* v_cmpx_tru_f16 */, AMDGPU::V_CMPX_TRU_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 16420 /* v_cmpx_tru_f32 */, AMDGPU::V_CMPX_TRU_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 16488 /* v_cmpx_u_f16 */, AMDGPU::V_CMPX_U_F16_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 16518 /* v_cmpx_u_f32 */, AMDGPU::V_CMPX_U_F32_sdwa_vi, ConvertCustom_cvtSdwaVOPC, Feature_isVI|Feature_isVI, { MCK_VCC, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 16592 /* v_cos_f16 */, AMDGPU::V_COS_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16602 /* v_cos_f32 */, AMDGPU::V_COS_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16664 /* v_cvt_f16_f32 */, AMDGPU::V_CVT_F16_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16678 /* v_cvt_f16_i16 */, AMDGPU::V_CVT_F16_I16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16692 /* v_cvt_f16_u16 */, AMDGPU::V_CVT_F16_U16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16706 /* v_cvt_f32_f16 */, AMDGPU::V_CVT_F32_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16734 /* v_cvt_f32_i32 */, AMDGPU::V_CVT_F32_I32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16748 /* v_cvt_f32_u32 */, AMDGPU::V_CVT_F32_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16762 /* v_cvt_f32_ubyte0 */, AMDGPU::V_CVT_F32_UBYTE0_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16779 /* v_cvt_f32_ubyte1 */, AMDGPU::V_CVT_F32_UBYTE1_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16796 /* v_cvt_f32_ubyte2 */, AMDGPU::V_CVT_F32_UBYTE2_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16813 /* v_cvt_f32_ubyte3 */, AMDGPU::V_CVT_F32_UBYTE3_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16872 /* v_cvt_flr_i32_f32 */, AMDGPU::V_CVT_FLR_I32_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16890 /* v_cvt_i16_f16 */, AMDGPU::V_CVT_I16_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16904 /* v_cvt_i32_f32 */, AMDGPU::V_CVT_I32_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 16932 /* v_cvt_off_f32_i4 */, AMDGPU::V_CVT_OFF_F32_I4_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17082 /* v_cvt_rpi_i32_f32 */, AMDGPU::V_CVT_RPI_I32_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17100 /* v_cvt_u16_f16 */, AMDGPU::V_CVT_U16_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17114 /* v_cvt_u32_f32 */, AMDGPU::V_CVT_U32_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17252 /* v_exp_f16 */, AMDGPU::V_EXP_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17262 /* v_exp_f32 */, AMDGPU::V_EXP_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17272 /* v_exp_legacy_f32 */, AMDGPU::V_EXP_LEGACY_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17289 /* v_ffbh_i32 */, AMDGPU::V_FFBH_I32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17300 /* v_ffbh_u32 */, AMDGPU::V_FFBH_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17311 /* v_ffbl_b32 */, AMDGPU::V_FFBL_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17322 /* v_floor_f16 */, AMDGPU::V_FLOOR_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17334 /* v_floor_f32 */, AMDGPU::V_FLOOR_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17388 /* v_fract_f16 */, AMDGPU::V_FRACT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17400 /* v_fract_f32 */, AMDGPU::V_FRACT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17424 /* v_frexp_exp_i16_f16 */, AMDGPU::V_FREXP_EXP_I16_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17444 /* v_frexp_exp_i32_f32 */, AMDGPU::V_FREXP_EXP_I32_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17484 /* v_frexp_mant_f16 */, AMDGPU::V_FREXP_MANT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17501 /* v_frexp_mant_f32 */, AMDGPU::V_FREXP_MANT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17636 /* v_ldexp_f16 */, AMDGPU::V_LDEXP_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17698 /* v_log_f16 */, AMDGPU::V_LOG_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17708 /* v_log_f32 */, AMDGPU::V_LOG_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17718 /* v_log_legacy_f32 */, AMDGPU::V_LOG_LEGACY_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isCIVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 17757 /* v_lshlrev_b16 */, AMDGPU::V_LSHLREV_B16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17771 /* v_lshlrev_b32 */, AMDGPU::V_LSHLREV_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17821 /* v_lshrrev_b16 */, AMDGPU::V_LSHRREV_B16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17835 /* v_lshrrev_b32 */, AMDGPU::V_LSHRREV_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17863 /* v_mac_f16 */, AMDGPU::V_MAC_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 17873 /* v_mac_f32 */, AMDGPU::V_MAC_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18094 /* v_max_f16 */, AMDGPU::V_MAX_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18104 /* v_max_f32 */, AMDGPU::V_MAX_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18124 /* v_max_i16 */, AMDGPU::V_MAX_I16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18134 /* v_max_i32 */, AMDGPU::V_MAX_I32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18161 /* v_max_u16 */, AMDGPU::V_MAX_U16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18171 /* v_max_u32 */, AMDGPU::V_MAX_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18285 /* v_min_f16 */, AMDGPU::V_MIN_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18295 /* v_min_f32 */, AMDGPU::V_MIN_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18315 /* v_min_i16 */, AMDGPU::V_MIN_I16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18325 /* v_min_i32 */, AMDGPU::V_MIN_I32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18352 /* v_min_u16 */, AMDGPU::V_MIN_U16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18362 /* v_min_u32 */, AMDGPU::V_MIN_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18372 /* v_mov_b32 */, AMDGPU::V_MOV_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 18497 /* v_mul_f16 */, AMDGPU::V_MUL_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18507 /* v_mul_f32 */, AMDGPU::V_MUL_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18540 /* v_mul_hi_i32_i24 */, AMDGPU::V_MUL_HI_I32_I24_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18570 /* v_mul_hi_u32_u24 */, AMDGPU::V_MUL_HI_U32_U24_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18587 /* v_mul_i32_i24 */, AMDGPU::V_MUL_I32_I24_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18601 /* v_mul_legacy_f32 */, AMDGPU::V_MUL_LEGACY_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18631 /* v_mul_lo_u16 */, AMDGPU::V_MUL_LO_U16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18657 /* v_mul_u32_u24 */, AMDGPU::V_MUL_U32_U24_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18684 /* v_nop */, AMDGPU::V_NOP_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, {  }, },
  { 18690 /* v_not_b32 */, AMDGPU::V_NOT_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 18700 /* v_or_b32 */, AMDGPU::V_OR_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 18758 /* v_rcp_f16 */, AMDGPU::V_RCP_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 18768 /* v_rcp_f32 */, AMDGPU::V_RCP_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 18788 /* v_rcp_iflag_f32 */, AMDGPU::V_RCP_IFLAG_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 18856 /* v_rndne_f16 */, AMDGPU::V_RNDNE_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 18868 /* v_rndne_f32 */, AMDGPU::V_RNDNE_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 18924 /* v_rsq_f16 */, AMDGPU::V_RSQ_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 18934 /* v_rsq_f32 */, AMDGPU::V_RSQ_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 19012 /* v_sin_f16 */, AMDGPU::V_SIN_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 19022 /* v_sin_f32 */, AMDGPU::V_SIN_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 19032 /* v_sqrt_f16 */, AMDGPU::V_SQRT_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 19043 /* v_sqrt_f32 */, AMDGPU::V_SQRT_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 19065 /* v_sub_f16 */, AMDGPU::V_SUB_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19075 /* v_sub_f32 */, AMDGPU::V_SUB_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19085 /* v_sub_i32 */, AMDGPU::V_SUB_I32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19095 /* v_sub_u16 */, AMDGPU::V_SUB_U16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19105 /* v_subb_u32 */, AMDGPU::V_SUBB_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_RegOrImmWithInt32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_VCC, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19116 /* v_subbrev_u32 */, AMDGPU::V_SUBBREV_U32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_RegOrImmWithInt32InputMods, MCK_RegOrImmWithInt32InputMods, MCK_VCC, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19130 /* v_subrev_f16 */, AMDGPU::V_SUBREV_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19143 /* v_subrev_f32 */, AMDGPU::V_SUBREV_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19156 /* v_subrev_i32 */, AMDGPU::V_SUBREV_I32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19169 /* v_subrev_u16 */, AMDGPU::V_SUBREV_U16_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
  { 19199 /* v_trunc_f16 */, AMDGPU::V_TRUNC_F16_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 19211 /* v_trunc_f32 */, AMDGPU::V_TRUNC_F32_sdwa_vi, ConvertCustom_cvtSdwaVOP1, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel }, },
  { 19251 /* v_xor_b32 */, AMDGPU::V_XOR_B32_sdwa_vi, ConvertCustom_cvtSdwaVOP2, Feature_isGCN|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithIntInputMods, MCK_VRegWithIntInputMods, MCK_ImmClampSI, MCK_ImmSDWADstSel, MCK_ImmSDWADstUnused, MCK_ImmSDWASrc0Sel, MCK_ImmSDWASrc1Sel }, },
};

static const MatchEntry MatchTable3[] = {
  { 0 /* CALL_FS */, AMDGPU::CF_CALL_FS_EG, Convert_NoOperands, 0, {  }, },
  { 0 /* CALL_FS */, AMDGPU::CF_CALL_FS_R600, Convert_NoOperands, 0, {  }, },
  { 8 /* CF_END */, AMDGPU::CF_END_CM, Convert_NoOperands, 0, {  }, },
  { 8 /* CF_END */, AMDGPU::CF_END_EG, Convert_NoOperands, 0, {  }, },
  { 8 /* CF_END */, AMDGPU::CF_END_R600, Convert_NoOperands, 0, {  }, },
  { 15 /* CONTINUE */, AMDGPU::CF_CONTINUE_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 15 /* CONTINUE */, AMDGPU::CF_CONTINUE_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 24 /* ELSE */, AMDGPU::CF_ELSE_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 24 /* ELSE */, AMDGPU::CF_ELSE_R600, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 29 /* END_LOOP */, AMDGPU::END_LOOP_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 29 /* END_LOOP */, AMDGPU::END_LOOP_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 38 /* INTERP_LOAD */, AMDGPU::INTERP_VEC_LOAD, Convert__Reg1_2__Imm1_0, 0, { MCK_Imm, MCK__COLON_, MCK_R600_Reg128 }, },
  { 50 /* INTERP_PAIR_XY */, AMDGPU::INTERP_PAIR_XY, Convert__Reg1_4__imm_95_0__Imm1_0__Reg1_1__Reg1_2, 0, { MCK_Imm, MCK_R600_TReg32_Y, MCK_R600_TReg32_X, MCK__COLON_, MCK_R600_TReg32_X, MCK_dst1 }, },
  { 65 /* INTERP_PAIR_ZW */, AMDGPU::INTERP_PAIR_ZW, Convert__Reg1_4__imm_95_0__Imm1_0__Reg1_1__Reg1_2, 0, { MCK_Imm, MCK_R600_TReg32_Y, MCK_R600_TReg32_X, MCK__COLON_, MCK_R600_TReg32_Z, MCK_dst1 }, },
  { 80 /* JUMP */, AMDGPU::CF_JUMP_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 80 /* JUMP */, AMDGPU::CF_JUMP_R600, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 85 /* LOOP_BREAK */, AMDGPU::LOOP_BREAK_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 85 /* LOOP_BREAK */, AMDGPU::LOOP_BREAK_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 96 /* LOOP_START_DX10 */, AMDGPU::WHILE_LOOP_EG, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 96 /* LOOP_START_DX10 */, AMDGPU::WHILE_LOOP_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 112 /* MASK_WRITE */, AMDGPU::MASK_WRITE, Convert__Reg1_0, 0, { MCK_R600_Reg32 }, },
  { 123 /* PAD */, AMDGPU::PAD, Convert_NoOperands, 0, {  }, },
  { 127 /* POP */, AMDGPU::POP_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 127 /* POP */, AMDGPU::POP_R600, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 131 /* PUSH */, AMDGPU::CF_PUSH_EG, Convert__Imm1_1__Imm1_3, 0, { MCK__64_, MCK_Imm, MCK_POP_COLON_, MCK_Imm }, },
  { 136 /* PUSH_ELSE */, AMDGPU::CF_PUSH_ELSE_R600, Convert__Imm1_1, 0, { MCK__64_, MCK_Imm }, },
  { 146 /* TEX */, AMDGPU::CF_TC_EG, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 146 /* TEX */, AMDGPU::CF_TC_R600, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 150 /* VTX */, AMDGPU::CF_VC_EG, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 150 /* VTX */, AMDGPU::CF_VC_R600, Convert__Imm1_2__Imm1_0, 0, { MCK_Imm, MCK__64_, MCK_Imm }, },
  { 7984 /* v_add_f16 */, AMDGPU::V_ADD_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 7994 /* v_add_f32 */, AMDGPU::V_ADD_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 8014 /* v_add_i32 */, AMDGPU::V_ADD_I32_dpp, Convert__Reg1_0__Reg1_2__Reg1_3__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 8024 /* v_add_u16 */, AMDGPU::V_ADD_U16_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 8034 /* v_addc_u32 */, AMDGPU::V_ADDC_U32_dpp, Convert__Reg1_0__imm_95_0__Reg1_2__imm_95_0__Reg1_3__ImmDPPCtrl1_5__ImmRowMask1_6__ImmBankMask1_7__ImmBoundCtrl1_8, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_VCC, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 8076 /* v_and_b32 */, AMDGPU::V_AND_B32_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 8108 /* v_ashrrev_i16 */, AMDGPU::V_ASHRREV_I16_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 8122 /* v_ashrrev_i32 */, AMDGPU::V_ASHRREV_I32_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 8205 /* v_bfrev_b32 */, AMDGPU::V_BFREV_B32_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 8217 /* v_ceil_f16 */, AMDGPU::V_CEIL_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 8228 /* v_ceil_f32 */, AMDGPU::V_CEIL_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16592 /* v_cos_f16 */, AMDGPU::V_COS_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16602 /* v_cos_f32 */, AMDGPU::V_COS_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16664 /* v_cvt_f16_f32 */, AMDGPU::V_CVT_F16_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16678 /* v_cvt_f16_i16 */, AMDGPU::V_CVT_F16_I16_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16692 /* v_cvt_f16_u16 */, AMDGPU::V_CVT_F16_U16_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16706 /* v_cvt_f32_f16 */, AMDGPU::V_CVT_F32_F16_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16734 /* v_cvt_f32_i32 */, AMDGPU::V_CVT_F32_I32_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16748 /* v_cvt_f32_u32 */, AMDGPU::V_CVT_F32_U32_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16762 /* v_cvt_f32_ubyte0 */, AMDGPU::V_CVT_F32_UBYTE0_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16779 /* v_cvt_f32_ubyte1 */, AMDGPU::V_CVT_F32_UBYTE1_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16796 /* v_cvt_f32_ubyte2 */, AMDGPU::V_CVT_F32_UBYTE2_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16813 /* v_cvt_f32_ubyte3 */, AMDGPU::V_CVT_F32_UBYTE3_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16872 /* v_cvt_flr_i32_f32 */, AMDGPU::V_CVT_FLR_I32_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16890 /* v_cvt_i16_f16 */, AMDGPU::V_CVT_I16_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16904 /* v_cvt_i32_f32 */, AMDGPU::V_CVT_I32_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 16932 /* v_cvt_off_f32_i4 */, AMDGPU::V_CVT_OFF_F32_I4_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17082 /* v_cvt_rpi_i32_f32 */, AMDGPU::V_CVT_RPI_I32_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17100 /* v_cvt_u16_f16 */, AMDGPU::V_CVT_U16_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17114 /* v_cvt_u32_f32 */, AMDGPU::V_CVT_U32_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17252 /* v_exp_f16 */, AMDGPU::V_EXP_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17262 /* v_exp_f32 */, AMDGPU::V_EXP_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17272 /* v_exp_legacy_f32 */, AMDGPU::V_EXP_LEGACY_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17289 /* v_ffbh_i32 */, AMDGPU::V_FFBH_I32_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17300 /* v_ffbh_u32 */, AMDGPU::V_FFBH_U32_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17311 /* v_ffbl_b32 */, AMDGPU::V_FFBL_B32_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17322 /* v_floor_f16 */, AMDGPU::V_FLOOR_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17334 /* v_floor_f32 */, AMDGPU::V_FLOOR_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17388 /* v_fract_f16 */, AMDGPU::V_FRACT_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17400 /* v_fract_f32 */, AMDGPU::V_FRACT_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17424 /* v_frexp_exp_i16_f16 */, AMDGPU::V_FREXP_EXP_I16_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17444 /* v_frexp_exp_i32_f32 */, AMDGPU::V_FREXP_EXP_I32_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17484 /* v_frexp_mant_f16 */, AMDGPU::V_FREXP_MANT_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17501 /* v_frexp_mant_f32 */, AMDGPU::V_FREXP_MANT_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17636 /* v_ldexp_f16 */, AMDGPU::V_LDEXP_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithIntInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17698 /* v_log_f16 */, AMDGPU::V_LOG_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17708 /* v_log_f32 */, AMDGPU::V_LOG_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17718 /* v_log_legacy_f32 */, AMDGPU::V_LOG_LEGACY_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17757 /* v_lshlrev_b16 */, AMDGPU::V_LSHLREV_B16_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17771 /* v_lshlrev_b32 */, AMDGPU::V_LSHLREV_B32_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17821 /* v_lshrrev_b16 */, AMDGPU::V_LSHRREV_B16_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17835 /* v_lshrrev_b32 */, AMDGPU::V_LSHRREV_B32_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17863 /* v_mac_f16 */, AMDGPU::V_MAC_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 17873 /* v_mac_f32 */, AMDGPU::V_MAC_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18094 /* v_max_f16 */, AMDGPU::V_MAX_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18104 /* v_max_f32 */, AMDGPU::V_MAX_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18124 /* v_max_i16 */, AMDGPU::V_MAX_I16_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18134 /* v_max_i32 */, AMDGPU::V_MAX_I32_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18161 /* v_max_u16 */, AMDGPU::V_MAX_U16_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18171 /* v_max_u32 */, AMDGPU::V_MAX_U32_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18285 /* v_min_f16 */, AMDGPU::V_MIN_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18295 /* v_min_f32 */, AMDGPU::V_MIN_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18315 /* v_min_i16 */, AMDGPU::V_MIN_I16_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18325 /* v_min_i32 */, AMDGPU::V_MIN_I32_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18352 /* v_min_u16 */, AMDGPU::V_MIN_U16_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18362 /* v_min_u32 */, AMDGPU::V_MIN_U32_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18372 /* v_mov_b32 */, AMDGPU::V_MOV_B32_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18497 /* v_mul_f16 */, AMDGPU::V_MUL_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18507 /* v_mul_f32 */, AMDGPU::V_MUL_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18540 /* v_mul_hi_i32_i24 */, AMDGPU::V_MUL_HI_I32_I24_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18570 /* v_mul_hi_u32_u24 */, AMDGPU::V_MUL_HI_U32_U24_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18587 /* v_mul_i32_i24 */, AMDGPU::V_MUL_I32_I24_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18601 /* v_mul_legacy_f32 */, AMDGPU::V_MUL_LEGACY_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18631 /* v_mul_lo_u16 */, AMDGPU::V_MUL_LO_U16_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18657 /* v_mul_u32_u24 */, AMDGPU::V_MUL_U32_U24_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18684 /* v_nop */, AMDGPU::V_NOP_dpp, Convert__ImmDPPCtrl1_0__ImmRowMask1_1__ImmBankMask1_2__ImmBoundCtrl1_3, Feature_isVI|Feature_isVI, { MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18690 /* v_not_b32 */, AMDGPU::V_NOT_B32_dpp, Convert__Reg1_0__Reg1_1__ImmDPPCtrl1_2__ImmRowMask1_3__ImmBankMask1_4__ImmBoundCtrl1_5, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18700 /* v_or_b32 */, AMDGPU::V_OR_B32_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18758 /* v_rcp_f16 */, AMDGPU::V_RCP_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18768 /* v_rcp_f32 */, AMDGPU::V_RCP_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18788 /* v_rcp_iflag_f32 */, AMDGPU::V_RCP_IFLAG_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18856 /* v_rndne_f16 */, AMDGPU::V_RNDNE_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18868 /* v_rndne_f32 */, AMDGPU::V_RNDNE_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18924 /* v_rsq_f16 */, AMDGPU::V_RSQ_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 18934 /* v_rsq_f32 */, AMDGPU::V_RSQ_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19012 /* v_sin_f16 */, AMDGPU::V_SIN_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19022 /* v_sin_f32 */, AMDGPU::V_SIN_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19032 /* v_sqrt_f16 */, AMDGPU::V_SQRT_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19043 /* v_sqrt_f32 */, AMDGPU::V_SQRT_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19065 /* v_sub_f16 */, AMDGPU::V_SUB_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19075 /* v_sub_f32 */, AMDGPU::V_SUB_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19085 /* v_sub_i32 */, AMDGPU::V_SUB_I32_dpp, Convert__Reg1_0__Reg1_2__Reg1_3__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19095 /* v_sub_u16 */, AMDGPU::V_SUB_U16_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19105 /* v_subb_u32 */, AMDGPU::V_SUBB_U32_dpp, Convert__Reg1_0__imm_95_0__Reg1_2__imm_95_0__Reg1_3__ImmDPPCtrl1_5__ImmRowMask1_6__ImmBankMask1_7__ImmBoundCtrl1_8, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_VCC, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19116 /* v_subbrev_u32 */, AMDGPU::V_SUBBREV_U32_dpp, Convert__Reg1_0__imm_95_0__Reg1_2__imm_95_0__Reg1_3__ImmDPPCtrl1_5__ImmRowMask1_6__ImmBankMask1_7__ImmBoundCtrl1_8, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_VCC, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19130 /* v_subrev_f16 */, AMDGPU::V_SUBREV_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19143 /* v_subrev_f32 */, AMDGPU::V_SUBREV_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19156 /* v_subrev_i32 */, AMDGPU::V_SUBREV_I32_dpp, Convert__Reg1_0__Reg1_2__Reg1_3__ImmDPPCtrl1_4__ImmRowMask1_5__ImmBankMask1_6__ImmBoundCtrl1_7, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VCC, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19169 /* v_subrev_u16 */, AMDGPU::V_SUBREV_U16_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19199 /* v_trunc_f16 */, AMDGPU::V_TRUNC_F16_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19211 /* v_trunc_f32 */, AMDGPU::V_TRUNC_F32_dpp, ConvertCustom_cvtDPP, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VRegWithFPInputMods, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
  { 19251 /* v_xor_b32 */, AMDGPU::V_XOR_B32_dpp, Convert__Reg1_0__Reg1_1__Reg1_2__ImmDPPCtrl1_3__ImmRowMask1_4__ImmBankMask1_5__ImmBoundCtrl1_6, Feature_isVI|Feature_isVI, { MCK_VGPR_32, MCK_VGPR_32, MCK_VGPR_32, MCK_ImmDPPCtrl, MCK_ImmRowMask, MCK_ImmBankMask, MCK_ImmBoundCtrl }, },
};

bool AMDGPUAsmParser::
mnemonicIsValid(StringRef Mnemonic, unsigned VariantID) {
  // Find the appropriate table for this asm variant.
  const MatchEntry *Start, *End;
  switch (VariantID) {
  default: llvm_unreachable("invalid variant!");
  case 0: Start = std::begin(MatchTable0); End = std::end(MatchTable0); break;
  case 1: Start = std::begin(MatchTable1); End = std::end(MatchTable1); break;
  case 2: Start = std::begin(MatchTable2); End = std::end(MatchTable2); break;
  case 3: Start = std::begin(MatchTable3); End = std::end(MatchTable3); break;
  }
  // Search the table.
  auto MnemonicRange = std::equal_range(Start, End, Mnemonic, LessOpcode());
  return MnemonicRange.first != MnemonicRange.second;
}

unsigned AMDGPUAsmParser::
MatchInstructionImpl(const OperandVector &Operands,
                     MCInst &Inst, uint64_t &ErrorInfo,
                     bool matchingInlineAsm, unsigned VariantID) {
  // Eliminate obvious mismatches.
  if (Operands.size() > 14) {
    ErrorInfo = 14;
    return Match_InvalidOperand;
  }

  // Get the current feature set.
  uint64_t AvailableFeatures = getAvailableFeatures();

  // Get the instruction mnemonic, which is the first token.
  StringRef Mnemonic = ((AMDGPUOperand&)*Operands[0]).getToken();

  // Process all MnemonicAliases to remap the mnemonic.
  applyMnemonicAliases(Mnemonic, AvailableFeatures, VariantID);

  // Some state to try to produce better error messages.
  bool HadMatchOtherThanFeatures = false;
  bool HadMatchOtherThanPredicate = false;
  unsigned RetCode = Match_InvalidOperand;
  uint64_t MissingFeatures = ~0ULL;
  SmallBitVector OptionalOperandsMask(13);
  // Set ErrorInfo to the operand that mismatches if it is
  // wrong for all instances of the instruction.
  ErrorInfo = ~0ULL;
  // Find the appropriate table for this asm variant.
  const MatchEntry *Start, *End;
  switch (VariantID) {
  default: llvm_unreachable("invalid variant!");
  case 0: Start = std::begin(MatchTable0); End = std::end(MatchTable0); break;
  case 1: Start = std::begin(MatchTable1); End = std::end(MatchTable1); break;
  case 2: Start = std::begin(MatchTable2); End = std::end(MatchTable2); break;
  case 3: Start = std::begin(MatchTable3); End = std::end(MatchTable3); break;
  }
  // Search the table.
  auto MnemonicRange = std::equal_range(Start, End, Mnemonic, LessOpcode());

  // Return a more specific error code if no mnemonics match.
  if (MnemonicRange.first == MnemonicRange.second)
    return Match_MnemonicFail;

  for (const MatchEntry *it = MnemonicRange.first, *ie = MnemonicRange.second;
       it != ie; ++it) {
    // equal_range guarantees that instruction mnemonic matches.
    assert(Mnemonic == it->getMnemonic());
    bool OperandsValid = true;
    OptionalOperandsMask.reset(0, 13);
    for (unsigned FormalIdx = 0, ActualIdx = 1; FormalIdx != 13; ++FormalIdx) {
      auto Formal = static_cast<MatchClassKind>(it->Classes[FormalIdx]);
      if (ActualIdx >= Operands.size()) {
        OperandsValid = (Formal == InvalidMatchClass) || isSubclass(Formal, OptionalMatchClass);
        if (!OperandsValid) ErrorInfo = ActualIdx;
        OptionalOperandsMask.set(FormalIdx, 13);
        break;
      }
      MCParsedAsmOperand &Actual = *Operands[ActualIdx];
      unsigned Diag = validateOperandClass(Actual, Formal);
      if (Diag == Match_Success) {
        ++ActualIdx;
        continue;
      }
      // If the generic handler indicates an invalid operand
      // failure, check for a special case.
      if (Diag == Match_InvalidOperand) {
        Diag = validateTargetOperandClass(Actual, Formal);
        if (Diag == Match_Success) {
          ++ActualIdx;
          continue;
        }
      }
      // If current formal operand wasn't matched and it is optional
      // then try to match next formal operand
      if (Diag == Match_InvalidOperand && isSubclass(Formal, OptionalMatchClass)) {
        OptionalOperandsMask.set(FormalIdx);
        continue;
      }
      // If this operand is broken for all of the instances of this
      // mnemonic, keep track of it so we can report loc info.
      // If we already had a match that only failed due to a
      // target predicate, that diagnostic is preferred.
      if (!HadMatchOtherThanPredicate &&
          (it == MnemonicRange.first || ErrorInfo <= ActualIdx)) {
        ErrorInfo = ActualIdx;
        // InvalidOperand is the default. Prefer specificity.
        if (Diag != Match_InvalidOperand)
          RetCode = Diag;
      }
      // Otherwise, just reject this instance of the mnemonic.
      OperandsValid = false;
      break;
    }

    if (!OperandsValid) continue;
    if ((AvailableFeatures & it->RequiredFeatures) != it->RequiredFeatures) {
      HadMatchOtherThanFeatures = true;
      uint64_t NewMissingFeatures = it->RequiredFeatures & ~AvailableFeatures;
      if (countPopulation(NewMissingFeatures) <=
          countPopulation(MissingFeatures))
        MissingFeatures = NewMissingFeatures;
      continue;
    }

    Inst.clear();

    Inst.setOpcode(it->Opcode);
    // We have a potential match but have not rendered the operands.
    // Check the target predicate to handle any context sensitive
    // constraints.
    // For example, Ties that are referenced multiple times must be
    // checked here to ensure the input is the same for each match
    // constraints. If we leave it any later the ties will have been
    // canonicalized
    unsigned MatchResult;
    if ((MatchResult = checkEarlyTargetMatchPredicate(Inst, Operands)) != Match_Success) {
      Inst.clear();
      RetCode = MatchResult;
      HadMatchOtherThanPredicate = true;
      continue;
    }

    if (matchingInlineAsm) {
      convertToMapAndConstraints(it->ConvertFn, Operands);
      return Match_Success;
    }

    // We have selected a definite instruction, convert the parsed
    // operands into the appropriate MCInst.
    convertToMCInst(it->ConvertFn, Inst, it->Opcode, Operands,
                    OptionalOperandsMask);

    // We have a potential match. Check the target predicate to
    // handle any context sensitive constraints.
    if ((MatchResult = checkTargetMatchPredicate(Inst)) != Match_Success) {
      Inst.clear();
      RetCode = MatchResult;
      HadMatchOtherThanPredicate = true;
      continue;
    }

    return Match_Success;
  }

  // Okay, we had no match.  Try to return a useful error code.
  if (HadMatchOtherThanPredicate || !HadMatchOtherThanFeatures)
    return RetCode;

  // Missing feature matches return which features were missing
  ErrorInfo = MissingFeatures;
  return Match_MissingFeature;
}

namespace {
  struct OperandMatchEntry {
    uint16_t RequiredFeatures;
    uint16_t Mnemonic;
    uint8_t Class;
    uint16_t OperandMask;

    StringRef getMnemonic() const {
      return StringRef(MnemonicTable + Mnemonic + 1,
                       MnemonicTable[Mnemonic]);
    }
  };

  // Predicate for searching for an opcode.
  struct LessOpcodeOperand {
    bool operator()(const OperandMatchEntry &LHS, StringRef RHS) {
      return LHS.getMnemonic()  < RHS;
    }
    bool operator()(StringRef LHS, const OperandMatchEntry &RHS) {
      return LHS < RHS.getMnemonic();
    }
    bool operator()(const OperandMatchEntry &LHS, const OperandMatchEntry &RHS) {
      return LHS.getMnemonic() < RHS.getMnemonic();
    }
  };
} // end anonymous namespace.

static const OperandMatchEntry OperandMatchTable[17014] = {
  /* Operand List Mask, Mnemonic, Operand Class, Features */
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 154 /* buffer_atomic_add */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 172 /* buffer_atomic_add_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 193 /* buffer_atomic_and */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 211 /* buffer_atomic_and_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 232 /* buffer_atomic_cmpswap */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 254 /* buffer_atomic_cmpswap_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 279 /* buffer_atomic_dec */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 297 /* buffer_atomic_dec_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 318 /* buffer_atomic_inc */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 336 /* buffer_atomic_inc_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 357 /* buffer_atomic_or */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 374 /* buffer_atomic_or_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 394 /* buffer_atomic_smax */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 413 /* buffer_atomic_smax_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 435 /* buffer_atomic_smin */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 454 /* buffer_atomic_smin_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 476 /* buffer_atomic_sub */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 494 /* buffer_atomic_sub_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 515 /* buffer_atomic_swap */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 534 /* buffer_atomic_swap_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 556 /* buffer_atomic_umax */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 575 /* buffer_atomic_umax_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 597 /* buffer_atomic_umin */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 616 /* buffer_atomic_umin_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 638 /* buffer_atomic_xor */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 656 /* buffer_atomic_xor_x2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 677 /* buffer_load_dword */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 677 /* buffer_load_dword */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 695 /* buffer_load_dwordx2 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 695 /* buffer_load_dwordx2 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 715 /* buffer_load_dwordx3 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 715 /* buffer_load_dwordx3 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 735 /* buffer_load_dwordx4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 735 /* buffer_load_dwordx4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 755 /* buffer_load_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 755 /* buffer_load_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 776 /* buffer_load_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 776 /* buffer_load_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 798 /* buffer_load_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 798 /* buffer_load_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 821 /* buffer_load_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 821 /* buffer_load_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 845 /* buffer_load_sbyte */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 845 /* buffer_load_sbyte */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 863 /* buffer_load_sshort */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 863 /* buffer_load_sshort */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 882 /* buffer_load_ubyte */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 882 /* buffer_load_ubyte */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 900 /* buffer_load_ushort */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 900 /* buffer_load_ushort */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 919 /* buffer_store_byte */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 919 /* buffer_store_byte */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 937 /* buffer_store_dword */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 937 /* buffer_store_dword */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 956 /* buffer_store_dwordx2 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 956 /* buffer_store_dwordx2 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 977 /* buffer_store_dwordx3 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 977 /* buffer_store_dwordx3 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 998 /* buffer_store_dwordx4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 998 /* buffer_store_dwordx4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1019 /* buffer_store_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1019 /* buffer_store_format_x */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1041 /* buffer_store_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1041 /* buffer_store_format_xy */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1064 /* buffer_store_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1064 /* buffer_store_format_xyz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1088 /* buffer_store_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1088 /* buffer_store_format_xyzw */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmTFE, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmOffset, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 1113 /* buffer_store_short */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmOffset, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmGLC, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmSLC, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 1113 /* buffer_store_short */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 1184 /* ds_add_f32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1184 /* ds_add_f32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1195 /* ds_add_rtn_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1195 /* ds_add_rtn_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1210 /* ds_add_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1210 /* ds_add_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1210 /* ds_add_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1210 /* ds_add_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1225 /* ds_add_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1225 /* ds_add_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1225 /* ds_add_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1225 /* ds_add_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1240 /* ds_add_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1240 /* ds_add_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1240 /* ds_add_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1240 /* ds_add_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1256 /* ds_add_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1256 /* ds_add_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1256 /* ds_add_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1256 /* ds_add_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1272 /* ds_add_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1272 /* ds_add_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1272 /* ds_add_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1272 /* ds_add_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1283 /* ds_add_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1283 /* ds_add_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1283 /* ds_add_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1283 /* ds_add_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1294 /* ds_and_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1294 /* ds_and_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1294 /* ds_and_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1294 /* ds_and_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1305 /* ds_and_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1305 /* ds_and_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1305 /* ds_and_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1305 /* ds_and_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1316 /* ds_and_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1316 /* ds_and_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1316 /* ds_and_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1316 /* ds_and_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1331 /* ds_and_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1331 /* ds_and_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1331 /* ds_and_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1331 /* ds_and_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1346 /* ds_and_src2_b64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1346 /* ds_and_src2_b64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1346 /* ds_and_src2_b64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1346 /* ds_and_src2_b64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1362 /* ds_and_src_b32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1362 /* ds_and_src_b32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1362 /* ds_and_src_b32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1362 /* ds_and_src_b32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isSICI|Feature_isSICI, 1377 /* ds_append */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 1377 /* ds_append */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 1387 /* ds_bpermute_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1403 /* ds_cmpst_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1403 /* ds_cmpst_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1403 /* ds_cmpst_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1403 /* ds_cmpst_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1416 /* ds_cmpst_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1416 /* ds_cmpst_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1416 /* ds_cmpst_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1416 /* ds_cmpst_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1429 /* ds_cmpst_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1429 /* ds_cmpst_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1429 /* ds_cmpst_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1429 /* ds_cmpst_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1442 /* ds_cmpst_f64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1442 /* ds_cmpst_f64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1442 /* ds_cmpst_f64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1442 /* ds_cmpst_f64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1455 /* ds_cmpst_rtn_b32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1455 /* ds_cmpst_rtn_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1455 /* ds_cmpst_rtn_b32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1455 /* ds_cmpst_rtn_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1472 /* ds_cmpst_rtn_b64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1472 /* ds_cmpst_rtn_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1472 /* ds_cmpst_rtn_b64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1472 /* ds_cmpst_rtn_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1489 /* ds_cmpst_rtn_f32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1489 /* ds_cmpst_rtn_f32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1489 /* ds_cmpst_rtn_f32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1489 /* ds_cmpst_rtn_f32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 1506 /* ds_cmpst_rtn_f64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1506 /* ds_cmpst_rtn_f64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 1506 /* ds_cmpst_rtn_f64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1506 /* ds_cmpst_rtn_f64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isSICI|Feature_isSICI, 1523 /* ds_consume */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 1523 /* ds_consume */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1534 /* ds_dec_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1534 /* ds_dec_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1534 /* ds_dec_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1534 /* ds_dec_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1549 /* ds_dec_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1549 /* ds_dec_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1549 /* ds_dec_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1549 /* ds_dec_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1564 /* ds_dec_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1564 /* ds_dec_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1564 /* ds_dec_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1564 /* ds_dec_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1580 /* ds_dec_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1580 /* ds_dec_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1580 /* ds_dec_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1580 /* ds_dec_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1596 /* ds_dec_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1596 /* ds_dec_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1596 /* ds_dec_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1596 /* ds_dec_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1607 /* ds_dec_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1607 /* ds_dec_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1607 /* ds_dec_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1607 /* ds_dec_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1688 /* ds_inc_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1688 /* ds_inc_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1688 /* ds_inc_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1688 /* ds_inc_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1703 /* ds_inc_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1703 /* ds_inc_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1703 /* ds_inc_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1703 /* ds_inc_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1718 /* ds_inc_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1718 /* ds_inc_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1718 /* ds_inc_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1718 /* ds_inc_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1734 /* ds_inc_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1734 /* ds_inc_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1734 /* ds_inc_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1734 /* ds_inc_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1750 /* ds_inc_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1750 /* ds_inc_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1750 /* ds_inc_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1750 /* ds_inc_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1761 /* ds_inc_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1761 /* ds_inc_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1761 /* ds_inc_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1761 /* ds_inc_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1772 /* ds_max_f32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1772 /* ds_max_f32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1772 /* ds_max_f32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1772 /* ds_max_f32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1783 /* ds_max_f64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1783 /* ds_max_f64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1783 /* ds_max_f64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1783 /* ds_max_f64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1794 /* ds_max_i32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1794 /* ds_max_i32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1794 /* ds_max_i32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1794 /* ds_max_i32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1805 /* ds_max_i64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1805 /* ds_max_i64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1805 /* ds_max_i64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1805 /* ds_max_i64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1816 /* ds_max_rtn_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1816 /* ds_max_rtn_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1816 /* ds_max_rtn_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1816 /* ds_max_rtn_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1831 /* ds_max_rtn_f64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1831 /* ds_max_rtn_f64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1831 /* ds_max_rtn_f64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1831 /* ds_max_rtn_f64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1846 /* ds_max_rtn_i32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1846 /* ds_max_rtn_i32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1846 /* ds_max_rtn_i32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1846 /* ds_max_rtn_i32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1861 /* ds_max_rtn_i64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1861 /* ds_max_rtn_i64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1861 /* ds_max_rtn_i64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1861 /* ds_max_rtn_i64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1876 /* ds_max_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1876 /* ds_max_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1876 /* ds_max_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1876 /* ds_max_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1891 /* ds_max_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 1891 /* ds_max_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 1891 /* ds_max_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 1891 /* ds_max_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 1906 /* ds_max_src2_f32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1906 /* ds_max_src2_f32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1906 /* ds_max_src2_f32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1906 /* ds_max_src2_f32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1922 /* ds_max_src2_f64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1922 /* ds_max_src2_f64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1922 /* ds_max_src2_f64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1922 /* ds_max_src2_f64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1938 /* ds_max_src2_i32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1938 /* ds_max_src2_i32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1938 /* ds_max_src2_i32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1938 /* ds_max_src2_i32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1954 /* ds_max_src2_i64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1954 /* ds_max_src2_i64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1954 /* ds_max_src2_i64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1954 /* ds_max_src2_i64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1970 /* ds_max_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1970 /* ds_max_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1970 /* ds_max_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1970 /* ds_max_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 1986 /* ds_max_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 1986 /* ds_max_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 1986 /* ds_max_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 1986 /* ds_max_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2002 /* ds_max_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2002 /* ds_max_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2002 /* ds_max_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2002 /* ds_max_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2013 /* ds_max_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2013 /* ds_max_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2013 /* ds_max_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2013 /* ds_max_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2024 /* ds_min_f32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2024 /* ds_min_f32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2024 /* ds_min_f32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2024 /* ds_min_f32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2035 /* ds_min_f64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2035 /* ds_min_f64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2035 /* ds_min_f64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2035 /* ds_min_f64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2046 /* ds_min_i32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2046 /* ds_min_i32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2046 /* ds_min_i32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2046 /* ds_min_i32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2057 /* ds_min_i64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2057 /* ds_min_i64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2057 /* ds_min_i64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2057 /* ds_min_i64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2068 /* ds_min_rtn_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2068 /* ds_min_rtn_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2068 /* ds_min_rtn_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2068 /* ds_min_rtn_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2083 /* ds_min_rtn_f64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2083 /* ds_min_rtn_f64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2083 /* ds_min_rtn_f64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2083 /* ds_min_rtn_f64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2098 /* ds_min_rtn_i32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2098 /* ds_min_rtn_i32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2098 /* ds_min_rtn_i32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2098 /* ds_min_rtn_i32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2113 /* ds_min_rtn_i64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2113 /* ds_min_rtn_i64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2113 /* ds_min_rtn_i64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2113 /* ds_min_rtn_i64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2128 /* ds_min_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2128 /* ds_min_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2128 /* ds_min_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2128 /* ds_min_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2143 /* ds_min_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2143 /* ds_min_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2143 /* ds_min_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2143 /* ds_min_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2158 /* ds_min_src2_f32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2158 /* ds_min_src2_f32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2158 /* ds_min_src2_f32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2158 /* ds_min_src2_f32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2174 /* ds_min_src2_f64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2174 /* ds_min_src2_f64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2174 /* ds_min_src2_f64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2174 /* ds_min_src2_f64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2190 /* ds_min_src2_i32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2190 /* ds_min_src2_i32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2190 /* ds_min_src2_i32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2190 /* ds_min_src2_i32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2206 /* ds_min_src2_i64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2206 /* ds_min_src2_i64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2206 /* ds_min_src2_i64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2206 /* ds_min_src2_i64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2222 /* ds_min_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2222 /* ds_min_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2222 /* ds_min_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2222 /* ds_min_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2238 /* ds_min_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2238 /* ds_min_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2238 /* ds_min_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2238 /* ds_min_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2254 /* ds_min_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2254 /* ds_min_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2254 /* ds_min_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2254 /* ds_min_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2265 /* ds_min_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2265 /* ds_min_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2265 /* ds_min_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2265 /* ds_min_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2276 /* ds_mskor_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2276 /* ds_mskor_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2276 /* ds_mskor_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2276 /* ds_mskor_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2289 /* ds_mskor_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2289 /* ds_mskor_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2289 /* ds_mskor_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2289 /* ds_mskor_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2302 /* ds_mskor_rtn_b32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2302 /* ds_mskor_rtn_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 2302 /* ds_mskor_rtn_b32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2302 /* ds_mskor_rtn_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 2319 /* ds_mskor_rtn_b64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2319 /* ds_mskor_rtn_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 2319 /* ds_mskor_rtn_b64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2319 /* ds_mskor_rtn_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 2336 /* ds_or_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2336 /* ds_or_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2336 /* ds_or_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2336 /* ds_or_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2346 /* ds_or_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2346 /* ds_or_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2346 /* ds_or_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2346 /* ds_or_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2356 /* ds_or_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2356 /* ds_or_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2356 /* ds_or_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2356 /* ds_or_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2370 /* ds_or_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2370 /* ds_or_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2370 /* ds_or_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2370 /* ds_or_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2384 /* ds_or_src2_b32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2384 /* ds_or_src2_b32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2384 /* ds_or_src2_b32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2384 /* ds_or_src2_b32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2399 /* ds_or_src2_b64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2399 /* ds_or_src2_b64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2399 /* ds_or_src2_b64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2399 /* ds_or_src2_b64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isSICI|Feature_isSICI, 2414 /* ds_ordered_count */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 2431 /* ds_permute_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2446 /* ds_read2_b32 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2446 /* ds_read2_b32 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2446 /* ds_read2_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2446 /* ds_read2_b32 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2446 /* ds_read2_b32 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2446 /* ds_read2_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2459 /* ds_read2_b64 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2459 /* ds_read2_b64 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2459 /* ds_read2_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2459 /* ds_read2_b64 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2459 /* ds_read2_b64 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2459 /* ds_read2_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2472 /* ds_read2st64_b32 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2472 /* ds_read2st64_b32 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2472 /* ds_read2st64_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2472 /* ds_read2st64_b32 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2472 /* ds_read2st64_b32 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2472 /* ds_read2st64_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2489 /* ds_read2st64_b64 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2489 /* ds_read2st64_b64 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2489 /* ds_read2st64_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2489 /* ds_read2st64_b64 */, MCK_ImmOffset0, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2489 /* ds_read2st64_b64 */, MCK_ImmOffset1, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2489 /* ds_read2st64_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2506 /* ds_read_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2506 /* ds_read_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2506 /* ds_read_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2506 /* ds_read_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2518 /* ds_read_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2518 /* ds_read_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2518 /* ds_read_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2518 /* ds_read_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2530 /* ds_read_i16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2530 /* ds_read_i16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2530 /* ds_read_i16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2530 /* ds_read_i16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2542 /* ds_read_i8 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2542 /* ds_read_i8 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2542 /* ds_read_i8 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2542 /* ds_read_i8 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2553 /* ds_read_u16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2553 /* ds_read_u16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2553 /* ds_read_u16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2553 /* ds_read_u16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2565 /* ds_read_u8 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2565 /* ds_read_u8 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2565 /* ds_read_u8 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2565 /* ds_read_u8 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2576 /* ds_rsub_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2576 /* ds_rsub_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2576 /* ds_rsub_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2576 /* ds_rsub_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2592 /* ds_rsub_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2592 /* ds_rsub_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2592 /* ds_rsub_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2592 /* ds_rsub_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2608 /* ds_rsub_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2608 /* ds_rsub_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2608 /* ds_rsub_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2608 /* ds_rsub_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2625 /* ds_rsub_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2625 /* ds_rsub_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2625 /* ds_rsub_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2625 /* ds_rsub_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2642 /* ds_rsub_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2642 /* ds_rsub_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2642 /* ds_rsub_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2642 /* ds_rsub_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2654 /* ds_rsub_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2654 /* ds_rsub_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2654 /* ds_rsub_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2654 /* ds_rsub_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2666 /* ds_sub_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2666 /* ds_sub_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2666 /* ds_sub_rtn_u32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2666 /* ds_sub_rtn_u32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2681 /* ds_sub_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2681 /* ds_sub_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2681 /* ds_sub_rtn_u64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2681 /* ds_sub_rtn_u64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2696 /* ds_sub_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2696 /* ds_sub_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2696 /* ds_sub_src2_u32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2696 /* ds_sub_src2_u32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2712 /* ds_sub_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2712 /* ds_sub_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2712 /* ds_sub_src2_u64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2712 /* ds_sub_src2_u64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2728 /* ds_sub_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2728 /* ds_sub_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2728 /* ds_sub_u32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2728 /* ds_sub_u32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2739 /* ds_sub_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2739 /* ds_sub_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2739 /* ds_sub_u64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2739 /* ds_sub_u64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2750 /* ds_swizzle_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2750 /* ds_swizzle_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2750 /* ds_swizzle_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2750 /* ds_swizzle_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isSICI, 2765 /* ds_wrap_rtn_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isSICI, 2765 /* ds_wrap_rtn_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 2765 /* ds_wrap_rtn_f32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 2765 /* ds_wrap_rtn_f32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2781 /* ds_write2_b32 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2781 /* ds_write2_b32 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2781 /* ds_write2_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 2781 /* ds_write2_b32 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2781 /* ds_write2_b32 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2781 /* ds_write2_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 2795 /* ds_write2_b64 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2795 /* ds_write2_b64 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2795 /* ds_write2_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 2795 /* ds_write2_b64 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2795 /* ds_write2_b64 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2795 /* ds_write2_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 2809 /* ds_write2st64_b32 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2809 /* ds_write2st64_b32 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2809 /* ds_write2st64_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 2809 /* ds_write2st64_b32 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2809 /* ds_write2st64_b32 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2809 /* ds_write2st64_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 2827 /* ds_write2st64_b64 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2827 /* ds_write2st64_b64 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2827 /* ds_write2st64_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 2827 /* ds_write2st64_b64 */, MCK_ImmOffset0, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2827 /* ds_write2st64_b64 */, MCK_ImmOffset1, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2827 /* ds_write2st64_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 2845 /* ds_write_b16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2845 /* ds_write_b16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2845 /* ds_write_b16 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2845 /* ds_write_b16 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2858 /* ds_write_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2858 /* ds_write_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2858 /* ds_write_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2858 /* ds_write_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2871 /* ds_write_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2871 /* ds_write_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2871 /* ds_write_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2871 /* ds_write_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2884 /* ds_write_b8 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2884 /* ds_write_b8 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2884 /* ds_write_b8 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2884 /* ds_write_b8 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2896 /* ds_write_src2_b32 */, MCK_ImmOffset0, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2896 /* ds_write_src2_b32 */, MCK_ImmOffset1, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2896 /* ds_write_src2_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2896 /* ds_write_src2_b32 */, MCK_ImmOffset0, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2896 /* ds_write_src2_b32 */, MCK_ImmOffset1, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2896 /* ds_write_src2_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2914 /* ds_write_src2_b64 */, MCK_ImmOffset0, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 2914 /* ds_write_src2_b64 */, MCK_ImmOffset1, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 2914 /* ds_write_src2_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 2914 /* ds_write_src2_b64 */, MCK_ImmOffset0, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 2914 /* ds_write_src2_b64 */, MCK_ImmOffset1, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 2914 /* ds_write_src2_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 2932 /* ds_wrxchg2_rtn_b32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2932 /* ds_wrxchg2_rtn_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 2932 /* ds_wrxchg2_rtn_b32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2932 /* ds_wrxchg2_rtn_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 2951 /* ds_wrxchg2_rtn_b64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2951 /* ds_wrxchg2_rtn_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 2951 /* ds_wrxchg2_rtn_b64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2951 /* ds_wrxchg2_rtn_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 2970 /* ds_wrxchg2st64_rtn_b32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2970 /* ds_wrxchg2st64_rtn_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 2970 /* ds_wrxchg2st64_rtn_b32 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2970 /* ds_wrxchg2st64_rtn_b32 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 2993 /* ds_wrxchg2st64_rtn_b64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 2993 /* ds_wrxchg2st64_rtn_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 2993 /* ds_wrxchg2st64_rtn_b64 */, MCK_ImmOffset, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 2993 /* ds_wrxchg2st64_rtn_b64 */, MCK_ImmGDS, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3016 /* ds_wrxchg_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3016 /* ds_wrxchg_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3016 /* ds_wrxchg_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3016 /* ds_wrxchg_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3034 /* ds_wrxchg_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3034 /* ds_wrxchg_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3034 /* ds_wrxchg_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3034 /* ds_wrxchg_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3052 /* ds_xor_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3052 /* ds_xor_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3052 /* ds_xor_b32 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3052 /* ds_xor_b32 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3063 /* ds_xor_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3063 /* ds_xor_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3063 /* ds_xor_b64 */, MCK_ImmOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3063 /* ds_xor_b64 */, MCK_ImmGDS, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3074 /* ds_xor_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3074 /* ds_xor_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3074 /* ds_xor_rtn_b32 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3074 /* ds_xor_rtn_b32 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3089 /* ds_xor_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3089 /* ds_xor_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3089 /* ds_xor_rtn_b64 */, MCK_ImmOffset, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3089 /* ds_xor_rtn_b64 */, MCK_ImmGDS, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3104 /* ds_xor_src2_b32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 3104 /* ds_xor_src2_b32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3104 /* ds_xor_src2_b32 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 3104 /* ds_xor_src2_b32 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 3120 /* ds_xor_src2_b64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 3120 /* ds_xor_src2_b64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 3120 /* ds_xor_src2_b64 */, MCK_ImmOffset, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 3120 /* ds_xor_src2_b64 */, MCK_ImmGDS, 4 /* 2 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_VReg32OrOff, 30 /* 1, 2, 3, 4 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_ImmExpCompr, 32 /* 5 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_ImmExpVM, 64 /* 6 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_ImmExpTgt, 1 /* 0 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_VReg32OrOff, 30 /* 1, 2, 3, 4 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_ImmExpCompr, 32 /* 5 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_ImmExpVM, 64 /* 6 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_ImmExpTgt, 1 /* 0 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_VReg32OrOff, 30 /* 1, 2, 3, 4 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_ImmExpCompr, 64 /* 6 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_ImmExpVM, 128 /* 7 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_ImmExpTgt, 1 /* 0 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_VReg32OrOff, 30 /* 1, 2, 3, 4 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_ImmExpCompr, 64 /* 6 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_ImmExpVM, 128 /* 7 */ },
  { Feature_isGCN, 3136 /* exp */, MCK_ImmExpTgt, 1 /* 0 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3140 /* flat_atomic_add */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3140 /* flat_atomic_add */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3140 /* flat_atomic_add */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3140 /* flat_atomic_add */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3140 /* flat_atomic_add */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3140 /* flat_atomic_add */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3140 /* flat_atomic_add */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3140 /* flat_atomic_add */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3156 /* flat_atomic_add_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3156 /* flat_atomic_add_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3156 /* flat_atomic_add_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3156 /* flat_atomic_add_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3156 /* flat_atomic_add_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3156 /* flat_atomic_add_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3156 /* flat_atomic_add_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3156 /* flat_atomic_add_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3175 /* flat_atomic_and */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3175 /* flat_atomic_and */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3175 /* flat_atomic_and */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3175 /* flat_atomic_and */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3175 /* flat_atomic_and */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3175 /* flat_atomic_and */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3175 /* flat_atomic_and */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3175 /* flat_atomic_and */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3191 /* flat_atomic_and_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3191 /* flat_atomic_and_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3191 /* flat_atomic_and_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3191 /* flat_atomic_and_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3191 /* flat_atomic_and_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3191 /* flat_atomic_and_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3191 /* flat_atomic_and_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3191 /* flat_atomic_and_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3210 /* flat_atomic_cmpswap */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3210 /* flat_atomic_cmpswap */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3210 /* flat_atomic_cmpswap */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3210 /* flat_atomic_cmpswap */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3210 /* flat_atomic_cmpswap */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3210 /* flat_atomic_cmpswap */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3210 /* flat_atomic_cmpswap */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3210 /* flat_atomic_cmpswap */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3230 /* flat_atomic_cmpswap_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3230 /* flat_atomic_cmpswap_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3230 /* flat_atomic_cmpswap_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3230 /* flat_atomic_cmpswap_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3230 /* flat_atomic_cmpswap_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3230 /* flat_atomic_cmpswap_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3230 /* flat_atomic_cmpswap_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3230 /* flat_atomic_cmpswap_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3253 /* flat_atomic_dec */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3253 /* flat_atomic_dec */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3253 /* flat_atomic_dec */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3253 /* flat_atomic_dec */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3253 /* flat_atomic_dec */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3253 /* flat_atomic_dec */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3253 /* flat_atomic_dec */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3253 /* flat_atomic_dec */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3269 /* flat_atomic_dec_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3269 /* flat_atomic_dec_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3269 /* flat_atomic_dec_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3269 /* flat_atomic_dec_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3269 /* flat_atomic_dec_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3269 /* flat_atomic_dec_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3269 /* flat_atomic_dec_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3269 /* flat_atomic_dec_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIOnly, 3288 /* flat_atomic_fcmpswap */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIOnly, 3288 /* flat_atomic_fcmpswap */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIOnly, 3288 /* flat_atomic_fcmpswap */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIOnly, 3288 /* flat_atomic_fcmpswap */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIOnly, 3309 /* flat_atomic_fcmpswap_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIOnly, 3309 /* flat_atomic_fcmpswap_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIOnly, 3309 /* flat_atomic_fcmpswap_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIOnly, 3309 /* flat_atomic_fcmpswap_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIOnly, 3333 /* flat_atomic_fmax */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIOnly, 3333 /* flat_atomic_fmax */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIOnly, 3333 /* flat_atomic_fmax */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIOnly, 3333 /* flat_atomic_fmax */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIOnly, 3350 /* flat_atomic_fmax_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIOnly, 3350 /* flat_atomic_fmax_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIOnly, 3350 /* flat_atomic_fmax_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIOnly, 3350 /* flat_atomic_fmax_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIOnly, 3370 /* flat_atomic_fmin */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIOnly, 3370 /* flat_atomic_fmin */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIOnly, 3370 /* flat_atomic_fmin */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIOnly, 3370 /* flat_atomic_fmin */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIOnly, 3387 /* flat_atomic_fmin_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIOnly, 3387 /* flat_atomic_fmin_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIOnly, 3387 /* flat_atomic_fmin_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIOnly, 3387 /* flat_atomic_fmin_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3407 /* flat_atomic_inc */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3407 /* flat_atomic_inc */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3407 /* flat_atomic_inc */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3407 /* flat_atomic_inc */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3407 /* flat_atomic_inc */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3407 /* flat_atomic_inc */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3407 /* flat_atomic_inc */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3407 /* flat_atomic_inc */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3423 /* flat_atomic_inc_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3423 /* flat_atomic_inc_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3423 /* flat_atomic_inc_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3423 /* flat_atomic_inc_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3423 /* flat_atomic_inc_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3423 /* flat_atomic_inc_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3423 /* flat_atomic_inc_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3423 /* flat_atomic_inc_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3442 /* flat_atomic_or */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3442 /* flat_atomic_or */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3442 /* flat_atomic_or */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3442 /* flat_atomic_or */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3442 /* flat_atomic_or */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3442 /* flat_atomic_or */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3442 /* flat_atomic_or */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3442 /* flat_atomic_or */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3457 /* flat_atomic_or_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3457 /* flat_atomic_or_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3457 /* flat_atomic_or_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3457 /* flat_atomic_or_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3457 /* flat_atomic_or_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3457 /* flat_atomic_or_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3457 /* flat_atomic_or_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3457 /* flat_atomic_or_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3475 /* flat_atomic_smax */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3475 /* flat_atomic_smax */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3475 /* flat_atomic_smax */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3475 /* flat_atomic_smax */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3475 /* flat_atomic_smax */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3475 /* flat_atomic_smax */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3475 /* flat_atomic_smax */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3475 /* flat_atomic_smax */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3492 /* flat_atomic_smax_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3492 /* flat_atomic_smax_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3492 /* flat_atomic_smax_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3492 /* flat_atomic_smax_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3492 /* flat_atomic_smax_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3492 /* flat_atomic_smax_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3492 /* flat_atomic_smax_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3492 /* flat_atomic_smax_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3512 /* flat_atomic_smin */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3512 /* flat_atomic_smin */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3512 /* flat_atomic_smin */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3512 /* flat_atomic_smin */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3512 /* flat_atomic_smin */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3512 /* flat_atomic_smin */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3512 /* flat_atomic_smin */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3512 /* flat_atomic_smin */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3529 /* flat_atomic_smin_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3529 /* flat_atomic_smin_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3529 /* flat_atomic_smin_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3529 /* flat_atomic_smin_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3529 /* flat_atomic_smin_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3529 /* flat_atomic_smin_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3529 /* flat_atomic_smin_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3529 /* flat_atomic_smin_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3549 /* flat_atomic_sub */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3549 /* flat_atomic_sub */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3549 /* flat_atomic_sub */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3549 /* flat_atomic_sub */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3549 /* flat_atomic_sub */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3549 /* flat_atomic_sub */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3549 /* flat_atomic_sub */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3549 /* flat_atomic_sub */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3565 /* flat_atomic_sub_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3565 /* flat_atomic_sub_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3565 /* flat_atomic_sub_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3565 /* flat_atomic_sub_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3565 /* flat_atomic_sub_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3565 /* flat_atomic_sub_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3565 /* flat_atomic_sub_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3565 /* flat_atomic_sub_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3584 /* flat_atomic_swap */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3584 /* flat_atomic_swap */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3584 /* flat_atomic_swap */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3584 /* flat_atomic_swap */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3584 /* flat_atomic_swap */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3584 /* flat_atomic_swap */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3584 /* flat_atomic_swap */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3584 /* flat_atomic_swap */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3601 /* flat_atomic_swap_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3601 /* flat_atomic_swap_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3601 /* flat_atomic_swap_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3601 /* flat_atomic_swap_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3601 /* flat_atomic_swap_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3601 /* flat_atomic_swap_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3601 /* flat_atomic_swap_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3601 /* flat_atomic_swap_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3621 /* flat_atomic_umax */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3621 /* flat_atomic_umax */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3621 /* flat_atomic_umax */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3621 /* flat_atomic_umax */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3621 /* flat_atomic_umax */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3621 /* flat_atomic_umax */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3621 /* flat_atomic_umax */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3621 /* flat_atomic_umax */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3638 /* flat_atomic_umax_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3638 /* flat_atomic_umax_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3638 /* flat_atomic_umax_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3638 /* flat_atomic_umax_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3638 /* flat_atomic_umax_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3638 /* flat_atomic_umax_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3638 /* flat_atomic_umax_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3638 /* flat_atomic_umax_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3658 /* flat_atomic_umin */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3658 /* flat_atomic_umin */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3658 /* flat_atomic_umin */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3658 /* flat_atomic_umin */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3658 /* flat_atomic_umin */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3658 /* flat_atomic_umin */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3658 /* flat_atomic_umin */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3658 /* flat_atomic_umin */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3675 /* flat_atomic_umin_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3675 /* flat_atomic_umin_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3675 /* flat_atomic_umin_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3675 /* flat_atomic_umin_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3675 /* flat_atomic_umin_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3675 /* flat_atomic_umin_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3675 /* flat_atomic_umin_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3675 /* flat_atomic_umin_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3695 /* flat_atomic_xor */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3695 /* flat_atomic_xor */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3695 /* flat_atomic_xor */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3695 /* flat_atomic_xor */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3695 /* flat_atomic_xor */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3695 /* flat_atomic_xor */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3695 /* flat_atomic_xor */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3695 /* flat_atomic_xor */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3711 /* flat_atomic_xor_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3711 /* flat_atomic_xor_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3711 /* flat_atomic_xor_x2 */, MCK_ImmSLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3711 /* flat_atomic_xor_x2 */, MCK_ImmTFE, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3711 /* flat_atomic_xor_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3711 /* flat_atomic_xor_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 3711 /* flat_atomic_xor_x2 */, MCK_ImmSLC, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3711 /* flat_atomic_xor_x2 */, MCK_ImmTFE, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3730 /* flat_load_dword */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3730 /* flat_load_dword */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3730 /* flat_load_dword */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3730 /* flat_load_dword */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3730 /* flat_load_dword */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3730 /* flat_load_dword */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3746 /* flat_load_dwordx2 */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3746 /* flat_load_dwordx2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3746 /* flat_load_dwordx2 */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3746 /* flat_load_dwordx2 */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3746 /* flat_load_dwordx2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3746 /* flat_load_dwordx2 */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3764 /* flat_load_dwordx3 */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3764 /* flat_load_dwordx3 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3764 /* flat_load_dwordx3 */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3764 /* flat_load_dwordx3 */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3764 /* flat_load_dwordx3 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3764 /* flat_load_dwordx3 */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3782 /* flat_load_dwordx4 */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3782 /* flat_load_dwordx4 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3782 /* flat_load_dwordx4 */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3782 /* flat_load_dwordx4 */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3782 /* flat_load_dwordx4 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3782 /* flat_load_dwordx4 */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3800 /* flat_load_sbyte */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3800 /* flat_load_sbyte */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3800 /* flat_load_sbyte */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3800 /* flat_load_sbyte */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3800 /* flat_load_sbyte */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3800 /* flat_load_sbyte */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3816 /* flat_load_sshort */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3816 /* flat_load_sshort */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3816 /* flat_load_sshort */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3816 /* flat_load_sshort */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3816 /* flat_load_sshort */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3816 /* flat_load_sshort */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3833 /* flat_load_ubyte */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3833 /* flat_load_ubyte */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3833 /* flat_load_ubyte */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3833 /* flat_load_ubyte */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3833 /* flat_load_ubyte */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3833 /* flat_load_ubyte */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3849 /* flat_load_ushort */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3849 /* flat_load_ushort */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3849 /* flat_load_ushort */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3849 /* flat_load_ushort */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3849 /* flat_load_ushort */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3849 /* flat_load_ushort */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3866 /* flat_store_byte */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3866 /* flat_store_byte */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3866 /* flat_store_byte */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3866 /* flat_store_byte */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3866 /* flat_store_byte */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3866 /* flat_store_byte */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3882 /* flat_store_dword */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3882 /* flat_store_dword */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3882 /* flat_store_dword */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3882 /* flat_store_dword */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3882 /* flat_store_dword */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3882 /* flat_store_dword */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3899 /* flat_store_dwordx2 */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3899 /* flat_store_dwordx2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3899 /* flat_store_dwordx2 */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3899 /* flat_store_dwordx2 */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3899 /* flat_store_dwordx2 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3899 /* flat_store_dwordx2 */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3918 /* flat_store_dwordx3 */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3918 /* flat_store_dwordx3 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3918 /* flat_store_dwordx3 */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3918 /* flat_store_dwordx3 */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3918 /* flat_store_dwordx3 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3918 /* flat_store_dwordx3 */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3937 /* flat_store_dwordx4 */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3937 /* flat_store_dwordx4 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3937 /* flat_store_dwordx4 */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3937 /* flat_store_dwordx4 */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3937 /* flat_store_dwordx4 */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3937 /* flat_store_dwordx4 */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3956 /* flat_store_short */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3956 /* flat_store_short */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 3956 /* flat_store_short */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isCIVI|Feature_isVI, 3956 /* flat_store_short */, MCK_ImmGLC, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 3956 /* flat_store_short */, MCK_ImmSLC, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 3956 /* flat_store_short */, MCK_ImmTFE, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 3973 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 3973 /* image_atomic_add */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 3990 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 3990 /* image_atomic_and */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4007 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4007 /* image_atomic_cmpswap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4028 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4028 /* image_atomic_dec */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4045 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4045 /* image_atomic_inc */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4062 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4062 /* image_atomic_or */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4078 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4078 /* image_atomic_smax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4096 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4096 /* image_atomic_smin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4114 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4114 /* image_atomic_sub */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4131 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4131 /* image_atomic_swap */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4149 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4149 /* image_atomic_umax */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4167 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4167 /* image_atomic_umin */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isSICI, 4185 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 4185 /* image_atomic_xor */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4202 /* image_gather4 */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4216 /* image_gather4_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4232 /* image_gather4_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4251 /* image_gather4_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4272 /* image_gather4_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4290 /* image_gather4_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4306 /* image_gather4_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4324 /* image_gather4_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4345 /* image_gather4_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4368 /* image_gather4_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4388 /* image_gather4_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4407 /* image_gather4_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4428 /* image_gather4_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4446 /* image_gather4_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4466 /* image_gather4_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4485 /* image_gather4_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4506 /* image_gather4_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4524 /* image_gather4_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4541 /* image_gather4_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4560 /* image_gather4_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4576 /* image_gather4_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4594 /* image_gather4_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4611 /* image_gather4_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4630 /* image_gather4_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4646 /* image_get_lod */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4660 /* image_get_resinfo */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4678 /* image_load */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 4689 /* image_load_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4704 /* image_sample */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4717 /* image_sample_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4732 /* image_sample_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4750 /* image_sample_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4770 /* image_sample_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4787 /* image_sample_c */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4802 /* image_sample_c_b */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4819 /* image_sample_c_b_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4839 /* image_sample_c_b_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4861 /* image_sample_c_b_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4880 /* image_sample_c_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4898 /* image_sample_c_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4919 /* image_sample_c_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4942 /* image_sample_c_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4962 /* image_sample_c_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 4980 /* image_sample_c_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5000 /* image_sample_c_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5017 /* image_sample_c_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5037 /* image_sample_c_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5059 /* image_sample_c_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5078 /* image_sample_c_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5095 /* image_sample_c_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5114 /* image_sample_c_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5132 /* image_sample_c_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5152 /* image_sample_c_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5169 /* image_sample_cd */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5185 /* image_sample_cd_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5204 /* image_sample_cd_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5225 /* image_sample_cd_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5243 /* image_sample_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5259 /* image_sample_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5277 /* image_sample_d */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5292 /* image_sample_d_cl */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5310 /* image_sample_d_cl_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5330 /* image_sample_d_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5347 /* image_sample_l */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5362 /* image_sample_l_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5379 /* image_sample_lz */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5395 /* image_sample_lz_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmGLC, 64 /* 6 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmSLC, 128 /* 7 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmTFE, 512 /* 9 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmUNorm, 32 /* 5 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDA, 2048 /* 11 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmR128, 256 /* 8 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmLWE, 1024 /* 10 */ },
  { Feature_isGCN, 5413 /* image_sample_o */, MCK_ImmDMask, 16 /* 4 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5428 /* image_store */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmGLC, 32 /* 5 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmSLC, 64 /* 6 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmTFE, 256 /* 8 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmUNorm, 16 /* 4 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDA, 1024 /* 10 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmR128, 128 /* 7 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmLWE, 512 /* 9 */ },
  { Feature_isGCN, 5440 /* image_store_mip */, MCK_ImmDMask, 8 /* 3 */ },
  { Feature_isGCN, 5874 /* s_branch */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN|Feature_isSICI, 5905 /* s_buffer_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5905 /* s_buffer_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5905 /* s_buffer_load_dword */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 5905 /* s_buffer_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5905 /* s_buffer_load_dword */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 5905 /* s_buffer_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 5905 /* s_buffer_load_dword */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 5905 /* s_buffer_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5925 /* s_buffer_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5925 /* s_buffer_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5925 /* s_buffer_load_dwordx16 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 5925 /* s_buffer_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5925 /* s_buffer_load_dwordx16 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 5925 /* s_buffer_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 5925 /* s_buffer_load_dwordx16 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 5925 /* s_buffer_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5948 /* s_buffer_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5948 /* s_buffer_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5948 /* s_buffer_load_dwordx2 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 5948 /* s_buffer_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5948 /* s_buffer_load_dwordx2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 5948 /* s_buffer_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 5948 /* s_buffer_load_dwordx2 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 5948 /* s_buffer_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5970 /* s_buffer_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5970 /* s_buffer_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5970 /* s_buffer_load_dwordx4 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 5970 /* s_buffer_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5970 /* s_buffer_load_dwordx4 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 5970 /* s_buffer_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 5970 /* s_buffer_load_dwordx4 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 5970 /* s_buffer_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5992 /* s_buffer_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5992 /* s_buffer_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 5992 /* s_buffer_load_dwordx8 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 5992 /* s_buffer_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 5992 /* s_buffer_load_dwordx8 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 5992 /* s_buffer_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 5992 /* s_buffer_load_dwordx8 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 5992 /* s_buffer_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6014 /* s_buffer_store_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6014 /* s_buffer_store_dword */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 6014 /* s_buffer_store_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6035 /* s_buffer_store_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6035 /* s_buffer_store_dwordx2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 6035 /* s_buffer_store_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6058 /* s_buffer_store_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6058 /* s_buffer_store_dwordx4 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 6058 /* s_buffer_store_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN, 6081 /* s_cbranch_execnz */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN, 6098 /* s_cbranch_execz */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN, 6163 /* s_cbranch_scc0 */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN, 6178 /* s_cbranch_scc1 */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN, 6193 /* s_cbranch_vccnz */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN, 6209 /* s_cbranch_vccz */, MCK_SoppBrTarget, 1 /* 0 */ },
  { Feature_isGCN|Feature_isSICI, 6846 /* s_getreg_b32 */, MCK_ImmHwreg, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 6846 /* s_getreg_b32 */, MCK_ImmHwreg, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 6887 /* s_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6887 /* s_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 6887 /* s_load_dword */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 6887 /* s_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6887 /* s_load_dword */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 6887 /* s_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 6887 /* s_load_dword */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 6887 /* s_load_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 6900 /* s_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6900 /* s_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 6900 /* s_load_dwordx16 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 6900 /* s_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6900 /* s_load_dwordx16 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 6900 /* s_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 6900 /* s_load_dwordx16 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 6900 /* s_load_dwordx16 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 6916 /* s_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6916 /* s_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 6916 /* s_load_dwordx2 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 6916 /* s_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6916 /* s_load_dwordx2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 6916 /* s_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 6916 /* s_load_dwordx2 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 6916 /* s_load_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 6931 /* s_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6931 /* s_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 6931 /* s_load_dwordx4 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 6931 /* s_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6931 /* s_load_dwordx4 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 6931 /* s_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 6931 /* s_load_dwordx4 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 6931 /* s_load_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 6946 /* s_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6946 /* s_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 6946 /* s_load_dwordx8 */, MCK_ImmSMRDOffset8, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 6946 /* s_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 6946 /* s_load_dwordx8 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 6946 /* s_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isCIOnly, 6946 /* s_load_dwordx8 */, MCK_ImmSMRDLiteralOffset, 4 /* 2 */ },
  { Feature_isGCN|Feature_isCIOnly, 6946 /* s_load_dwordx8 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN, 7432 /* s_sendmsg */, MCK_SendMsg, 1 /* 0 */ },
  { Feature_isGCN, 7442 /* s_sendmsghalt */, MCK_SendMsg, 1 /* 0 */ },
  { Feature_isGCN|Feature_isSICI, 7560 /* s_setreg_b32 */, MCK_ImmHwreg, 1 /* 0 */ },
  { Feature_isGCN|Feature_isVI, 7560 /* s_setreg_b32 */, MCK_ImmHwreg, 1 /* 0 */ },
  { Feature_isGCN|Feature_isSICI, 7573 /* s_setreg_imm32_b32 */, MCK_ImmHwreg, 1 /* 0 */ },
  { Feature_isGCN|Feature_isVI, 7573 /* s_setreg_imm32_b32 */, MCK_ImmHwreg, 1 /* 0 */ },
  { Feature_isGCN|Feature_isVI, 7640 /* s_store_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 7640 /* s_store_dword */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 7640 /* s_store_dword */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 7654 /* s_store_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 7654 /* s_store_dwordx2 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 7654 /* s_store_dwordx2 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 7670 /* s_store_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 7670 /* s_store_dwordx4 */, MCK_ImmSMRDOffset20, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 7670 /* s_store_dwordx4 */, MCK_ImmGLC, 8 /* 3 */ },
  { Feature_isGCN, 7750 /* s_waitcnt */, MCK_SWaitCnt, 1 /* 0 */ },
  { Feature_isVI|Feature_isVI, 7984 /* v_add_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 7984 /* v_add_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 7984 /* v_add_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 7984 /* v_add_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 7984 /* v_add_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 7984 /* v_add_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 7984 /* v_add_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 7984 /* v_add_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 7984 /* v_add_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 7984 /* v_add_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 7984 /* v_add_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 7984 /* v_add_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 7984 /* v_add_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 7984 /* v_add_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 7994 /* v_add_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 7994 /* v_add_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 7994 /* v_add_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 7994 /* v_add_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 7994 /* v_add_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 7994 /* v_add_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 7994 /* v_add_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 7994 /* v_add_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 7994 /* v_add_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 7994 /* v_add_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 7994 /* v_add_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 7994 /* v_add_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 7994 /* v_add_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 7994 /* v_add_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 7994 /* v_add_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 7994 /* v_add_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 7994 /* v_add_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 8004 /* v_add_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 8004 /* v_add_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 8004 /* v_add_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8004 /* v_add_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 8004 /* v_add_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 8004 /* v_add_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8014 /* v_add_i32 */, MCK_ImmDPPCtrl, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8014 /* v_add_i32 */, MCK_ImmRowMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8014 /* v_add_i32 */, MCK_ImmBankMask, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 8014 /* v_add_i32 */, MCK_ImmBoundCtrl, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 8014 /* v_add_i32 */, MCK_VRegWithIntInputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 8014 /* v_add_i32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 8014 /* v_add_i32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 8014 /* v_add_i32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 8014 /* v_add_i32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 8014 /* v_add_i32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 8024 /* v_add_u16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8024 /* v_add_u16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8024 /* v_add_u16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8024 /* v_add_u16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 8024 /* v_add_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 8024 /* v_add_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8024 /* v_add_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8024 /* v_add_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 8024 /* v_add_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 8024 /* v_add_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8034 /* v_addc_u32 */, MCK_ImmDPPCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8034 /* v_addc_u32 */, MCK_ImmRowMask, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 8034 /* v_addc_u32 */, MCK_ImmBankMask, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 8034 /* v_addc_u32 */, MCK_ImmBoundCtrl, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 8034 /* v_addc_u32 */, MCK_RegOrImmWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 8034 /* v_addc_u32 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 8034 /* v_addc_u32 */, MCK_ImmSDWADstSel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 8034 /* v_addc_u32 */, MCK_ImmSDWASrc0Sel, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 8034 /* v_addc_u32 */, MCK_ImmSDWASrc1Sel, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 8034 /* v_addc_u32 */, MCK_ImmSDWADstUnused, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 8076 /* v_and_b32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8076 /* v_and_b32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8076 /* v_and_b32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8076 /* v_and_b32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 8076 /* v_and_b32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 8076 /* v_and_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8076 /* v_and_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 8076 /* v_and_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 8076 /* v_and_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 8076 /* v_and_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8108 /* v_ashrrev_i16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8108 /* v_ashrrev_i16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8108 /* v_ashrrev_i16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8108 /* v_ashrrev_i16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 8108 /* v_ashrrev_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 8108 /* v_ashrrev_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8108 /* v_ashrrev_i16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8108 /* v_ashrrev_i16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 8108 /* v_ashrrev_i16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 8108 /* v_ashrrev_i16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8122 /* v_ashrrev_i32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8122 /* v_ashrrev_i32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8122 /* v_ashrrev_i32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8122 /* v_ashrrev_i32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 8122 /* v_ashrrev_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 8122 /* v_ashrrev_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8122 /* v_ashrrev_i32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 8122 /* v_ashrrev_i32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 8122 /* v_ashrrev_i32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 8122 /* v_ashrrev_i32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8205 /* v_bfrev_b32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 8205 /* v_bfrev_b32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8205 /* v_bfrev_b32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8205 /* v_bfrev_b32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8205 /* v_bfrev_b32 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 8205 /* v_bfrev_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 8205 /* v_bfrev_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8205 /* v_bfrev_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8205 /* v_bfrev_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8217 /* v_ceil_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 8217 /* v_ceil_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8217 /* v_ceil_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 8217 /* v_ceil_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 8217 /* v_ceil_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 8217 /* v_ceil_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8217 /* v_ceil_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8217 /* v_ceil_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8217 /* v_ceil_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 8217 /* v_ceil_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 8217 /* v_ceil_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8217 /* v_ceil_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8217 /* v_ceil_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 8228 /* v_ceil_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 8228 /* v_ceil_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 8228 /* v_ceil_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 8228 /* v_ceil_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 8228 /* v_ceil_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8228 /* v_ceil_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 8228 /* v_ceil_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 8228 /* v_ceil_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 8228 /* v_ceil_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8228 /* v_ceil_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8228 /* v_ceil_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8228 /* v_ceil_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 8228 /* v_ceil_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 8228 /* v_ceil_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8228 /* v_ceil_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8228 /* v_ceil_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 8239 /* v_ceil_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isCIOnly, 8239 /* v_ceil_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 8239 /* v_ceil_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 8239 /* v_ceil_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isVI, 8239 /* v_ceil_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 8239 /* v_ceil_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 8260 /* v_cmp_class_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 8260 /* v_cmp_class_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 8260 /* v_cmp_class_f16 */, MCK_VRegWithIntInputMods, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 8260 /* v_cmp_class_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8260 /* v_cmp_class_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8260 /* v_cmp_class_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 8296 /* v_cmp_class_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 8296 /* v_cmp_class_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 8296 /* v_cmp_class_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 8296 /* v_cmp_class_f32 */, MCK_VRegWithIntInputMods, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 8296 /* v_cmp_class_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8296 /* v_cmp_class_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8296 /* v_cmp_class_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 8332 /* v_cmp_class_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 8332 /* v_cmp_class_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isVI, 8368 /* v_cmp_eq_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 8368 /* v_cmp_eq_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 8368 /* v_cmp_eq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 8368 /* v_cmp_eq_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 8368 /* v_cmp_eq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 8368 /* v_cmp_eq_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 8368 /* v_cmp_eq_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 8398 /* v_cmp_eq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 8398 /* v_cmp_eq_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 8398 /* v_cmp_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8398 /* v_cmp_eq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 8398 /* v_cmp_eq_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 8398 /* v_cmp_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8398 /* v_cmp_eq_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 8398 /* v_cmp_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8398 /* v_cmp_eq_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8398 /* v_cmp_eq_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 8428 /* v_cmp_eq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 8428 /* v_cmp_eq_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 8428 /* v_cmp_eq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8428 /* v_cmp_eq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 8428 /* v_cmp_eq_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 8428 /* v_cmp_eq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 8458 /* v_cmp_eq_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 8458 /* v_cmp_eq_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 8458 /* v_cmp_eq_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 8458 /* v_cmp_eq_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8488 /* v_cmp_eq_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 8488 /* v_cmp_eq_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8488 /* v_cmp_eq_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8488 /* v_cmp_eq_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 8548 /* v_cmp_eq_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 8548 /* v_cmp_eq_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 8548 /* v_cmp_eq_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 8548 /* v_cmp_eq_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8578 /* v_cmp_eq_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 8578 /* v_cmp_eq_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8578 /* v_cmp_eq_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8578 /* v_cmp_eq_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 8638 /* v_cmp_f_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 8638 /* v_cmp_f_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 8638 /* v_cmp_f_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 8638 /* v_cmp_f_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 8638 /* v_cmp_f_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 8638 /* v_cmp_f_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 8638 /* v_cmp_f_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 8666 /* v_cmp_f_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 8666 /* v_cmp_f_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 8666 /* v_cmp_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8666 /* v_cmp_f_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 8666 /* v_cmp_f_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 8666 /* v_cmp_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8666 /* v_cmp_f_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 8666 /* v_cmp_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8666 /* v_cmp_f_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8666 /* v_cmp_f_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 8694 /* v_cmp_f_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 8694 /* v_cmp_f_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 8694 /* v_cmp_f_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8694 /* v_cmp_f_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 8694 /* v_cmp_f_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 8694 /* v_cmp_f_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 8722 /* v_cmp_f_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 8722 /* v_cmp_f_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 8722 /* v_cmp_f_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 8722 /* v_cmp_f_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8750 /* v_cmp_f_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 8750 /* v_cmp_f_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8750 /* v_cmp_f_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8750 /* v_cmp_f_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 8806 /* v_cmp_f_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 8806 /* v_cmp_f_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 8806 /* v_cmp_f_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 8806 /* v_cmp_f_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 8834 /* v_cmp_f_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 8834 /* v_cmp_f_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8834 /* v_cmp_f_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8834 /* v_cmp_f_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 8890 /* v_cmp_ge_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 8890 /* v_cmp_ge_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 8890 /* v_cmp_ge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 8890 /* v_cmp_ge_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 8890 /* v_cmp_ge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 8890 /* v_cmp_ge_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 8890 /* v_cmp_ge_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 8920 /* v_cmp_ge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 8920 /* v_cmp_ge_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 8920 /* v_cmp_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8920 /* v_cmp_ge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 8920 /* v_cmp_ge_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 8920 /* v_cmp_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8920 /* v_cmp_ge_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 8920 /* v_cmp_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 8920 /* v_cmp_ge_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 8920 /* v_cmp_ge_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 8950 /* v_cmp_ge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 8950 /* v_cmp_ge_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 8950 /* v_cmp_ge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 8950 /* v_cmp_ge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 8950 /* v_cmp_ge_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 8950 /* v_cmp_ge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 8980 /* v_cmp_ge_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 8980 /* v_cmp_ge_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 8980 /* v_cmp_ge_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 8980 /* v_cmp_ge_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 9010 /* v_cmp_ge_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 9010 /* v_cmp_ge_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9010 /* v_cmp_ge_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 9010 /* v_cmp_ge_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 9070 /* v_cmp_ge_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9070 /* v_cmp_ge_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9070 /* v_cmp_ge_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 9070 /* v_cmp_ge_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 9100 /* v_cmp_ge_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 9100 /* v_cmp_ge_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9100 /* v_cmp_ge_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 9100 /* v_cmp_ge_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 9160 /* v_cmp_gt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9160 /* v_cmp_gt_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 9160 /* v_cmp_gt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9160 /* v_cmp_gt_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9160 /* v_cmp_gt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9160 /* v_cmp_gt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 9160 /* v_cmp_gt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 9190 /* v_cmp_gt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 9190 /* v_cmp_gt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 9190 /* v_cmp_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 9190 /* v_cmp_gt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 9190 /* v_cmp_gt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 9190 /* v_cmp_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9190 /* v_cmp_gt_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 9190 /* v_cmp_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9190 /* v_cmp_gt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 9190 /* v_cmp_gt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 9220 /* v_cmp_gt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 9220 /* v_cmp_gt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 9220 /* v_cmp_gt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 9220 /* v_cmp_gt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 9220 /* v_cmp_gt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 9220 /* v_cmp_gt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9250 /* v_cmp_gt_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9250 /* v_cmp_gt_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9250 /* v_cmp_gt_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 9250 /* v_cmp_gt_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 9280 /* v_cmp_gt_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 9280 /* v_cmp_gt_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9280 /* v_cmp_gt_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 9280 /* v_cmp_gt_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 9340 /* v_cmp_gt_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9340 /* v_cmp_gt_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9340 /* v_cmp_gt_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 9340 /* v_cmp_gt_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 9370 /* v_cmp_gt_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 9370 /* v_cmp_gt_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9370 /* v_cmp_gt_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 9370 /* v_cmp_gt_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 9430 /* v_cmp_le_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9430 /* v_cmp_le_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 9430 /* v_cmp_le_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9430 /* v_cmp_le_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9430 /* v_cmp_le_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9430 /* v_cmp_le_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 9430 /* v_cmp_le_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 9460 /* v_cmp_le_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 9460 /* v_cmp_le_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 9460 /* v_cmp_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 9460 /* v_cmp_le_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 9460 /* v_cmp_le_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 9460 /* v_cmp_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9460 /* v_cmp_le_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 9460 /* v_cmp_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9460 /* v_cmp_le_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 9460 /* v_cmp_le_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 9490 /* v_cmp_le_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 9490 /* v_cmp_le_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 9490 /* v_cmp_le_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 9490 /* v_cmp_le_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 9490 /* v_cmp_le_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 9490 /* v_cmp_le_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9520 /* v_cmp_le_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9520 /* v_cmp_le_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9520 /* v_cmp_le_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 9520 /* v_cmp_le_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 9550 /* v_cmp_le_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 9550 /* v_cmp_le_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9550 /* v_cmp_le_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 9550 /* v_cmp_le_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 9610 /* v_cmp_le_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9610 /* v_cmp_le_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9610 /* v_cmp_le_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 9610 /* v_cmp_le_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 9640 /* v_cmp_le_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 9640 /* v_cmp_le_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9640 /* v_cmp_le_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 9640 /* v_cmp_le_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 9700 /* v_cmp_lg_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9700 /* v_cmp_lg_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 9700 /* v_cmp_lg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9700 /* v_cmp_lg_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9700 /* v_cmp_lg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9700 /* v_cmp_lg_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 9700 /* v_cmp_lg_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 9730 /* v_cmp_lg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 9730 /* v_cmp_lg_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 9730 /* v_cmp_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 9730 /* v_cmp_lg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 9730 /* v_cmp_lg_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 9730 /* v_cmp_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9730 /* v_cmp_lg_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 9730 /* v_cmp_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9730 /* v_cmp_lg_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 9730 /* v_cmp_lg_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 9760 /* v_cmp_lg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 9760 /* v_cmp_lg_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 9760 /* v_cmp_lg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 9760 /* v_cmp_lg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 9760 /* v_cmp_lg_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 9760 /* v_cmp_lg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9790 /* v_cmp_lt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9790 /* v_cmp_lt_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 9790 /* v_cmp_lt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9790 /* v_cmp_lt_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9790 /* v_cmp_lt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9790 /* v_cmp_lt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 9790 /* v_cmp_lt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 9820 /* v_cmp_lt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 9820 /* v_cmp_lt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 9820 /* v_cmp_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 9820 /* v_cmp_lt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 9820 /* v_cmp_lt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 9820 /* v_cmp_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9820 /* v_cmp_lt_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 9820 /* v_cmp_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9820 /* v_cmp_lt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 9820 /* v_cmp_lt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 9850 /* v_cmp_lt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 9850 /* v_cmp_lt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 9850 /* v_cmp_lt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 9850 /* v_cmp_lt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 9850 /* v_cmp_lt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 9850 /* v_cmp_lt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9880 /* v_cmp_lt_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9880 /* v_cmp_lt_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9880 /* v_cmp_lt_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 9880 /* v_cmp_lt_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 9910 /* v_cmp_lt_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 9910 /* v_cmp_lt_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 9910 /* v_cmp_lt_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 9910 /* v_cmp_lt_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 9970 /* v_cmp_lt_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 9970 /* v_cmp_lt_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 9970 /* v_cmp_lt_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 9970 /* v_cmp_lt_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 10000 /* v_cmp_lt_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 10000 /* v_cmp_lt_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10000 /* v_cmp_lt_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 10000 /* v_cmp_lt_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 10060 /* v_cmp_ne_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10060 /* v_cmp_ne_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10060 /* v_cmp_ne_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 10060 /* v_cmp_ne_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 10090 /* v_cmp_ne_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 10090 /* v_cmp_ne_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10090 /* v_cmp_ne_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 10090 /* v_cmp_ne_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 10150 /* v_cmp_ne_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10150 /* v_cmp_ne_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10150 /* v_cmp_ne_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 10150 /* v_cmp_ne_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 10180 /* v_cmp_ne_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 10180 /* v_cmp_ne_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10180 /* v_cmp_ne_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 10180 /* v_cmp_ne_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 10240 /* v_cmp_neq_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10240 /* v_cmp_neq_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 10240 /* v_cmp_neq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10240 /* v_cmp_neq_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10240 /* v_cmp_neq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10240 /* v_cmp_neq_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 10240 /* v_cmp_neq_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 10272 /* v_cmp_neq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 10272 /* v_cmp_neq_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 10272 /* v_cmp_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10272 /* v_cmp_neq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 10272 /* v_cmp_neq_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 10272 /* v_cmp_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10272 /* v_cmp_neq_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 10272 /* v_cmp_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10272 /* v_cmp_neq_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 10272 /* v_cmp_neq_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 10304 /* v_cmp_neq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 10304 /* v_cmp_neq_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 10304 /* v_cmp_neq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10304 /* v_cmp_neq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 10304 /* v_cmp_neq_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 10304 /* v_cmp_neq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10336 /* v_cmp_nge_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10336 /* v_cmp_nge_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 10336 /* v_cmp_nge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10336 /* v_cmp_nge_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10336 /* v_cmp_nge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10336 /* v_cmp_nge_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 10336 /* v_cmp_nge_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 10368 /* v_cmp_nge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 10368 /* v_cmp_nge_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 10368 /* v_cmp_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10368 /* v_cmp_nge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 10368 /* v_cmp_nge_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 10368 /* v_cmp_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10368 /* v_cmp_nge_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 10368 /* v_cmp_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10368 /* v_cmp_nge_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 10368 /* v_cmp_nge_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 10400 /* v_cmp_nge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 10400 /* v_cmp_nge_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 10400 /* v_cmp_nge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10400 /* v_cmp_nge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 10400 /* v_cmp_nge_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 10400 /* v_cmp_nge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10432 /* v_cmp_ngt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10432 /* v_cmp_ngt_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 10432 /* v_cmp_ngt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10432 /* v_cmp_ngt_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10432 /* v_cmp_ngt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10432 /* v_cmp_ngt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 10432 /* v_cmp_ngt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 10464 /* v_cmp_ngt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 10464 /* v_cmp_ngt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 10464 /* v_cmp_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10464 /* v_cmp_ngt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 10464 /* v_cmp_ngt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 10464 /* v_cmp_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10464 /* v_cmp_ngt_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 10464 /* v_cmp_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10464 /* v_cmp_ngt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 10464 /* v_cmp_ngt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 10496 /* v_cmp_ngt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 10496 /* v_cmp_ngt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 10496 /* v_cmp_ngt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10496 /* v_cmp_ngt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 10496 /* v_cmp_ngt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 10496 /* v_cmp_ngt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10528 /* v_cmp_nle_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10528 /* v_cmp_nle_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 10528 /* v_cmp_nle_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10528 /* v_cmp_nle_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10528 /* v_cmp_nle_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10528 /* v_cmp_nle_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 10528 /* v_cmp_nle_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 10560 /* v_cmp_nle_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 10560 /* v_cmp_nle_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 10560 /* v_cmp_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10560 /* v_cmp_nle_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 10560 /* v_cmp_nle_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 10560 /* v_cmp_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10560 /* v_cmp_nle_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 10560 /* v_cmp_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10560 /* v_cmp_nle_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 10560 /* v_cmp_nle_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 10592 /* v_cmp_nle_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 10592 /* v_cmp_nle_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 10592 /* v_cmp_nle_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10592 /* v_cmp_nle_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 10592 /* v_cmp_nle_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 10592 /* v_cmp_nle_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10624 /* v_cmp_nlg_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10624 /* v_cmp_nlg_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 10624 /* v_cmp_nlg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10624 /* v_cmp_nlg_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10624 /* v_cmp_nlg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10624 /* v_cmp_nlg_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 10624 /* v_cmp_nlg_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 10656 /* v_cmp_nlg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 10656 /* v_cmp_nlg_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 10656 /* v_cmp_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10656 /* v_cmp_nlg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 10656 /* v_cmp_nlg_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 10656 /* v_cmp_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10656 /* v_cmp_nlg_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 10656 /* v_cmp_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10656 /* v_cmp_nlg_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 10656 /* v_cmp_nlg_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 10688 /* v_cmp_nlg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 10688 /* v_cmp_nlg_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 10688 /* v_cmp_nlg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10688 /* v_cmp_nlg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 10688 /* v_cmp_nlg_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 10688 /* v_cmp_nlg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10720 /* v_cmp_nlt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10720 /* v_cmp_nlt_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 10720 /* v_cmp_nlt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10720 /* v_cmp_nlt_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10720 /* v_cmp_nlt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10720 /* v_cmp_nlt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 10720 /* v_cmp_nlt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 10752 /* v_cmp_nlt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 10752 /* v_cmp_nlt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 10752 /* v_cmp_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10752 /* v_cmp_nlt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 10752 /* v_cmp_nlt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 10752 /* v_cmp_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10752 /* v_cmp_nlt_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 10752 /* v_cmp_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10752 /* v_cmp_nlt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 10752 /* v_cmp_nlt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 10784 /* v_cmp_nlt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 10784 /* v_cmp_nlt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 10784 /* v_cmp_nlt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10784 /* v_cmp_nlt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 10784 /* v_cmp_nlt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 10784 /* v_cmp_nlt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10816 /* v_cmp_o_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10816 /* v_cmp_o_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 10816 /* v_cmp_o_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10816 /* v_cmp_o_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10816 /* v_cmp_o_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10816 /* v_cmp_o_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 10816 /* v_cmp_o_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 10844 /* v_cmp_o_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 10844 /* v_cmp_o_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 10844 /* v_cmp_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10844 /* v_cmp_o_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 10844 /* v_cmp_o_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 10844 /* v_cmp_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10844 /* v_cmp_o_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 10844 /* v_cmp_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10844 /* v_cmp_o_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 10844 /* v_cmp_o_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 10872 /* v_cmp_o_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 10872 /* v_cmp_o_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 10872 /* v_cmp_o_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 10872 /* v_cmp_o_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 10872 /* v_cmp_o_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 10872 /* v_cmp_o_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10900 /* v_cmp_t_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10900 /* v_cmp_t_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10900 /* v_cmp_t_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 10900 /* v_cmp_t_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 10928 /* v_cmp_t_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 10928 /* v_cmp_t_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 10928 /* v_cmp_t_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 10928 /* v_cmp_t_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 10984 /* v_cmp_t_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 10984 /* v_cmp_t_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 10984 /* v_cmp_t_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 10984 /* v_cmp_t_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 11012 /* v_cmp_t_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 11012 /* v_cmp_t_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 11012 /* v_cmp_t_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 11012 /* v_cmp_t_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 11068 /* v_cmp_tru_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 11068 /* v_cmp_tru_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 11068 /* v_cmp_tru_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 11068 /* v_cmp_tru_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 11068 /* v_cmp_tru_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 11068 /* v_cmp_tru_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 11068 /* v_cmp_tru_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 11100 /* v_cmp_tru_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 11100 /* v_cmp_tru_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 11100 /* v_cmp_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11100 /* v_cmp_tru_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 11100 /* v_cmp_tru_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 11100 /* v_cmp_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 11100 /* v_cmp_tru_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 11100 /* v_cmp_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 11100 /* v_cmp_tru_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 11100 /* v_cmp_tru_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 11132 /* v_cmp_tru_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 11132 /* v_cmp_tru_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 11132 /* v_cmp_tru_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11132 /* v_cmp_tru_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 11132 /* v_cmp_tru_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 11132 /* v_cmp_tru_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 11164 /* v_cmp_u_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 11164 /* v_cmp_u_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 11164 /* v_cmp_u_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 11164 /* v_cmp_u_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 11164 /* v_cmp_u_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 11164 /* v_cmp_u_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 11164 /* v_cmp_u_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 11192 /* v_cmp_u_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 11192 /* v_cmp_u_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 11192 /* v_cmp_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11192 /* v_cmp_u_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 11192 /* v_cmp_u_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 11192 /* v_cmp_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 11192 /* v_cmp_u_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 11192 /* v_cmp_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 11192 /* v_cmp_u_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 11192 /* v_cmp_u_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 11220 /* v_cmp_u_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 11220 /* v_cmp_u_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 11220 /* v_cmp_u_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 11220 /* v_cmp_u_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 11220 /* v_cmp_u_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 11220 /* v_cmp_u_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11248 /* v_cmps_eq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11248 /* v_cmps_eq_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11248 /* v_cmps_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11280 /* v_cmps_eq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11280 /* v_cmps_eq_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11280 /* v_cmps_eq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11312 /* v_cmps_f_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11312 /* v_cmps_f_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11312 /* v_cmps_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11342 /* v_cmps_f_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11342 /* v_cmps_f_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11342 /* v_cmps_f_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11372 /* v_cmps_ge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11372 /* v_cmps_ge_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11372 /* v_cmps_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11404 /* v_cmps_ge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11404 /* v_cmps_ge_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11404 /* v_cmps_ge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11436 /* v_cmps_gt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11436 /* v_cmps_gt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11436 /* v_cmps_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11468 /* v_cmps_gt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11468 /* v_cmps_gt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11468 /* v_cmps_gt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11500 /* v_cmps_le_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11500 /* v_cmps_le_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11500 /* v_cmps_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11532 /* v_cmps_le_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11532 /* v_cmps_le_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11532 /* v_cmps_le_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11564 /* v_cmps_lg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11564 /* v_cmps_lg_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11564 /* v_cmps_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11596 /* v_cmps_lg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11596 /* v_cmps_lg_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11596 /* v_cmps_lg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11628 /* v_cmps_lt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11628 /* v_cmps_lt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11628 /* v_cmps_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11660 /* v_cmps_lt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11660 /* v_cmps_lt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11660 /* v_cmps_lt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11692 /* v_cmps_neq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11692 /* v_cmps_neq_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11692 /* v_cmps_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11726 /* v_cmps_neq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11726 /* v_cmps_neq_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11726 /* v_cmps_neq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11760 /* v_cmps_nge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11760 /* v_cmps_nge_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11760 /* v_cmps_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11794 /* v_cmps_nge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11794 /* v_cmps_nge_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11794 /* v_cmps_nge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11828 /* v_cmps_ngt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11828 /* v_cmps_ngt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11828 /* v_cmps_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11862 /* v_cmps_ngt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11862 /* v_cmps_ngt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11862 /* v_cmps_ngt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11896 /* v_cmps_nle_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11896 /* v_cmps_nle_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11896 /* v_cmps_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11930 /* v_cmps_nle_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11930 /* v_cmps_nle_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11930 /* v_cmps_nle_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11964 /* v_cmps_nlg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11964 /* v_cmps_nlg_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11964 /* v_cmps_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 11998 /* v_cmps_nlg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 11998 /* v_cmps_nlg_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 11998 /* v_cmps_nlg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12032 /* v_cmps_nlt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12032 /* v_cmps_nlt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12032 /* v_cmps_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12066 /* v_cmps_nlt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12066 /* v_cmps_nlt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12066 /* v_cmps_nlt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12100 /* v_cmps_o_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12100 /* v_cmps_o_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12100 /* v_cmps_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12130 /* v_cmps_o_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12130 /* v_cmps_o_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12130 /* v_cmps_o_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12160 /* v_cmps_tru_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12160 /* v_cmps_tru_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12160 /* v_cmps_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12194 /* v_cmps_tru_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12194 /* v_cmps_tru_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12194 /* v_cmps_tru_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12228 /* v_cmps_u_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12228 /* v_cmps_u_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12228 /* v_cmps_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12258 /* v_cmps_u_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12258 /* v_cmps_u_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12258 /* v_cmps_u_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12288 /* v_cmpsx_eq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12288 /* v_cmpsx_eq_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12288 /* v_cmpsx_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12322 /* v_cmpsx_eq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12322 /* v_cmpsx_eq_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12322 /* v_cmpsx_eq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12356 /* v_cmpsx_f_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12356 /* v_cmpsx_f_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12356 /* v_cmpsx_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12388 /* v_cmpsx_f_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12388 /* v_cmpsx_f_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12388 /* v_cmpsx_f_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12420 /* v_cmpsx_ge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12420 /* v_cmpsx_ge_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12420 /* v_cmpsx_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12454 /* v_cmpsx_ge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12454 /* v_cmpsx_ge_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12454 /* v_cmpsx_ge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12488 /* v_cmpsx_gt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12488 /* v_cmpsx_gt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12488 /* v_cmpsx_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12522 /* v_cmpsx_gt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12522 /* v_cmpsx_gt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12522 /* v_cmpsx_gt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12556 /* v_cmpsx_le_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12556 /* v_cmpsx_le_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12556 /* v_cmpsx_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12590 /* v_cmpsx_le_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12590 /* v_cmpsx_le_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12590 /* v_cmpsx_le_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12624 /* v_cmpsx_lg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12624 /* v_cmpsx_lg_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12624 /* v_cmpsx_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12658 /* v_cmpsx_lg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12658 /* v_cmpsx_lg_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12658 /* v_cmpsx_lg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12692 /* v_cmpsx_lt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12692 /* v_cmpsx_lt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12692 /* v_cmpsx_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12726 /* v_cmpsx_lt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12726 /* v_cmpsx_lt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12726 /* v_cmpsx_lt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12760 /* v_cmpsx_neq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12760 /* v_cmpsx_neq_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12760 /* v_cmpsx_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12796 /* v_cmpsx_neq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12796 /* v_cmpsx_neq_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12796 /* v_cmpsx_neq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12832 /* v_cmpsx_nge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12832 /* v_cmpsx_nge_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12832 /* v_cmpsx_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12868 /* v_cmpsx_nge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12868 /* v_cmpsx_nge_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12868 /* v_cmpsx_nge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12904 /* v_cmpsx_ngt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12904 /* v_cmpsx_ngt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12904 /* v_cmpsx_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12940 /* v_cmpsx_ngt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12940 /* v_cmpsx_ngt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12940 /* v_cmpsx_ngt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 12976 /* v_cmpsx_nle_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 12976 /* v_cmpsx_nle_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 12976 /* v_cmpsx_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 13012 /* v_cmpsx_nle_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 13012 /* v_cmpsx_nle_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 13012 /* v_cmpsx_nle_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 13048 /* v_cmpsx_nlg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 13048 /* v_cmpsx_nlg_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 13048 /* v_cmpsx_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 13084 /* v_cmpsx_nlg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 13084 /* v_cmpsx_nlg_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 13084 /* v_cmpsx_nlg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 13120 /* v_cmpsx_nlt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 13120 /* v_cmpsx_nlt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 13120 /* v_cmpsx_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 13156 /* v_cmpsx_nlt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 13156 /* v_cmpsx_nlt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 13156 /* v_cmpsx_nlt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 13192 /* v_cmpsx_o_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 13192 /* v_cmpsx_o_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 13192 /* v_cmpsx_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 13224 /* v_cmpsx_o_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 13224 /* v_cmpsx_o_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 13224 /* v_cmpsx_o_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 13256 /* v_cmpsx_tru_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 13256 /* v_cmpsx_tru_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 13256 /* v_cmpsx_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 13292 /* v_cmpsx_tru_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 13292 /* v_cmpsx_tru_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 13292 /* v_cmpsx_tru_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 13328 /* v_cmpsx_u_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 13328 /* v_cmpsx_u_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 13328 /* v_cmpsx_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 13360 /* v_cmpsx_u_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 13360 /* v_cmpsx_u_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 13360 /* v_cmpsx_u_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 13392 /* v_cmpx_class_f16 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 13392 /* v_cmpx_class_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 13392 /* v_cmpx_class_f16 */, MCK_VRegWithIntInputMods, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 13392 /* v_cmpx_class_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 13392 /* v_cmpx_class_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 13392 /* v_cmpx_class_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 13430 /* v_cmpx_class_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 13430 /* v_cmpx_class_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 13430 /* v_cmpx_class_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 13430 /* v_cmpx_class_f32 */, MCK_VRegWithIntInputMods, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 13430 /* v_cmpx_class_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 13430 /* v_cmpx_class_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 13430 /* v_cmpx_class_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 13468 /* v_cmpx_class_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 13468 /* v_cmpx_class_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isVI, 13506 /* v_cmpx_eq_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 13506 /* v_cmpx_eq_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 13506 /* v_cmpx_eq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 13506 /* v_cmpx_eq_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 13506 /* v_cmpx_eq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 13506 /* v_cmpx_eq_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 13506 /* v_cmpx_eq_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 13538 /* v_cmpx_eq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 13538 /* v_cmpx_eq_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 13538 /* v_cmpx_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 13538 /* v_cmpx_eq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 13538 /* v_cmpx_eq_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 13538 /* v_cmpx_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 13538 /* v_cmpx_eq_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 13538 /* v_cmpx_eq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 13538 /* v_cmpx_eq_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 13538 /* v_cmpx_eq_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 13570 /* v_cmpx_eq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 13570 /* v_cmpx_eq_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 13570 /* v_cmpx_eq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 13570 /* v_cmpx_eq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 13570 /* v_cmpx_eq_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 13570 /* v_cmpx_eq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 13602 /* v_cmpx_eq_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 13602 /* v_cmpx_eq_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 13602 /* v_cmpx_eq_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 13602 /* v_cmpx_eq_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 13634 /* v_cmpx_eq_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 13634 /* v_cmpx_eq_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 13634 /* v_cmpx_eq_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 13634 /* v_cmpx_eq_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 13698 /* v_cmpx_eq_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 13698 /* v_cmpx_eq_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 13698 /* v_cmpx_eq_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 13698 /* v_cmpx_eq_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 13730 /* v_cmpx_eq_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 13730 /* v_cmpx_eq_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 13730 /* v_cmpx_eq_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 13730 /* v_cmpx_eq_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 13794 /* v_cmpx_f_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 13794 /* v_cmpx_f_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 13794 /* v_cmpx_f_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 13794 /* v_cmpx_f_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 13794 /* v_cmpx_f_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 13794 /* v_cmpx_f_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 13794 /* v_cmpx_f_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 13824 /* v_cmpx_f_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 13824 /* v_cmpx_f_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 13824 /* v_cmpx_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 13824 /* v_cmpx_f_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 13824 /* v_cmpx_f_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 13824 /* v_cmpx_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 13824 /* v_cmpx_f_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 13824 /* v_cmpx_f_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 13824 /* v_cmpx_f_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 13824 /* v_cmpx_f_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 13854 /* v_cmpx_f_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 13854 /* v_cmpx_f_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 13854 /* v_cmpx_f_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 13854 /* v_cmpx_f_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 13854 /* v_cmpx_f_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 13854 /* v_cmpx_f_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 13884 /* v_cmpx_f_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 13884 /* v_cmpx_f_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 13884 /* v_cmpx_f_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 13884 /* v_cmpx_f_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 13914 /* v_cmpx_f_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 13914 /* v_cmpx_f_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 13914 /* v_cmpx_f_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 13914 /* v_cmpx_f_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 13974 /* v_cmpx_f_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 13974 /* v_cmpx_f_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 13974 /* v_cmpx_f_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 13974 /* v_cmpx_f_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 14004 /* v_cmpx_f_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 14004 /* v_cmpx_f_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14004 /* v_cmpx_f_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 14004 /* v_cmpx_f_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 14064 /* v_cmpx_ge_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 14064 /* v_cmpx_ge_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 14064 /* v_cmpx_ge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14064 /* v_cmpx_ge_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 14064 /* v_cmpx_ge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14064 /* v_cmpx_ge_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 14064 /* v_cmpx_ge_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14096 /* v_cmpx_ge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14096 /* v_cmpx_ge_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 14096 /* v_cmpx_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14096 /* v_cmpx_ge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14096 /* v_cmpx_ge_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 14096 /* v_cmpx_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14096 /* v_cmpx_ge_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 14096 /* v_cmpx_ge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14096 /* v_cmpx_ge_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 14096 /* v_cmpx_ge_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14128 /* v_cmpx_ge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14128 /* v_cmpx_ge_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 14128 /* v_cmpx_ge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14128 /* v_cmpx_ge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14128 /* v_cmpx_ge_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 14128 /* v_cmpx_ge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14160 /* v_cmpx_ge_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 14160 /* v_cmpx_ge_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14160 /* v_cmpx_ge_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 14160 /* v_cmpx_ge_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 14192 /* v_cmpx_ge_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 14192 /* v_cmpx_ge_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14192 /* v_cmpx_ge_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 14192 /* v_cmpx_ge_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 14256 /* v_cmpx_ge_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 14256 /* v_cmpx_ge_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14256 /* v_cmpx_ge_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 14256 /* v_cmpx_ge_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 14288 /* v_cmpx_ge_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 14288 /* v_cmpx_ge_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14288 /* v_cmpx_ge_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 14288 /* v_cmpx_ge_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 14352 /* v_cmpx_gt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 14352 /* v_cmpx_gt_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 14352 /* v_cmpx_gt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14352 /* v_cmpx_gt_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 14352 /* v_cmpx_gt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14352 /* v_cmpx_gt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 14352 /* v_cmpx_gt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14384 /* v_cmpx_gt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14384 /* v_cmpx_gt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 14384 /* v_cmpx_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14384 /* v_cmpx_gt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14384 /* v_cmpx_gt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 14384 /* v_cmpx_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14384 /* v_cmpx_gt_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 14384 /* v_cmpx_gt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14384 /* v_cmpx_gt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 14384 /* v_cmpx_gt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14416 /* v_cmpx_gt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14416 /* v_cmpx_gt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 14416 /* v_cmpx_gt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14416 /* v_cmpx_gt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14416 /* v_cmpx_gt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 14416 /* v_cmpx_gt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14448 /* v_cmpx_gt_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 14448 /* v_cmpx_gt_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14448 /* v_cmpx_gt_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 14448 /* v_cmpx_gt_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 14480 /* v_cmpx_gt_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 14480 /* v_cmpx_gt_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14480 /* v_cmpx_gt_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 14480 /* v_cmpx_gt_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 14544 /* v_cmpx_gt_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 14544 /* v_cmpx_gt_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14544 /* v_cmpx_gt_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 14544 /* v_cmpx_gt_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 14576 /* v_cmpx_gt_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 14576 /* v_cmpx_gt_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14576 /* v_cmpx_gt_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 14576 /* v_cmpx_gt_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 14640 /* v_cmpx_le_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 14640 /* v_cmpx_le_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 14640 /* v_cmpx_le_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14640 /* v_cmpx_le_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 14640 /* v_cmpx_le_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14640 /* v_cmpx_le_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 14640 /* v_cmpx_le_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14672 /* v_cmpx_le_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14672 /* v_cmpx_le_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 14672 /* v_cmpx_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14672 /* v_cmpx_le_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14672 /* v_cmpx_le_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 14672 /* v_cmpx_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14672 /* v_cmpx_le_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 14672 /* v_cmpx_le_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14672 /* v_cmpx_le_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 14672 /* v_cmpx_le_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14704 /* v_cmpx_le_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14704 /* v_cmpx_le_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 14704 /* v_cmpx_le_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14704 /* v_cmpx_le_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14704 /* v_cmpx_le_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 14704 /* v_cmpx_le_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14736 /* v_cmpx_le_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 14736 /* v_cmpx_le_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14736 /* v_cmpx_le_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 14736 /* v_cmpx_le_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 14768 /* v_cmpx_le_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 14768 /* v_cmpx_le_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14768 /* v_cmpx_le_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 14768 /* v_cmpx_le_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 14832 /* v_cmpx_le_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 14832 /* v_cmpx_le_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14832 /* v_cmpx_le_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 14832 /* v_cmpx_le_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 14864 /* v_cmpx_le_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 14864 /* v_cmpx_le_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14864 /* v_cmpx_le_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 14864 /* v_cmpx_le_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 14928 /* v_cmpx_lg_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 14928 /* v_cmpx_lg_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 14928 /* v_cmpx_lg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14928 /* v_cmpx_lg_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 14928 /* v_cmpx_lg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 14928 /* v_cmpx_lg_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 14928 /* v_cmpx_lg_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14960 /* v_cmpx_lg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14960 /* v_cmpx_lg_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 14960 /* v_cmpx_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14960 /* v_cmpx_lg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14960 /* v_cmpx_lg_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 14960 /* v_cmpx_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14960 /* v_cmpx_lg_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 14960 /* v_cmpx_lg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 14960 /* v_cmpx_lg_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 14960 /* v_cmpx_lg_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 14992 /* v_cmpx_lg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 14992 /* v_cmpx_lg_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 14992 /* v_cmpx_lg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 14992 /* v_cmpx_lg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 14992 /* v_cmpx_lg_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 14992 /* v_cmpx_lg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15024 /* v_cmpx_lt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15024 /* v_cmpx_lt_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 15024 /* v_cmpx_lt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15024 /* v_cmpx_lt_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15024 /* v_cmpx_lt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15024 /* v_cmpx_lt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 15024 /* v_cmpx_lt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15056 /* v_cmpx_lt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15056 /* v_cmpx_lt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 15056 /* v_cmpx_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15056 /* v_cmpx_lt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15056 /* v_cmpx_lt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 15056 /* v_cmpx_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15056 /* v_cmpx_lt_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 15056 /* v_cmpx_lt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15056 /* v_cmpx_lt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 15056 /* v_cmpx_lt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15088 /* v_cmpx_lt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15088 /* v_cmpx_lt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 15088 /* v_cmpx_lt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15088 /* v_cmpx_lt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15088 /* v_cmpx_lt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 15088 /* v_cmpx_lt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15120 /* v_cmpx_lt_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15120 /* v_cmpx_lt_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15120 /* v_cmpx_lt_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 15120 /* v_cmpx_lt_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 15152 /* v_cmpx_lt_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 15152 /* v_cmpx_lt_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15152 /* v_cmpx_lt_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 15152 /* v_cmpx_lt_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 15216 /* v_cmpx_lt_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15216 /* v_cmpx_lt_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15216 /* v_cmpx_lt_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 15216 /* v_cmpx_lt_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 15248 /* v_cmpx_lt_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 15248 /* v_cmpx_lt_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15248 /* v_cmpx_lt_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 15248 /* v_cmpx_lt_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 15312 /* v_cmpx_ne_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15312 /* v_cmpx_ne_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15312 /* v_cmpx_ne_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 15312 /* v_cmpx_ne_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 15344 /* v_cmpx_ne_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 15344 /* v_cmpx_ne_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15344 /* v_cmpx_ne_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 15344 /* v_cmpx_ne_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 15408 /* v_cmpx_ne_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15408 /* v_cmpx_ne_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15408 /* v_cmpx_ne_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 15408 /* v_cmpx_ne_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 15440 /* v_cmpx_ne_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 15440 /* v_cmpx_ne_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15440 /* v_cmpx_ne_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 15440 /* v_cmpx_ne_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 15504 /* v_cmpx_neq_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15504 /* v_cmpx_neq_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 15504 /* v_cmpx_neq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15504 /* v_cmpx_neq_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15504 /* v_cmpx_neq_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15504 /* v_cmpx_neq_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 15504 /* v_cmpx_neq_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15538 /* v_cmpx_neq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15538 /* v_cmpx_neq_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 15538 /* v_cmpx_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15538 /* v_cmpx_neq_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15538 /* v_cmpx_neq_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 15538 /* v_cmpx_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15538 /* v_cmpx_neq_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 15538 /* v_cmpx_neq_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15538 /* v_cmpx_neq_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 15538 /* v_cmpx_neq_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15572 /* v_cmpx_neq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15572 /* v_cmpx_neq_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 15572 /* v_cmpx_neq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15572 /* v_cmpx_neq_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15572 /* v_cmpx_neq_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 15572 /* v_cmpx_neq_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15606 /* v_cmpx_nge_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15606 /* v_cmpx_nge_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 15606 /* v_cmpx_nge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15606 /* v_cmpx_nge_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15606 /* v_cmpx_nge_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15606 /* v_cmpx_nge_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 15606 /* v_cmpx_nge_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15640 /* v_cmpx_nge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15640 /* v_cmpx_nge_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 15640 /* v_cmpx_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15640 /* v_cmpx_nge_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15640 /* v_cmpx_nge_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 15640 /* v_cmpx_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15640 /* v_cmpx_nge_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 15640 /* v_cmpx_nge_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15640 /* v_cmpx_nge_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 15640 /* v_cmpx_nge_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15674 /* v_cmpx_nge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15674 /* v_cmpx_nge_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 15674 /* v_cmpx_nge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15674 /* v_cmpx_nge_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15674 /* v_cmpx_nge_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 15674 /* v_cmpx_nge_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15708 /* v_cmpx_ngt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15708 /* v_cmpx_ngt_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 15708 /* v_cmpx_ngt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15708 /* v_cmpx_ngt_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15708 /* v_cmpx_ngt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15708 /* v_cmpx_ngt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 15708 /* v_cmpx_ngt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15742 /* v_cmpx_ngt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15742 /* v_cmpx_ngt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 15742 /* v_cmpx_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15742 /* v_cmpx_ngt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15742 /* v_cmpx_ngt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 15742 /* v_cmpx_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15742 /* v_cmpx_ngt_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 15742 /* v_cmpx_ngt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15742 /* v_cmpx_ngt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 15742 /* v_cmpx_ngt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15776 /* v_cmpx_ngt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15776 /* v_cmpx_ngt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 15776 /* v_cmpx_ngt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15776 /* v_cmpx_ngt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15776 /* v_cmpx_ngt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 15776 /* v_cmpx_ngt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15810 /* v_cmpx_nle_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15810 /* v_cmpx_nle_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 15810 /* v_cmpx_nle_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15810 /* v_cmpx_nle_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15810 /* v_cmpx_nle_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15810 /* v_cmpx_nle_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 15810 /* v_cmpx_nle_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15844 /* v_cmpx_nle_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15844 /* v_cmpx_nle_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 15844 /* v_cmpx_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15844 /* v_cmpx_nle_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15844 /* v_cmpx_nle_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 15844 /* v_cmpx_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15844 /* v_cmpx_nle_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 15844 /* v_cmpx_nle_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15844 /* v_cmpx_nle_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 15844 /* v_cmpx_nle_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15878 /* v_cmpx_nle_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15878 /* v_cmpx_nle_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 15878 /* v_cmpx_nle_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15878 /* v_cmpx_nle_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15878 /* v_cmpx_nle_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 15878 /* v_cmpx_nle_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15912 /* v_cmpx_nlg_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15912 /* v_cmpx_nlg_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 15912 /* v_cmpx_nlg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15912 /* v_cmpx_nlg_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 15912 /* v_cmpx_nlg_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 15912 /* v_cmpx_nlg_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 15912 /* v_cmpx_nlg_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15946 /* v_cmpx_nlg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15946 /* v_cmpx_nlg_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 15946 /* v_cmpx_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15946 /* v_cmpx_nlg_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15946 /* v_cmpx_nlg_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 15946 /* v_cmpx_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15946 /* v_cmpx_nlg_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 15946 /* v_cmpx_nlg_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 15946 /* v_cmpx_nlg_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 15946 /* v_cmpx_nlg_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 15980 /* v_cmpx_nlg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 15980 /* v_cmpx_nlg_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 15980 /* v_cmpx_nlg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 15980 /* v_cmpx_nlg_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 15980 /* v_cmpx_nlg_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 15980 /* v_cmpx_nlg_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 16014 /* v_cmpx_nlt_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 16014 /* v_cmpx_nlt_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 16014 /* v_cmpx_nlt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 16014 /* v_cmpx_nlt_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 16014 /* v_cmpx_nlt_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 16014 /* v_cmpx_nlt_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 16014 /* v_cmpx_nlt_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16048 /* v_cmpx_nlt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 16048 /* v_cmpx_nlt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16048 /* v_cmpx_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16048 /* v_cmpx_nlt_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 16048 /* v_cmpx_nlt_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 16048 /* v_cmpx_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16048 /* v_cmpx_nlt_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 16048 /* v_cmpx_nlt_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16048 /* v_cmpx_nlt_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16048 /* v_cmpx_nlt_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16082 /* v_cmpx_nlt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 16082 /* v_cmpx_nlt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16082 /* v_cmpx_nlt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16082 /* v_cmpx_nlt_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 16082 /* v_cmpx_nlt_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 16082 /* v_cmpx_nlt_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 16116 /* v_cmpx_o_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 16116 /* v_cmpx_o_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 16116 /* v_cmpx_o_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 16116 /* v_cmpx_o_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 16116 /* v_cmpx_o_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 16116 /* v_cmpx_o_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 16116 /* v_cmpx_o_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16146 /* v_cmpx_o_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 16146 /* v_cmpx_o_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16146 /* v_cmpx_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16146 /* v_cmpx_o_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 16146 /* v_cmpx_o_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 16146 /* v_cmpx_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16146 /* v_cmpx_o_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 16146 /* v_cmpx_o_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16146 /* v_cmpx_o_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16146 /* v_cmpx_o_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16176 /* v_cmpx_o_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 16176 /* v_cmpx_o_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16176 /* v_cmpx_o_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16176 /* v_cmpx_o_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 16176 /* v_cmpx_o_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 16176 /* v_cmpx_o_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 16206 /* v_cmpx_t_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 16206 /* v_cmpx_t_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 16206 /* v_cmpx_t_i16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 16206 /* v_cmpx_t_i16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16236 /* v_cmpx_t_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 16236 /* v_cmpx_t_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16236 /* v_cmpx_t_i32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16236 /* v_cmpx_t_i32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 16296 /* v_cmpx_t_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 16296 /* v_cmpx_t_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 16296 /* v_cmpx_t_u16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 16296 /* v_cmpx_t_u16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16326 /* v_cmpx_t_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 16326 /* v_cmpx_t_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16326 /* v_cmpx_t_u32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16326 /* v_cmpx_t_u32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isVI, 16386 /* v_cmpx_tru_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 16386 /* v_cmpx_tru_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 16386 /* v_cmpx_tru_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 16386 /* v_cmpx_tru_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 16386 /* v_cmpx_tru_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 16386 /* v_cmpx_tru_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 16386 /* v_cmpx_tru_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16420 /* v_cmpx_tru_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 16420 /* v_cmpx_tru_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16420 /* v_cmpx_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16420 /* v_cmpx_tru_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 16420 /* v_cmpx_tru_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 16420 /* v_cmpx_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16420 /* v_cmpx_tru_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 16420 /* v_cmpx_tru_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16420 /* v_cmpx_tru_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16420 /* v_cmpx_tru_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16454 /* v_cmpx_tru_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 16454 /* v_cmpx_tru_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16454 /* v_cmpx_tru_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16454 /* v_cmpx_tru_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 16454 /* v_cmpx_tru_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 16454 /* v_cmpx_tru_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 16488 /* v_cmpx_u_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 16488 /* v_cmpx_u_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI, 16488 /* v_cmpx_u_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 16488 /* v_cmpx_u_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI, 16488 /* v_cmpx_u_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI, 16488 /* v_cmpx_u_f16 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI, 16488 /* v_cmpx_u_f16 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16518 /* v_cmpx_u_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 16518 /* v_cmpx_u_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16518 /* v_cmpx_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16518 /* v_cmpx_u_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 16518 /* v_cmpx_u_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 16518 /* v_cmpx_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16518 /* v_cmpx_u_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 16518 /* v_cmpx_u_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16518 /* v_cmpx_u_f32 */, MCK_ImmSDWASrc0Sel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16518 /* v_cmpx_u_f32 */, MCK_ImmSDWASrc1Sel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16548 /* v_cmpx_u_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 16548 /* v_cmpx_u_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16548 /* v_cmpx_u_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16548 /* v_cmpx_u_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 16548 /* v_cmpx_u_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 16548 /* v_cmpx_u_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16592 /* v_cos_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16592 /* v_cos_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16592 /* v_cos_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16592 /* v_cos_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16592 /* v_cos_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16592 /* v_cos_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16592 /* v_cos_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16592 /* v_cos_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16592 /* v_cos_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16592 /* v_cos_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16592 /* v_cos_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16592 /* v_cos_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16592 /* v_cos_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16602 /* v_cos_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 16602 /* v_cos_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 16602 /* v_cos_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 16602 /* v_cos_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 16602 /* v_cos_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16602 /* v_cos_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16602 /* v_cos_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16602 /* v_cos_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16602 /* v_cos_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16602 /* v_cos_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16602 /* v_cos_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16602 /* v_cos_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16602 /* v_cos_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16602 /* v_cos_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16602 /* v_cos_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16602 /* v_cos_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16612 /* v_cubeid_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 16612 /* v_cubeid_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16612 /* v_cubeid_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 16612 /* v_cubeid_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 16612 /* v_cubeid_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 16612 /* v_cubeid_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16625 /* v_cubema_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 16625 /* v_cubema_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16625 /* v_cubema_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 16625 /* v_cubema_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 16625 /* v_cubema_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 16625 /* v_cubema_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16638 /* v_cubesc_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 16638 /* v_cubesc_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16638 /* v_cubesc_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 16638 /* v_cubesc_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 16638 /* v_cubesc_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 16638 /* v_cubesc_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16651 /* v_cubetc_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 16651 /* v_cubetc_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16651 /* v_cubetc_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 16651 /* v_cubetc_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 16651 /* v_cubetc_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 16651 /* v_cubetc_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16664 /* v_cvt_f16_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 16664 /* v_cvt_f16_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 16664 /* v_cvt_f16_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 16664 /* v_cvt_f16_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 16664 /* v_cvt_f16_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16664 /* v_cvt_f16_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16664 /* v_cvt_f16_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16664 /* v_cvt_f16_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16664 /* v_cvt_f16_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16664 /* v_cvt_f16_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16664 /* v_cvt_f16_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16664 /* v_cvt_f16_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16664 /* v_cvt_f16_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16664 /* v_cvt_f16_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16664 /* v_cvt_f16_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16664 /* v_cvt_f16_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16678 /* v_cvt_f16_i16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16678 /* v_cvt_f16_i16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16678 /* v_cvt_f16_i16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16678 /* v_cvt_f16_i16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16678 /* v_cvt_f16_i16 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16678 /* v_cvt_f16_i16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16678 /* v_cvt_f16_i16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16678 /* v_cvt_f16_i16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16678 /* v_cvt_f16_i16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16692 /* v_cvt_f16_u16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16692 /* v_cvt_f16_u16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16692 /* v_cvt_f16_u16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16692 /* v_cvt_f16_u16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16692 /* v_cvt_f16_u16 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16692 /* v_cvt_f16_u16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16692 /* v_cvt_f16_u16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16692 /* v_cvt_f16_u16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16692 /* v_cvt_f16_u16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16706 /* v_cvt_f32_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16706 /* v_cvt_f32_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16706 /* v_cvt_f32_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16706 /* v_cvt_f32_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16706 /* v_cvt_f32_f16 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16706 /* v_cvt_f32_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16706 /* v_cvt_f32_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16706 /* v_cvt_f32_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16706 /* v_cvt_f32_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16720 /* v_cvt_f32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 16720 /* v_cvt_f32_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 16720 /* v_cvt_f32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 16720 /* v_cvt_f32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 16720 /* v_cvt_f32_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16720 /* v_cvt_f32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16734 /* v_cvt_f32_i32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16734 /* v_cvt_f32_i32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16734 /* v_cvt_f32_i32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16734 /* v_cvt_f32_i32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16734 /* v_cvt_f32_i32 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16734 /* v_cvt_f32_i32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16734 /* v_cvt_f32_i32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16734 /* v_cvt_f32_i32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16734 /* v_cvt_f32_i32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16748 /* v_cvt_f32_u32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16748 /* v_cvt_f32_u32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16748 /* v_cvt_f32_u32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16748 /* v_cvt_f32_u32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16748 /* v_cvt_f32_u32 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16748 /* v_cvt_f32_u32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16748 /* v_cvt_f32_u32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16748 /* v_cvt_f32_u32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16748 /* v_cvt_f32_u32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16762 /* v_cvt_f32_ubyte0 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16762 /* v_cvt_f32_ubyte0 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16762 /* v_cvt_f32_ubyte0 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16762 /* v_cvt_f32_ubyte0 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16762 /* v_cvt_f32_ubyte0 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16762 /* v_cvt_f32_ubyte0 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16762 /* v_cvt_f32_ubyte0 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16762 /* v_cvt_f32_ubyte0 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16762 /* v_cvt_f32_ubyte0 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16779 /* v_cvt_f32_ubyte1 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16779 /* v_cvt_f32_ubyte1 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16779 /* v_cvt_f32_ubyte1 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16779 /* v_cvt_f32_ubyte1 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16779 /* v_cvt_f32_ubyte1 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16779 /* v_cvt_f32_ubyte1 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16779 /* v_cvt_f32_ubyte1 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16779 /* v_cvt_f32_ubyte1 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16779 /* v_cvt_f32_ubyte1 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16796 /* v_cvt_f32_ubyte2 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16796 /* v_cvt_f32_ubyte2 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16796 /* v_cvt_f32_ubyte2 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16796 /* v_cvt_f32_ubyte2 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16796 /* v_cvt_f32_ubyte2 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16796 /* v_cvt_f32_ubyte2 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16796 /* v_cvt_f32_ubyte2 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16796 /* v_cvt_f32_ubyte2 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16796 /* v_cvt_f32_ubyte2 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16813 /* v_cvt_f32_ubyte3 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16813 /* v_cvt_f32_ubyte3 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16813 /* v_cvt_f32_ubyte3 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16813 /* v_cvt_f32_ubyte3 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16813 /* v_cvt_f32_ubyte3 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16813 /* v_cvt_f32_ubyte3 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16813 /* v_cvt_f32_ubyte3 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16813 /* v_cvt_f32_ubyte3 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16813 /* v_cvt_f32_ubyte3 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16830 /* v_cvt_f64_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 16830 /* v_cvt_f64_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 16830 /* v_cvt_f64_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 16830 /* v_cvt_f64_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 16830 /* v_cvt_f64_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16830 /* v_cvt_f64_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 16872 /* v_cvt_flr_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 16872 /* v_cvt_flr_i32_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 16872 /* v_cvt_flr_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 16872 /* v_cvt_flr_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 16872 /* v_cvt_flr_i32_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16872 /* v_cvt_flr_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16872 /* v_cvt_flr_i32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16872 /* v_cvt_flr_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16872 /* v_cvt_flr_i32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16872 /* v_cvt_flr_i32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16872 /* v_cvt_flr_i32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16872 /* v_cvt_flr_i32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16872 /* v_cvt_flr_i32_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16872 /* v_cvt_flr_i32_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16872 /* v_cvt_flr_i32_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16872 /* v_cvt_flr_i32_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16890 /* v_cvt_i16_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16890 /* v_cvt_i16_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16890 /* v_cvt_i16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16890 /* v_cvt_i16_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16890 /* v_cvt_i16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16890 /* v_cvt_i16_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16890 /* v_cvt_i16_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16890 /* v_cvt_i16_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16890 /* v_cvt_i16_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16890 /* v_cvt_i16_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16890 /* v_cvt_i16_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16890 /* v_cvt_i16_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16890 /* v_cvt_i16_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16904 /* v_cvt_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 16904 /* v_cvt_i32_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 16904 /* v_cvt_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 16904 /* v_cvt_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 16904 /* v_cvt_i32_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16904 /* v_cvt_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16904 /* v_cvt_i32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16904 /* v_cvt_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16904 /* v_cvt_i32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16904 /* v_cvt_i32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16904 /* v_cvt_i32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16904 /* v_cvt_i32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16904 /* v_cvt_i32_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16904 /* v_cvt_i32_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16904 /* v_cvt_i32_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16904 /* v_cvt_i32_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16918 /* v_cvt_i32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 16918 /* v_cvt_i32_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 16918 /* v_cvt_i32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 16918 /* v_cvt_i32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 16918 /* v_cvt_i32_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16918 /* v_cvt_i32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16932 /* v_cvt_off_f32_i4 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16932 /* v_cvt_off_f32_i4 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16932 /* v_cvt_off_f32_i4 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 16932 /* v_cvt_off_f32_i4 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16932 /* v_cvt_off_f32_i4 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 16932 /* v_cvt_off_f32_i4 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 16932 /* v_cvt_off_f32_i4 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 16932 /* v_cvt_off_f32_i4 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 16932 /* v_cvt_off_f32_i4 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16983 /* v_cvt_pk_u8_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 16983 /* v_cvt_pk_u8_f32 */, MCK_RegOrImmWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 16983 /* v_cvt_pk_u8_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 16983 /* v_cvt_pk_u8_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 16983 /* v_cvt_pk_u8_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 16983 /* v_cvt_pk_u8_f32 */, MCK_RegOrImmWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 16983 /* v_cvt_pk_u8_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 16983 /* v_cvt_pk_u8_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16999 /* v_cvt_pkaccum_u8_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 16999 /* v_cvt_pkaccum_u8_f32 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 16999 /* v_cvt_pkaccum_u8_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 16999 /* v_cvt_pkaccum_u8_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 16999 /* v_cvt_pkaccum_u8_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 16999 /* v_cvt_pkaccum_u8_f32 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 16999 /* v_cvt_pkaccum_u8_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 16999 /* v_cvt_pkaccum_u8_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17020 /* v_cvt_pknorm_i16_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 17020 /* v_cvt_pknorm_i16_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17020 /* v_cvt_pknorm_i16_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17020 /* v_cvt_pknorm_i16_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 17020 /* v_cvt_pknorm_i16_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17020 /* v_cvt_pknorm_i16_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17041 /* v_cvt_pknorm_u16_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 17041 /* v_cvt_pknorm_u16_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17041 /* v_cvt_pknorm_u16_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17041 /* v_cvt_pknorm_u16_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 17041 /* v_cvt_pknorm_u16_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17041 /* v_cvt_pknorm_u16_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17062 /* v_cvt_pkrtz_f16_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 17062 /* v_cvt_pkrtz_f16_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17062 /* v_cvt_pkrtz_f16_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17062 /* v_cvt_pkrtz_f16_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 17062 /* v_cvt_pkrtz_f16_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17062 /* v_cvt_pkrtz_f16_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17082 /* v_cvt_rpi_i32_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17100 /* v_cvt_u16_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17100 /* v_cvt_u16_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17100 /* v_cvt_u16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17100 /* v_cvt_u16_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17100 /* v_cvt_u16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17100 /* v_cvt_u16_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17100 /* v_cvt_u16_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17100 /* v_cvt_u16_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17100 /* v_cvt_u16_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17100 /* v_cvt_u16_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17100 /* v_cvt_u16_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17100 /* v_cvt_u16_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17100 /* v_cvt_u16_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17114 /* v_cvt_u32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17114 /* v_cvt_u32_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17114 /* v_cvt_u32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17114 /* v_cvt_u32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17114 /* v_cvt_u32_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17114 /* v_cvt_u32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17114 /* v_cvt_u32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17114 /* v_cvt_u32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17114 /* v_cvt_u32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17114 /* v_cvt_u32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17114 /* v_cvt_u32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17114 /* v_cvt_u32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17114 /* v_cvt_u32_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17114 /* v_cvt_u32_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17114 /* v_cvt_u32_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17114 /* v_cvt_u32_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17128 /* v_cvt_u32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17128 /* v_cvt_u32_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17128 /* v_cvt_u32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17128 /* v_cvt_u32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17128 /* v_cvt_u32_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17128 /* v_cvt_u32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17142 /* v_div_fixup_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isVI|Feature_isVI, 17142 /* v_div_fixup_f16 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17142 /* v_div_fixup_f16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17158 /* v_div_fixup_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 17158 /* v_div_fixup_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17158 /* v_div_fixup_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17158 /* v_div_fixup_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 17158 /* v_div_fixup_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 17158 /* v_div_fixup_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17174 /* v_div_fixup_f64 */, MCK_RegOrImmWithFP64InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 17174 /* v_div_fixup_f64 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17174 /* v_div_fixup_f64 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17174 /* v_div_fixup_f64 */, MCK_RegOrImmWithFP64InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 17174 /* v_div_fixup_f64 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 17174 /* v_div_fixup_f64 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17190 /* v_div_fmas_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 17190 /* v_div_fmas_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17190 /* v_div_fmas_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17190 /* v_div_fmas_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 17190 /* v_div_fmas_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 17190 /* v_div_fmas_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17205 /* v_div_fmas_f64 */, MCK_RegOrImmWithFP64InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 17205 /* v_div_fmas_f64 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17205 /* v_div_fmas_f64 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17205 /* v_div_fmas_f64 */, MCK_RegOrImmWithFP64InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 17205 /* v_div_fmas_f64 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 17205 /* v_div_fmas_f64 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17252 /* v_exp_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17252 /* v_exp_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17252 /* v_exp_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17252 /* v_exp_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17252 /* v_exp_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17252 /* v_exp_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17252 /* v_exp_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17252 /* v_exp_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17252 /* v_exp_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17252 /* v_exp_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17252 /* v_exp_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17252 /* v_exp_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17252 /* v_exp_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17262 /* v_exp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17262 /* v_exp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17262 /* v_exp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17262 /* v_exp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17262 /* v_exp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17262 /* v_exp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17262 /* v_exp_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17262 /* v_exp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17262 /* v_exp_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17262 /* v_exp_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17262 /* v_exp_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17262 /* v_exp_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17262 /* v_exp_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17262 /* v_exp_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17262 /* v_exp_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17262 /* v_exp_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 17272 /* v_exp_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isCIOnly, 17272 /* v_exp_legacy_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 17272 /* v_exp_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 17272 /* v_exp_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isVI, 17272 /* v_exp_legacy_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 17272 /* v_exp_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 17272 /* v_exp_legacy_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isVI, 17272 /* v_exp_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 17272 /* v_exp_legacy_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 17272 /* v_exp_legacy_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 17272 /* v_exp_legacy_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17272 /* v_exp_legacy_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17272 /* v_exp_legacy_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17272 /* v_exp_legacy_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17272 /* v_exp_legacy_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17272 /* v_exp_legacy_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17289 /* v_ffbh_i32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17289 /* v_ffbh_i32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17289 /* v_ffbh_i32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17289 /* v_ffbh_i32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17289 /* v_ffbh_i32 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17289 /* v_ffbh_i32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17289 /* v_ffbh_i32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17289 /* v_ffbh_i32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17289 /* v_ffbh_i32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17300 /* v_ffbh_u32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17300 /* v_ffbh_u32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17300 /* v_ffbh_u32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17300 /* v_ffbh_u32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17300 /* v_ffbh_u32 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17300 /* v_ffbh_u32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17300 /* v_ffbh_u32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17300 /* v_ffbh_u32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17300 /* v_ffbh_u32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17311 /* v_ffbl_b32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17311 /* v_ffbl_b32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17311 /* v_ffbl_b32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17311 /* v_ffbl_b32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17311 /* v_ffbl_b32 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17311 /* v_ffbl_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17311 /* v_ffbl_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17311 /* v_ffbl_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17311 /* v_ffbl_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17322 /* v_floor_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17322 /* v_floor_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17322 /* v_floor_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17322 /* v_floor_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17322 /* v_floor_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17322 /* v_floor_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17322 /* v_floor_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17322 /* v_floor_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17322 /* v_floor_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17322 /* v_floor_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17322 /* v_floor_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17322 /* v_floor_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17322 /* v_floor_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17334 /* v_floor_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17334 /* v_floor_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17334 /* v_floor_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17334 /* v_floor_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17334 /* v_floor_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17334 /* v_floor_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17334 /* v_floor_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17334 /* v_floor_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17334 /* v_floor_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17334 /* v_floor_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17334 /* v_floor_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17334 /* v_floor_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17334 /* v_floor_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17334 /* v_floor_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17334 /* v_floor_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17334 /* v_floor_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 17346 /* v_floor_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isCIOnly, 17346 /* v_floor_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 17346 /* v_floor_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 17346 /* v_floor_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isVI, 17346 /* v_floor_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 17346 /* v_floor_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17358 /* v_fma_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isVI|Feature_isVI, 17358 /* v_fma_f16 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17358 /* v_fma_f16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17368 /* v_fma_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 17368 /* v_fma_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17368 /* v_fma_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17368 /* v_fma_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 17368 /* v_fma_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 17368 /* v_fma_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17378 /* v_fma_f64 */, MCK_RegOrImmWithFP64InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 17378 /* v_fma_f64 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17378 /* v_fma_f64 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17378 /* v_fma_f64 */, MCK_RegOrImmWithFP64InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 17378 /* v_fma_f64 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 17378 /* v_fma_f64 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17388 /* v_fract_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17388 /* v_fract_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17388 /* v_fract_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17388 /* v_fract_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17388 /* v_fract_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17388 /* v_fract_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17388 /* v_fract_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17388 /* v_fract_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17388 /* v_fract_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17388 /* v_fract_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17388 /* v_fract_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17388 /* v_fract_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17388 /* v_fract_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17400 /* v_fract_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17400 /* v_fract_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17400 /* v_fract_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17400 /* v_fract_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17400 /* v_fract_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17400 /* v_fract_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17400 /* v_fract_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17400 /* v_fract_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17400 /* v_fract_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17400 /* v_fract_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17400 /* v_fract_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17400 /* v_fract_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17400 /* v_fract_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17400 /* v_fract_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17400 /* v_fract_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17400 /* v_fract_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17412 /* v_fract_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17412 /* v_fract_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17412 /* v_fract_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17412 /* v_fract_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17412 /* v_fract_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17412 /* v_fract_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17424 /* v_frexp_exp_i16_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17424 /* v_frexp_exp_i16_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17424 /* v_frexp_exp_i16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17424 /* v_frexp_exp_i16_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17424 /* v_frexp_exp_i16_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17424 /* v_frexp_exp_i16_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17424 /* v_frexp_exp_i16_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17424 /* v_frexp_exp_i16_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17424 /* v_frexp_exp_i16_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17424 /* v_frexp_exp_i16_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17424 /* v_frexp_exp_i16_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17424 /* v_frexp_exp_i16_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17424 /* v_frexp_exp_i16_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17444 /* v_frexp_exp_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17444 /* v_frexp_exp_i32_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17444 /* v_frexp_exp_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17444 /* v_frexp_exp_i32_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17444 /* v_frexp_exp_i32_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17444 /* v_frexp_exp_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17444 /* v_frexp_exp_i32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17444 /* v_frexp_exp_i32_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17444 /* v_frexp_exp_i32_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17444 /* v_frexp_exp_i32_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17444 /* v_frexp_exp_i32_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17444 /* v_frexp_exp_i32_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17444 /* v_frexp_exp_i32_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17444 /* v_frexp_exp_i32_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17444 /* v_frexp_exp_i32_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17444 /* v_frexp_exp_i32_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17464 /* v_frexp_exp_i32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17464 /* v_frexp_exp_i32_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17464 /* v_frexp_exp_i32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17464 /* v_frexp_exp_i32_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17464 /* v_frexp_exp_i32_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17464 /* v_frexp_exp_i32_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17484 /* v_frexp_mant_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17484 /* v_frexp_mant_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17484 /* v_frexp_mant_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17484 /* v_frexp_mant_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17484 /* v_frexp_mant_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17484 /* v_frexp_mant_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17484 /* v_frexp_mant_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17484 /* v_frexp_mant_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17484 /* v_frexp_mant_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17484 /* v_frexp_mant_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17484 /* v_frexp_mant_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17484 /* v_frexp_mant_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17484 /* v_frexp_mant_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17501 /* v_frexp_mant_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17501 /* v_frexp_mant_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17501 /* v_frexp_mant_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17501 /* v_frexp_mant_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17501 /* v_frexp_mant_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17501 /* v_frexp_mant_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17501 /* v_frexp_mant_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17501 /* v_frexp_mant_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17501 /* v_frexp_mant_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17501 /* v_frexp_mant_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17501 /* v_frexp_mant_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17501 /* v_frexp_mant_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17501 /* v_frexp_mant_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17501 /* v_frexp_mant_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17501 /* v_frexp_mant_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17501 /* v_frexp_mant_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17518 /* v_frexp_mant_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17518 /* v_frexp_mant_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17518 /* v_frexp_mant_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17518 /* v_frexp_mant_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17518 /* v_frexp_mant_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17518 /* v_frexp_mant_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 17535 /* v_interp_mov_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 17535 /* v_interp_mov_f32 */, MCK_InterpSlot, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17535 /* v_interp_mov_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17535 /* v_interp_mov_f32 */, MCK_InterpSlot, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17552 /* v_interp_p1_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17552 /* v_interp_p1_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 17552 /* v_interp_p1_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17552 /* v_interp_p1_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17568 /* v_interp_p1ll_f16 */, MCK_RegOrImmWithFP16InputMods, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17568 /* v_interp_p1ll_f16 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17568 /* v_interp_p1ll_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17568 /* v_interp_p1ll_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17586 /* v_interp_p1lv_f16 */, MCK_RegOrImmWithFP16InputMods, 12 /* 2, 3 */ },
  { Feature_isVI|Feature_isVI, 17586 /* v_interp_p1lv_f16 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17586 /* v_interp_p1lv_f16 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17586 /* v_interp_p1lv_f16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17604 /* v_interp_p2_f16 */, MCK_RegOrImmWithFP16InputMods, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17604 /* v_interp_p2_f16 */, MCK_RegOrImmWithFP32InputMods, 10 /* 1, 3 */ },
  { Feature_isVI|Feature_isVI, 17604 /* v_interp_p2_f16 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17604 /* v_interp_p2_f16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17620 /* v_interp_p2_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17620 /* v_interp_p2_f32 */, MCK_Attr, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_VRegWithIntInputMods, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_VRegWithIntInputMods, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 17636 /* v_ldexp_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17648 /* v_ldexp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17648 /* v_ldexp_f32 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 17648 /* v_ldexp_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17648 /* v_ldexp_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17648 /* v_ldexp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17648 /* v_ldexp_f32 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17648 /* v_ldexp_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17648 /* v_ldexp_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17660 /* v_ldexp_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17660 /* v_ldexp_f64 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 17660 /* v_ldexp_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17660 /* v_ldexp_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17660 /* v_ldexp_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17660 /* v_ldexp_f64 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17660 /* v_ldexp_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17660 /* v_ldexp_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17682 /* v_log_clamp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 17682 /* v_log_clamp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 17682 /* v_log_clamp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17698 /* v_log_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17698 /* v_log_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17698 /* v_log_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17698 /* v_log_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17698 /* v_log_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17698 /* v_log_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17698 /* v_log_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17698 /* v_log_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17698 /* v_log_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17698 /* v_log_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17698 /* v_log_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17698 /* v_log_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17698 /* v_log_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17708 /* v_log_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 17708 /* v_log_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 17708 /* v_log_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 17708 /* v_log_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 17708 /* v_log_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17708 /* v_log_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17708 /* v_log_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17708 /* v_log_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17708 /* v_log_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17708 /* v_log_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17708 /* v_log_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17708 /* v_log_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17708 /* v_log_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17708 /* v_log_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17708 /* v_log_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17708 /* v_log_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 17718 /* v_log_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isCIOnly, 17718 /* v_log_legacy_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 17718 /* v_log_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 17718 /* v_log_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isVI, 17718 /* v_log_legacy_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 17718 /* v_log_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 17718 /* v_log_legacy_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isVI, 17718 /* v_log_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 17718 /* v_log_legacy_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 17718 /* v_log_legacy_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isVI, 17718 /* v_log_legacy_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17718 /* v_log_legacy_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 17718 /* v_log_legacy_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 17718 /* v_log_legacy_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17718 /* v_log_legacy_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17718 /* v_log_legacy_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17757 /* v_lshlrev_b16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17757 /* v_lshlrev_b16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17757 /* v_lshlrev_b16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17757 /* v_lshlrev_b16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 17757 /* v_lshlrev_b16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 17757 /* v_lshlrev_b16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17757 /* v_lshlrev_b16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17757 /* v_lshlrev_b16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 17757 /* v_lshlrev_b16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 17757 /* v_lshlrev_b16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17771 /* v_lshlrev_b32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17771 /* v_lshlrev_b32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17771 /* v_lshlrev_b32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17771 /* v_lshlrev_b32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 17771 /* v_lshlrev_b32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 17771 /* v_lshlrev_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17771 /* v_lshlrev_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17771 /* v_lshlrev_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 17771 /* v_lshlrev_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 17771 /* v_lshlrev_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17821 /* v_lshrrev_b16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17821 /* v_lshrrev_b16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17821 /* v_lshrrev_b16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17821 /* v_lshrrev_b16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 17821 /* v_lshrrev_b16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 17821 /* v_lshrrev_b16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17821 /* v_lshrrev_b16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17821 /* v_lshrrev_b16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 17821 /* v_lshrrev_b16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 17821 /* v_lshrrev_b16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17835 /* v_lshrrev_b32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17835 /* v_lshrrev_b32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17835 /* v_lshrrev_b32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17835 /* v_lshrrev_b32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 17835 /* v_lshrrev_b32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 17835 /* v_lshrrev_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17835 /* v_lshrrev_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17835 /* v_lshrrev_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 17835 /* v_lshrrev_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 17835 /* v_lshrrev_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17863 /* v_mac_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 17863 /* v_mac_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17863 /* v_mac_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17863 /* v_mac_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 17863 /* v_mac_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17863 /* v_mac_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17863 /* v_mac_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17863 /* v_mac_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 17863 /* v_mac_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 17863 /* v_mac_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17863 /* v_mac_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17863 /* v_mac_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 17863 /* v_mac_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 17863 /* v_mac_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17873 /* v_mac_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 17873 /* v_mac_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17873 /* v_mac_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17873 /* v_mac_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 17873 /* v_mac_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17873 /* v_mac_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17873 /* v_mac_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 17873 /* v_mac_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17873 /* v_mac_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 17873 /* v_mac_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17873 /* v_mac_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 17873 /* v_mac_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 17873 /* v_mac_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 17873 /* v_mac_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17873 /* v_mac_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 17873 /* v_mac_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 17873 /* v_mac_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isSICI|Feature_isSICI, 17883 /* v_mac_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 17883 /* v_mac_legacy_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 17883 /* v_mac_legacy_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 17900 /* v_mad_f16 */, MCK_RegOrImmWithFP16InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isVI|Feature_isVI, 17900 /* v_mad_f16 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 17900 /* v_mad_f16 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17910 /* v_mad_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 17910 /* v_mad_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17910 /* v_mad_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17910 /* v_mad_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 17910 /* v_mad_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 17910 /* v_mad_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 17958 /* v_mad_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 17958 /* v_mad_legacy_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 17958 /* v_mad_legacy_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 17958 /* v_mad_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 17958 /* v_mad_legacy_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 17958 /* v_mad_legacy_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18013 /* v_madak_f16 */, MCK_KImmFP16, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 18025 /* v_madak_f32 */, MCK_KImmFP32, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18025 /* v_madak_f32 */, MCK_KImmFP32, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18037 /* v_madmk_f16 */, MCK_KImmFP16, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 18049 /* v_madmk_f32 */, MCK_KImmFP32, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 18049 /* v_madmk_f32 */, MCK_KImmFP32, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 18061 /* v_max3_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 18061 /* v_max3_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18061 /* v_max3_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18061 /* v_max3_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 18061 /* v_max3_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 18061 /* v_max3_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18094 /* v_max_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18094 /* v_max_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18094 /* v_max_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18094 /* v_max_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18094 /* v_max_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18094 /* v_max_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18094 /* v_max_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18094 /* v_max_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18094 /* v_max_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18094 /* v_max_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18094 /* v_max_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18094 /* v_max_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18094 /* v_max_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 18094 /* v_max_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18104 /* v_max_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 18104 /* v_max_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 18104 /* v_max_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18104 /* v_max_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18104 /* v_max_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18104 /* v_max_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18104 /* v_max_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18104 /* v_max_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18104 /* v_max_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18104 /* v_max_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18104 /* v_max_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18104 /* v_max_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18104 /* v_max_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18104 /* v_max_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18104 /* v_max_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18104 /* v_max_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18104 /* v_max_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18114 /* v_max_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 18114 /* v_max_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 18114 /* v_max_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18114 /* v_max_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18114 /* v_max_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18114 /* v_max_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18124 /* v_max_i16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18124 /* v_max_i16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18124 /* v_max_i16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18124 /* v_max_i16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18124 /* v_max_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18124 /* v_max_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18124 /* v_max_i16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18124 /* v_max_i16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18124 /* v_max_i16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 18124 /* v_max_i16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18134 /* v_max_i32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18134 /* v_max_i32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18134 /* v_max_i32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18134 /* v_max_i32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18134 /* v_max_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18134 /* v_max_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18134 /* v_max_i32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18134 /* v_max_i32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18134 /* v_max_i32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18134 /* v_max_i32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isSICI|Feature_isSICI, 18144 /* v_max_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 18144 /* v_max_legacy_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 18144 /* v_max_legacy_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18161 /* v_max_u16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18161 /* v_max_u16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18161 /* v_max_u16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18161 /* v_max_u16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18161 /* v_max_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18161 /* v_max_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18161 /* v_max_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18161 /* v_max_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18161 /* v_max_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 18161 /* v_max_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18171 /* v_max_u32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18171 /* v_max_u32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18171 /* v_max_u32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18171 /* v_max_u32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18171 /* v_max_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18171 /* v_max_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18171 /* v_max_u32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18171 /* v_max_u32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18171 /* v_max_u32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18171 /* v_max_u32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18219 /* v_med3_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 18219 /* v_med3_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18219 /* v_med3_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18219 /* v_med3_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 18219 /* v_med3_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 18219 /* v_med3_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 18252 /* v_min3_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isSICI, 18252 /* v_min3_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18252 /* v_min3_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18252 /* v_min3_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 18252 /* v_min3_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 18252 /* v_min3_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18285 /* v_min_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18285 /* v_min_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18285 /* v_min_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18285 /* v_min_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18285 /* v_min_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18285 /* v_min_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18285 /* v_min_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18285 /* v_min_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18285 /* v_min_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18285 /* v_min_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18285 /* v_min_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18285 /* v_min_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18285 /* v_min_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 18285 /* v_min_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18295 /* v_min_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 18295 /* v_min_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 18295 /* v_min_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18295 /* v_min_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18295 /* v_min_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18295 /* v_min_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18295 /* v_min_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18295 /* v_min_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18295 /* v_min_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18295 /* v_min_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18295 /* v_min_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18295 /* v_min_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18295 /* v_min_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18295 /* v_min_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18295 /* v_min_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18295 /* v_min_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18295 /* v_min_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18305 /* v_min_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 18305 /* v_min_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 18305 /* v_min_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18305 /* v_min_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18305 /* v_min_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18305 /* v_min_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18315 /* v_min_i16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18315 /* v_min_i16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18315 /* v_min_i16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18315 /* v_min_i16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18315 /* v_min_i16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18315 /* v_min_i16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18315 /* v_min_i16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18315 /* v_min_i16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18315 /* v_min_i16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 18315 /* v_min_i16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18325 /* v_min_i32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18325 /* v_min_i32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18325 /* v_min_i32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18325 /* v_min_i32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18325 /* v_min_i32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18325 /* v_min_i32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18325 /* v_min_i32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18325 /* v_min_i32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18325 /* v_min_i32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18325 /* v_min_i32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isSICI|Feature_isSICI, 18335 /* v_min_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isSICI|Feature_isSICI, 18335 /* v_min_legacy_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isSICI|Feature_isSICI, 18335 /* v_min_legacy_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18352 /* v_min_u16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18352 /* v_min_u16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18352 /* v_min_u16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18352 /* v_min_u16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18352 /* v_min_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18352 /* v_min_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18352 /* v_min_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18352 /* v_min_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18352 /* v_min_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 18352 /* v_min_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18362 /* v_min_u32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18362 /* v_min_u32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18362 /* v_min_u32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18362 /* v_min_u32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18362 /* v_min_u32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18362 /* v_min_u32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18362 /* v_min_u32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18362 /* v_min_u32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18362 /* v_min_u32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18362 /* v_min_u32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18372 /* v_mov_b32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18372 /* v_mov_b32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18372 /* v_mov_b32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18372 /* v_mov_b32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18372 /* v_mov_b32 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18372 /* v_mov_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18372 /* v_mov_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18372 /* v_mov_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18372 /* v_mov_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18497 /* v_mul_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18497 /* v_mul_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18497 /* v_mul_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18497 /* v_mul_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18497 /* v_mul_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18497 /* v_mul_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18497 /* v_mul_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18497 /* v_mul_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18497 /* v_mul_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18497 /* v_mul_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18497 /* v_mul_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18497 /* v_mul_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18497 /* v_mul_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 18497 /* v_mul_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18507 /* v_mul_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 18507 /* v_mul_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 18507 /* v_mul_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18507 /* v_mul_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18507 /* v_mul_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18507 /* v_mul_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18507 /* v_mul_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18507 /* v_mul_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18507 /* v_mul_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18507 /* v_mul_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18507 /* v_mul_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18507 /* v_mul_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18507 /* v_mul_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18507 /* v_mul_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18507 /* v_mul_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18507 /* v_mul_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18507 /* v_mul_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18517 /* v_mul_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 18517 /* v_mul_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 18517 /* v_mul_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18517 /* v_mul_f64 */, MCK_RegOrImmWithFP64InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18517 /* v_mul_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18517 /* v_mul_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18540 /* v_mul_hi_i32_i24 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18540 /* v_mul_hi_i32_i24 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18540 /* v_mul_hi_i32_i24 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18540 /* v_mul_hi_i32_i24 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18540 /* v_mul_hi_i32_i24 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18540 /* v_mul_hi_i32_i24 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18540 /* v_mul_hi_i32_i24 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18540 /* v_mul_hi_i32_i24 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18540 /* v_mul_hi_i32_i24 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18540 /* v_mul_hi_i32_i24 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18570 /* v_mul_hi_u32_u24 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18570 /* v_mul_hi_u32_u24 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18570 /* v_mul_hi_u32_u24 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18570 /* v_mul_hi_u32_u24 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18570 /* v_mul_hi_u32_u24 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18570 /* v_mul_hi_u32_u24 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18570 /* v_mul_hi_u32_u24 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18570 /* v_mul_hi_u32_u24 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18570 /* v_mul_hi_u32_u24 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18570 /* v_mul_hi_u32_u24 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18587 /* v_mul_i32_i24 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18587 /* v_mul_i32_i24 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18587 /* v_mul_i32_i24 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18587 /* v_mul_i32_i24 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18587 /* v_mul_i32_i24 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18587 /* v_mul_i32_i24 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18587 /* v_mul_i32_i24 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18587 /* v_mul_i32_i24 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18587 /* v_mul_i32_i24 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18587 /* v_mul_i32_i24 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18601 /* v_mul_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 18601 /* v_mul_legacy_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 18601 /* v_mul_legacy_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18601 /* v_mul_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18601 /* v_mul_legacy_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18601 /* v_mul_legacy_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18601 /* v_mul_legacy_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18601 /* v_mul_legacy_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18601 /* v_mul_legacy_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18601 /* v_mul_legacy_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18601 /* v_mul_legacy_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18601 /* v_mul_legacy_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18601 /* v_mul_legacy_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18601 /* v_mul_legacy_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18601 /* v_mul_legacy_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18601 /* v_mul_legacy_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18601 /* v_mul_legacy_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18631 /* v_mul_lo_u16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18631 /* v_mul_lo_u16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18631 /* v_mul_lo_u16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18631 /* v_mul_lo_u16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18631 /* v_mul_lo_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 18631 /* v_mul_lo_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18631 /* v_mul_lo_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18631 /* v_mul_lo_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 18631 /* v_mul_lo_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 18631 /* v_mul_lo_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18657 /* v_mul_u32_u24 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18657 /* v_mul_u32_u24 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18657 /* v_mul_u32_u24 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18657 /* v_mul_u32_u24 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18657 /* v_mul_u32_u24 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18657 /* v_mul_u32_u24 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18657 /* v_mul_u32_u24 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18657 /* v_mul_u32_u24 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18657 /* v_mul_u32_u24 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18657 /* v_mul_u32_u24 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isSICI|Feature_isSICI, 18671 /* v_mullit_f32 */, MCK_RegOrImmWithFP32InputMods, 14 /* 1, 2, 3 */ },
  { Feature_isSICI|Feature_isSICI, 18671 /* v_mullit_f32 */, MCK_ImmOModSI, 32 /* 5 */ },
  { Feature_isSICI|Feature_isSICI, 18671 /* v_mullit_f32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18684 /* v_nop */, MCK_ImmDPPCtrl, 1 /* 0 */ },
  { Feature_isVI|Feature_isVI, 18684 /* v_nop */, MCK_ImmRowMask, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18684 /* v_nop */, MCK_ImmBankMask, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18684 /* v_nop */, MCK_ImmBoundCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18690 /* v_not_b32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18690 /* v_not_b32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18690 /* v_not_b32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18690 /* v_not_b32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18690 /* v_not_b32 */, MCK_VRegWithIntInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18690 /* v_not_b32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18690 /* v_not_b32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18690 /* v_not_b32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18690 /* v_not_b32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18700 /* v_or_b32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18700 /* v_or_b32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18700 /* v_or_b32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18700 /* v_or_b32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18700 /* v_or_b32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 18700 /* v_or_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18700 /* v_or_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 18700 /* v_or_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 18700 /* v_or_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 18700 /* v_or_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isSICI|Feature_isSICI, 18726 /* v_rcp_clamp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 18726 /* v_rcp_clamp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 18726 /* v_rcp_clamp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isSICI|Feature_isSICI, 18742 /* v_rcp_clamp_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 18742 /* v_rcp_clamp_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 18742 /* v_rcp_clamp_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18758 /* v_rcp_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18758 /* v_rcp_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18758 /* v_rcp_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18758 /* v_rcp_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18758 /* v_rcp_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18758 /* v_rcp_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18758 /* v_rcp_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18758 /* v_rcp_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18758 /* v_rcp_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18758 /* v_rcp_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18758 /* v_rcp_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18758 /* v_rcp_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18758 /* v_rcp_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18768 /* v_rcp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 18768 /* v_rcp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 18768 /* v_rcp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 18768 /* v_rcp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 18768 /* v_rcp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18768 /* v_rcp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18768 /* v_rcp_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18768 /* v_rcp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18768 /* v_rcp_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18768 /* v_rcp_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18768 /* v_rcp_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18768 /* v_rcp_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18768 /* v_rcp_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18768 /* v_rcp_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18768 /* v_rcp_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18768 /* v_rcp_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18778 /* v_rcp_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 18778 /* v_rcp_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 18778 /* v_rcp_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 18778 /* v_rcp_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 18778 /* v_rcp_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18778 /* v_rcp_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 18788 /* v_rcp_iflag_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 18788 /* v_rcp_iflag_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 18788 /* v_rcp_iflag_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 18788 /* v_rcp_iflag_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 18788 /* v_rcp_iflag_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18788 /* v_rcp_iflag_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18788 /* v_rcp_iflag_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18788 /* v_rcp_iflag_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18788 /* v_rcp_iflag_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18788 /* v_rcp_iflag_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18788 /* v_rcp_iflag_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18788 /* v_rcp_iflag_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18788 /* v_rcp_iflag_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18788 /* v_rcp_iflag_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18788 /* v_rcp_iflag_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18788 /* v_rcp_iflag_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isSICI|Feature_isSICI, 18804 /* v_rcp_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 18804 /* v_rcp_legacy_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 18804 /* v_rcp_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18856 /* v_rndne_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18856 /* v_rndne_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18856 /* v_rndne_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18856 /* v_rndne_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18856 /* v_rndne_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18856 /* v_rndne_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18856 /* v_rndne_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18856 /* v_rndne_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18856 /* v_rndne_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18856 /* v_rndne_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18856 /* v_rndne_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18856 /* v_rndne_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18856 /* v_rndne_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18868 /* v_rndne_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 18868 /* v_rndne_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 18868 /* v_rndne_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 18868 /* v_rndne_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 18868 /* v_rndne_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18868 /* v_rndne_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18868 /* v_rndne_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18868 /* v_rndne_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18868 /* v_rndne_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18868 /* v_rndne_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18868 /* v_rndne_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18868 /* v_rndne_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18868 /* v_rndne_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18868 /* v_rndne_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18868 /* v_rndne_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18868 /* v_rndne_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 18880 /* v_rndne_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isCIOnly, 18880 /* v_rndne_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 18880 /* v_rndne_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 18880 /* v_rndne_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isVI, 18880 /* v_rndne_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 18880 /* v_rndne_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isSICI|Feature_isSICI, 18892 /* v_rsq_clamp_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 18892 /* v_rsq_clamp_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 18892 /* v_rsq_clamp_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isSICI|Feature_isSICI, 18908 /* v_rsq_clamp_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 18908 /* v_rsq_clamp_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 18908 /* v_rsq_clamp_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18924 /* v_rsq_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18924 /* v_rsq_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18924 /* v_rsq_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18924 /* v_rsq_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18924 /* v_rsq_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18924 /* v_rsq_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18924 /* v_rsq_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18924 /* v_rsq_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18924 /* v_rsq_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18924 /* v_rsq_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18924 /* v_rsq_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18924 /* v_rsq_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18924 /* v_rsq_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18934 /* v_rsq_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 18934 /* v_rsq_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 18934 /* v_rsq_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 18934 /* v_rsq_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 18934 /* v_rsq_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18934 /* v_rsq_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18934 /* v_rsq_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18934 /* v_rsq_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18934 /* v_rsq_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18934 /* v_rsq_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 18934 /* v_rsq_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18934 /* v_rsq_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 18934 /* v_rsq_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 18934 /* v_rsq_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 18934 /* v_rsq_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 18934 /* v_rsq_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 18944 /* v_rsq_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 18944 /* v_rsq_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 18944 /* v_rsq_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 18944 /* v_rsq_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 18944 /* v_rsq_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 18944 /* v_rsq_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isSICI|Feature_isSICI, 18954 /* v_rsq_legacy_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isSICI|Feature_isSICI, 18954 /* v_rsq_legacy_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isSICI|Feature_isSICI, 18954 /* v_rsq_legacy_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19012 /* v_sin_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19012 /* v_sin_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19012 /* v_sin_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19012 /* v_sin_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19012 /* v_sin_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19012 /* v_sin_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19012 /* v_sin_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19012 /* v_sin_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19012 /* v_sin_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19012 /* v_sin_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19012 /* v_sin_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19012 /* v_sin_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19012 /* v_sin_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19022 /* v_sin_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 19022 /* v_sin_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 19022 /* v_sin_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 19022 /* v_sin_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 19022 /* v_sin_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19022 /* v_sin_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19022 /* v_sin_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19022 /* v_sin_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19022 /* v_sin_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19022 /* v_sin_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19022 /* v_sin_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19022 /* v_sin_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19022 /* v_sin_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19022 /* v_sin_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19022 /* v_sin_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19022 /* v_sin_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19032 /* v_sqrt_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19032 /* v_sqrt_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19032 /* v_sqrt_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19032 /* v_sqrt_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19032 /* v_sqrt_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19032 /* v_sqrt_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19032 /* v_sqrt_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19032 /* v_sqrt_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19032 /* v_sqrt_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19032 /* v_sqrt_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19032 /* v_sqrt_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19032 /* v_sqrt_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19032 /* v_sqrt_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19043 /* v_sqrt_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 19043 /* v_sqrt_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 19043 /* v_sqrt_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 19043 /* v_sqrt_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 19043 /* v_sqrt_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19043 /* v_sqrt_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19043 /* v_sqrt_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19043 /* v_sqrt_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19043 /* v_sqrt_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19043 /* v_sqrt_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19043 /* v_sqrt_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19043 /* v_sqrt_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19043 /* v_sqrt_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19043 /* v_sqrt_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19043 /* v_sqrt_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19043 /* v_sqrt_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19054 /* v_sqrt_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 19054 /* v_sqrt_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 19054 /* v_sqrt_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 19054 /* v_sqrt_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 19054 /* v_sqrt_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19054 /* v_sqrt_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19065 /* v_sub_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 19065 /* v_sub_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19065 /* v_sub_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19065 /* v_sub_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 19065 /* v_sub_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19065 /* v_sub_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19065 /* v_sub_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19065 /* v_sub_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 19065 /* v_sub_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 19065 /* v_sub_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19065 /* v_sub_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19065 /* v_sub_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 19065 /* v_sub_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 19065 /* v_sub_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19075 /* v_sub_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 19075 /* v_sub_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 19075 /* v_sub_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19075 /* v_sub_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 19075 /* v_sub_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 19075 /* v_sub_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19075 /* v_sub_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 19075 /* v_sub_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19075 /* v_sub_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19075 /* v_sub_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19075 /* v_sub_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 19075 /* v_sub_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 19075 /* v_sub_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19075 /* v_sub_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 19075 /* v_sub_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 19075 /* v_sub_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 19075 /* v_sub_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19085 /* v_sub_i32 */, MCK_ImmDPPCtrl, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19085 /* v_sub_i32 */, MCK_ImmRowMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19085 /* v_sub_i32 */, MCK_ImmBankMask, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 19085 /* v_sub_i32 */, MCK_ImmBoundCtrl, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 19085 /* v_sub_i32 */, MCK_VRegWithIntInputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 19085 /* v_sub_i32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 19085 /* v_sub_i32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 19085 /* v_sub_i32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 19085 /* v_sub_i32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 19085 /* v_sub_i32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 19095 /* v_sub_u16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19095 /* v_sub_u16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19095 /* v_sub_u16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19095 /* v_sub_u16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 19095 /* v_sub_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 19095 /* v_sub_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19095 /* v_sub_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19095 /* v_sub_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 19095 /* v_sub_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 19095 /* v_sub_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19105 /* v_subb_u32 */, MCK_ImmDPPCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19105 /* v_subb_u32 */, MCK_ImmRowMask, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 19105 /* v_subb_u32 */, MCK_ImmBankMask, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 19105 /* v_subb_u32 */, MCK_ImmBoundCtrl, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 19105 /* v_subb_u32 */, MCK_RegOrImmWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 19105 /* v_subb_u32 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 19105 /* v_subb_u32 */, MCK_ImmSDWADstSel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 19105 /* v_subb_u32 */, MCK_ImmSDWASrc0Sel, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 19105 /* v_subb_u32 */, MCK_ImmSDWASrc1Sel, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 19105 /* v_subb_u32 */, MCK_ImmSDWADstUnused, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 19116 /* v_subbrev_u32 */, MCK_ImmDPPCtrl, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19116 /* v_subbrev_u32 */, MCK_ImmRowMask, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 19116 /* v_subbrev_u32 */, MCK_ImmBankMask, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 19116 /* v_subbrev_u32 */, MCK_ImmBoundCtrl, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 19116 /* v_subbrev_u32 */, MCK_RegOrImmWithInt32InputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 19116 /* v_subbrev_u32 */, MCK_ImmClampSI, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 19116 /* v_subbrev_u32 */, MCK_ImmSDWADstSel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 19116 /* v_subbrev_u32 */, MCK_ImmSDWASrc0Sel, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 19116 /* v_subbrev_u32 */, MCK_ImmSDWASrc1Sel, 512 /* 9 */ },
  { Feature_isGCN|Feature_isVI, 19116 /* v_subbrev_u32 */, MCK_ImmSDWADstUnused, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 19130 /* v_subrev_f16 */, MCK_RegOrImmWithFP16InputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 19130 /* v_subrev_f16 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19130 /* v_subrev_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19130 /* v_subrev_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 19130 /* v_subrev_f16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19130 /* v_subrev_f16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19130 /* v_subrev_f16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19130 /* v_subrev_f16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 19130 /* v_subrev_f16 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 19130 /* v_subrev_f16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19130 /* v_subrev_f16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19130 /* v_subrev_f16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 19130 /* v_subrev_f16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 19130 /* v_subrev_f16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19143 /* v_subrev_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isSICI, 19143 /* v_subrev_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 19143 /* v_subrev_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19143 /* v_subrev_f32 */, MCK_RegOrImmWithFP32InputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 19143 /* v_subrev_f32 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 19143 /* v_subrev_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19143 /* v_subrev_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 19143 /* v_subrev_f32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19143 /* v_subrev_f32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19143 /* v_subrev_f32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19143 /* v_subrev_f32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 19143 /* v_subrev_f32 */, MCK_VRegWithFPInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 19143 /* v_subrev_f32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19143 /* v_subrev_f32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 19143 /* v_subrev_f32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 19143 /* v_subrev_f32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 19143 /* v_subrev_f32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19156 /* v_subrev_i32 */, MCK_ImmDPPCtrl, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19156 /* v_subrev_i32 */, MCK_ImmRowMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19156 /* v_subrev_i32 */, MCK_ImmBankMask, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 19156 /* v_subrev_i32 */, MCK_ImmBoundCtrl, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 19156 /* v_subrev_i32 */, MCK_VRegWithIntInputMods, 12 /* 2, 3 */ },
  { Feature_isGCN|Feature_isVI, 19156 /* v_subrev_i32 */, MCK_ImmClampSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 19156 /* v_subrev_i32 */, MCK_ImmSDWADstSel, 32 /* 5 */ },
  { Feature_isGCN|Feature_isVI, 19156 /* v_subrev_i32 */, MCK_ImmSDWASrc0Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 19156 /* v_subrev_i32 */, MCK_ImmSDWASrc1Sel, 256 /* 8 */ },
  { Feature_isGCN|Feature_isVI, 19156 /* v_subrev_i32 */, MCK_ImmSDWADstUnused, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 19169 /* v_subrev_u16 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19169 /* v_subrev_u16 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19169 /* v_subrev_u16 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19169 /* v_subrev_u16 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 19169 /* v_subrev_u16 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isVI|Feature_isVI, 19169 /* v_subrev_u16 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19169 /* v_subrev_u16 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19169 /* v_subrev_u16 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isVI|Feature_isVI, 19169 /* v_subrev_u16 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isVI|Feature_isVI, 19169 /* v_subrev_u16 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19182 /* v_trig_preop_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 19182 /* v_trig_preop_f64 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isSICI, 19182 /* v_trig_preop_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isSICI, 19182 /* v_trig_preop_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19182 /* v_trig_preop_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 19182 /* v_trig_preop_f64 */, MCK_RegOrImmWithInt32InputMods, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 19182 /* v_trig_preop_f64 */, MCK_ImmOModSI, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 19182 /* v_trig_preop_f64 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19199 /* v_trunc_f16 */, MCK_RegOrImmWithFP16InputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19199 /* v_trunc_f16 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19199 /* v_trunc_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19199 /* v_trunc_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19199 /* v_trunc_f16 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19199 /* v_trunc_f16 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19199 /* v_trunc_f16 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19199 /* v_trunc_f16 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19199 /* v_trunc_f16 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19199 /* v_trunc_f16 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19199 /* v_trunc_f16 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19199 /* v_trunc_f16 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19199 /* v_trunc_f16 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isGCN|Feature_isSICI, 19211 /* v_trunc_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isSICI, 19211 /* v_trunc_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isSICI, 19211 /* v_trunc_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isGCN|Feature_isVI, 19211 /* v_trunc_f32 */, MCK_RegOrImmWithFP32InputMods, 2 /* 1 */ },
  { Feature_isGCN|Feature_isVI, 19211 /* v_trunc_f32 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19211 /* v_trunc_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19211 /* v_trunc_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19211 /* v_trunc_f32 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19211 /* v_trunc_f32 */, MCK_ImmSDWADstSel, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19211 /* v_trunc_f32 */, MCK_ImmSDWASrc0Sel, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19211 /* v_trunc_f32 */, MCK_ImmSDWADstUnused, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19211 /* v_trunc_f32 */, MCK_VRegWithFPInputMods, 2 /* 1 */ },
  { Feature_isVI|Feature_isVI, 19211 /* v_trunc_f32 */, MCK_ImmDPPCtrl, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19211 /* v_trunc_f32 */, MCK_ImmRowMask, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19211 /* v_trunc_f32 */, MCK_ImmBankMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19211 /* v_trunc_f32 */, MCK_ImmBoundCtrl, 32 /* 5 */ },
  { Feature_isCIVI|Feature_isCIOnly, 19223 /* v_trunc_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isCIOnly, 19223 /* v_trunc_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isCIOnly, 19223 /* v_trunc_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isCIVI|Feature_isVI, 19223 /* v_trunc_f64 */, MCK_RegOrImmWithFP64InputMods, 2 /* 1 */ },
  { Feature_isCIVI|Feature_isVI, 19223 /* v_trunc_f64 */, MCK_ImmOModSI, 8 /* 3 */ },
  { Feature_isCIVI|Feature_isVI, 19223 /* v_trunc_f64 */, MCK_ImmClampSI, 4 /* 2 */ },
  { Feature_isVI|Feature_isVI, 19251 /* v_xor_b32 */, MCK_ImmDPPCtrl, 8 /* 3 */ },
  { Feature_isVI|Feature_isVI, 19251 /* v_xor_b32 */, MCK_ImmRowMask, 16 /* 4 */ },
  { Feature_isVI|Feature_isVI, 19251 /* v_xor_b32 */, MCK_ImmBankMask, 32 /* 5 */ },
  { Feature_isVI|Feature_isVI, 19251 /* v_xor_b32 */, MCK_ImmBoundCtrl, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 19251 /* v_xor_b32 */, MCK_VRegWithIntInputMods, 6 /* 1, 2 */ },
  { Feature_isGCN|Feature_isVI, 19251 /* v_xor_b32 */, MCK_ImmClampSI, 8 /* 3 */ },
  { Feature_isGCN|Feature_isVI, 19251 /* v_xor_b32 */, MCK_ImmSDWADstSel, 16 /* 4 */ },
  { Feature_isGCN|Feature_isVI, 19251 /* v_xor_b32 */, MCK_ImmSDWASrc0Sel, 64 /* 6 */ },
  { Feature_isGCN|Feature_isVI, 19251 /* v_xor_b32 */, MCK_ImmSDWASrc1Sel, 128 /* 7 */ },
  { Feature_isGCN|Feature_isVI, 19251 /* v_xor_b32 */, MCK_ImmSDWADstUnused, 32 /* 5 */ },
};

OperandMatchResultTy AMDGPUAsmParser::
tryCustomParseOperand(OperandVector &Operands,
                      unsigned MCK) {

  switch(MCK) {
  case MCK_Attr:
    return parseInterpAttr(Operands);
  case MCK_ExpTgt:
    return parseExpTgt(Operands);
  case MCK_RegOrImmWithFP16InputMods:
    return parseRegOrImmWithFPInputMods(Operands);
  case MCK_RegOrImmWithFP32InputMods:
    return parseRegOrImmWithFPInputMods(Operands);
  case MCK_RegOrImmWithFP64InputMods:
    return parseRegOrImmWithFPInputMods(Operands);
  case MCK_VRegWithFPInputMods:
    return parseRegWithFPInputMods(Operands);
  case MCK_RegOrImmWithInt32InputMods:
    return parseRegOrImmWithIntInputMods(Operands);
  case MCK_RegOrImmWithInt64InputMods:
    return parseRegOrImmWithIntInputMods(Operands);
  case MCK_VRegWithIntInputMods:
    return parseRegWithIntInputMods(Operands);
  case MCK_InterpSlot:
    return parseInterpSlot(Operands);
  case MCK_KImmFP16:
    return parseImm(Operands);
  case MCK_KImmFP32:
    return parseImm(Operands);
  case MCK_SWaitCnt:
    return parseSWaitCntOps(Operands);
  case MCK_SendMsg:
    return parseSendMsgOp(Operands);
  case MCK_SoppBrTarget:
    return parseSOppBrTarget(Operands);
  case MCK_VReg32OrOff:
    return parseVReg32OrOff(Operands);
  case MCK_ImmSMRDOffset8:
    return parseOptionalOperand(Operands);
  case MCK_ImmSMRDOffset20:
    return parseOptionalOperand(Operands);
  case MCK_ImmSMRDLiteralOffset:
    return parseOptionalOperand(Operands);
  case MCK_ImmOffen:
    return parseOptionalOperand(Operands);
  case MCK_ImmIdxen:
    return parseOptionalOperand(Operands);
  case MCK_ImmAddr64:
    return parseOptionalOperand(Operands);
  case MCK_ImmOffset:
    return parseOptionalOperand(Operands);
  case MCK_ImmOffset0:
    return parseOptionalOperand(Operands);
  case MCK_ImmOffset1:
    return parseOptionalOperand(Operands);
  case MCK_ImmGDS:
    return parseOptionalOperand(Operands);
  case MCK_ImmOModSI:
    return parseOptionalOperand(Operands);
  case MCK_ImmClampSI:
    return parseOptionalOperand(Operands);
  case MCK_ImmGLC:
    return parseOptionalOperand(Operands);
  case MCK_ImmSLC:
    return parseOptionalOperand(Operands);
  case MCK_ImmTFE:
    return parseOptionalOperand(Operands);
  case MCK_ImmUNorm:
    return parseOptionalOperand(Operands);
  case MCK_ImmDA:
    return parseOptionalOperand(Operands);
  case MCK_ImmR128:
    return parseOptionalOperand(Operands);
  case MCK_ImmLWE:
    return parseOptionalOperand(Operands);
  case MCK_ImmExpCompr:
    return parseOptionalOperand(Operands);
  case MCK_ImmExpVM:
    return parseOptionalOperand(Operands);
  case MCK_ImmDMask:
    return parseOptionalOperand(Operands);
  case MCK_ImmDPPCtrl:
    return parseDPPCtrl(Operands);
  case MCK_ImmRowMask:
    return parseOptionalOperand(Operands);
  case MCK_ImmBankMask:
    return parseOptionalOperand(Operands);
  case MCK_ImmBoundCtrl:
    return parseOptionalOperand(Operands);
  case MCK_ImmSDWADstSel:
    return parseOptionalOperand(Operands);
  case MCK_ImmSDWASrc0Sel:
    return parseOptionalOperand(Operands);
  case MCK_ImmSDWASrc1Sel:
    return parseOptionalOperand(Operands);
  case MCK_ImmSDWADstUnused:
    return parseOptionalOperand(Operands);
  case MCK_ImmHwreg:
    return parseHwreg(Operands);
  case MCK_ImmExpTgt:
    return parseExpTgt(Operands);
  default:
    return MatchOperand_NoMatch;
  }
  return MatchOperand_NoMatch;
}

OperandMatchResultTy AMDGPUAsmParser::
MatchOperandParserImpl(OperandVector &Operands,
                       StringRef Mnemonic) {
  // Get the current feature set.
  uint64_t AvailableFeatures = getAvailableFeatures();

  // Get the next operand index.
  unsigned NextOpNum = Operands.size() - 1;
  // Search the table.
  auto MnemonicRange =
    std::equal_range(std::begin(OperandMatchTable), std::end(OperandMatchTable),
                     Mnemonic, LessOpcodeOperand());

  if (MnemonicRange.first == MnemonicRange.second)
    return MatchOperand_NoMatch;

  for (const OperandMatchEntry *it = MnemonicRange.first,
       *ie = MnemonicRange.second; it != ie; ++it) {
    // equal_range guarantees that instruction mnemonic matches.
    assert(Mnemonic == it->getMnemonic());

    // check if the available features match
    if ((AvailableFeatures & it->RequiredFeatures) != it->RequiredFeatures) {
      continue;
    }

    // check if the operand in question has a custom parser.
    if (!(it->OperandMask & (1 << NextOpNum)))
      continue;

    // call custom parse method to handle the operand
    OperandMatchResultTy Result = tryCustomParseOperand(Operands, it->Class);
    if (Result != MatchOperand_NoMatch)
      return Result;
  }

  // Okay, we had no match.
  return MatchOperand_NoMatch;
}

#endif // GET_MATCHER_IMPLEMENTATION

