/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace SP {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    CFI_INSTRUCTION	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    STACKMAP	= 17,
    PATCHPOINT	= 18,
    LOAD_STACK_GUARD	= 19,
    STATEPOINT	= 20,
    LOCAL_ESCAPE	= 21,
    FAULTING_LOAD_OP	= 22,
    PATCHABLE_OP	= 23,
    PATCHABLE_FUNCTION_ENTER	= 24,
    PATCHABLE_RET	= 25,
    PATCHABLE_FUNCTION_EXIT	= 26,
    PATCHABLE_TAIL_CALL	= 27,
    G_ADD	= 28,
    G_SUB	= 29,
    G_MUL	= 30,
    G_SDIV	= 31,
    G_UDIV	= 32,
    G_SREM	= 33,
    G_UREM	= 34,
    G_AND	= 35,
    G_OR	= 36,
    G_XOR	= 37,
    G_FRAME_INDEX	= 38,
    G_GLOBAL_VALUE	= 39,
    G_EXTRACT	= 40,
    G_INSERT	= 41,
    G_SEQUENCE	= 42,
    G_PTRTOINT	= 43,
    G_INTTOPTR	= 44,
    G_BITCAST	= 45,
    G_LOAD	= 46,
    G_STORE	= 47,
    G_BRCOND	= 48,
    G_INTRINSIC	= 49,
    G_INTRINSIC_W_SIDE_EFFECTS	= 50,
    G_ANYEXT	= 51,
    G_TRUNC	= 52,
    G_CONSTANT	= 53,
    G_FCONSTANT	= 54,
    G_SEXT	= 55,
    G_ZEXT	= 56,
    G_SHL	= 57,
    G_LSHR	= 58,
    G_ASHR	= 59,
    G_ICMP	= 60,
    G_FCMP	= 61,
    G_SELECT	= 62,
    G_UADDE	= 63,
    G_USUBE	= 64,
    G_SADDO	= 65,
    G_SSUBO	= 66,
    G_UMULO	= 67,
    G_SMULO	= 68,
    G_FADD	= 69,
    G_FSUB	= 70,
    G_FMUL	= 71,
    G_FDIV	= 72,
    G_FREM	= 73,
    G_FPEXT	= 74,
    G_FPTRUNC	= 75,
    G_FPTOSI	= 76,
    G_FPTOUI	= 77,
    G_SITOFP	= 78,
    G_UITOFP	= 79,
    G_GEP	= 80,
    G_BR	= 81,
    ADDCCri	= 82,
    ADDCCrr	= 83,
    ADDCri	= 84,
    ADDCrr	= 85,
    ADDEri	= 86,
    ADDErr	= 87,
    ADDXC	= 88,
    ADDXCCC	= 89,
    ADDXri	= 90,
    ADDXrr	= 91,
    ADDri	= 92,
    ADDrr	= 93,
    ADJCALLSTACKDOWN	= 94,
    ADJCALLSTACKUP	= 95,
    ALIGNADDR	= 96,
    ALIGNADDRL	= 97,
    ANDCCri	= 98,
    ANDCCrr	= 99,
    ANDNCCri	= 100,
    ANDNCCrr	= 101,
    ANDNri	= 102,
    ANDNrr	= 103,
    ANDXNrr	= 104,
    ANDXri	= 105,
    ANDXrr	= 106,
    ANDri	= 107,
    ANDrr	= 108,
    ARRAY16	= 109,
    ARRAY32	= 110,
    ARRAY8	= 111,
    BA	= 112,
    BCOND	= 113,
    BCONDA	= 114,
    BINDri	= 115,
    BINDrr	= 116,
    BMASK	= 117,
    BPFCC	= 118,
    BPFCCA	= 119,
    BPFCCANT	= 120,
    BPFCCNT	= 121,
    BPGEZapn	= 122,
    BPGEZapt	= 123,
    BPGEZnapn	= 124,
    BPGEZnapt	= 125,
    BPGZapn	= 126,
    BPGZapt	= 127,
    BPGZnapn	= 128,
    BPGZnapt	= 129,
    BPICC	= 130,
    BPICCA	= 131,
    BPICCANT	= 132,
    BPICCNT	= 133,
    BPLEZapn	= 134,
    BPLEZapt	= 135,
    BPLEZnapn	= 136,
    BPLEZnapt	= 137,
    BPLZapn	= 138,
    BPLZapt	= 139,
    BPLZnapn	= 140,
    BPLZnapt	= 141,
    BPNZapn	= 142,
    BPNZapt	= 143,
    BPNZnapn	= 144,
    BPNZnapt	= 145,
    BPXCC	= 146,
    BPXCCA	= 147,
    BPXCCANT	= 148,
    BPXCCNT	= 149,
    BPZapn	= 150,
    BPZapt	= 151,
    BPZnapn	= 152,
    BPZnapt	= 153,
    BSHUFFLE	= 154,
    CALL	= 155,
    CALLri	= 156,
    CALLrr	= 157,
    CASAasi10	= 158,
    CASArr	= 159,
    CASXrr	= 160,
    CASrr	= 161,
    CBCOND	= 162,
    CBCONDA	= 163,
    CMASK16	= 164,
    CMASK32	= 165,
    CMASK8	= 166,
    CMPri	= 167,
    CMPrr	= 168,
    EDGE16	= 169,
    EDGE16L	= 170,
    EDGE16LN	= 171,
    EDGE16N	= 172,
    EDGE32	= 173,
    EDGE32L	= 174,
    EDGE32LN	= 175,
    EDGE32N	= 176,
    EDGE8	= 177,
    EDGE8L	= 178,
    EDGE8LN	= 179,
    EDGE8N	= 180,
    EH_SJLJ_LONGJMP32ri	= 181,
    EH_SJLJ_LONGJMP32rr	= 182,
    EH_SJLJ_SETJMP32ri	= 183,
    EH_SJLJ_SETJMP32rr	= 184,
    FABSD	= 185,
    FABSQ	= 186,
    FABSS	= 187,
    FADDD	= 188,
    FADDQ	= 189,
    FADDS	= 190,
    FALIGNADATA	= 191,
    FAND	= 192,
    FANDNOT1	= 193,
    FANDNOT1S	= 194,
    FANDNOT2	= 195,
    FANDNOT2S	= 196,
    FANDS	= 197,
    FBCOND	= 198,
    FBCONDA	= 199,
    FCHKSM16	= 200,
    FCMPD	= 201,
    FCMPEQ16	= 202,
    FCMPEQ32	= 203,
    FCMPGT16	= 204,
    FCMPGT32	= 205,
    FCMPLE16	= 206,
    FCMPLE32	= 207,
    FCMPNE16	= 208,
    FCMPNE32	= 209,
    FCMPQ	= 210,
    FCMPS	= 211,
    FDIVD	= 212,
    FDIVQ	= 213,
    FDIVS	= 214,
    FDMULQ	= 215,
    FDTOI	= 216,
    FDTOQ	= 217,
    FDTOS	= 218,
    FDTOX	= 219,
    FEXPAND	= 220,
    FHADDD	= 221,
    FHADDS	= 222,
    FHSUBD	= 223,
    FHSUBS	= 224,
    FITOD	= 225,
    FITOQ	= 226,
    FITOS	= 227,
    FLCMPD	= 228,
    FLCMPS	= 229,
    FLUSH	= 230,
    FLUSHW	= 231,
    FLUSHri	= 232,
    FLUSHrr	= 233,
    FMEAN16	= 234,
    FMOVD	= 235,
    FMOVD_FCC	= 236,
    FMOVD_ICC	= 237,
    FMOVD_XCC	= 238,
    FMOVQ	= 239,
    FMOVQ_FCC	= 240,
    FMOVQ_ICC	= 241,
    FMOVQ_XCC	= 242,
    FMOVRGEZD	= 243,
    FMOVRGEZQ	= 244,
    FMOVRGEZS	= 245,
    FMOVRGZD	= 246,
    FMOVRGZQ	= 247,
    FMOVRGZS	= 248,
    FMOVRLEZD	= 249,
    FMOVRLEZQ	= 250,
    FMOVRLEZS	= 251,
    FMOVRLZD	= 252,
    FMOVRLZQ	= 253,
    FMOVRLZS	= 254,
    FMOVRNZD	= 255,
    FMOVRNZQ	= 256,
    FMOVRNZS	= 257,
    FMOVRZD	= 258,
    FMOVRZQ	= 259,
    FMOVRZS	= 260,
    FMOVS	= 261,
    FMOVS_FCC	= 262,
    FMOVS_ICC	= 263,
    FMOVS_XCC	= 264,
    FMUL8SUX16	= 265,
    FMUL8ULX16	= 266,
    FMUL8X16	= 267,
    FMUL8X16AL	= 268,
    FMUL8X16AU	= 269,
    FMULD	= 270,
    FMULD8SUX16	= 271,
    FMULD8ULX16	= 272,
    FMULQ	= 273,
    FMULS	= 274,
    FNADDD	= 275,
    FNADDS	= 276,
    FNAND	= 277,
    FNANDS	= 278,
    FNEGD	= 279,
    FNEGQ	= 280,
    FNEGS	= 281,
    FNHADDD	= 282,
    FNHADDS	= 283,
    FNMULD	= 284,
    FNMULS	= 285,
    FNOR	= 286,
    FNORS	= 287,
    FNOT1	= 288,
    FNOT1S	= 289,
    FNOT2	= 290,
    FNOT2S	= 291,
    FNSMULD	= 292,
    FONE	= 293,
    FONES	= 294,
    FOR	= 295,
    FORNOT1	= 296,
    FORNOT1S	= 297,
    FORNOT2	= 298,
    FORNOT2S	= 299,
    FORS	= 300,
    FPACK16	= 301,
    FPACK32	= 302,
    FPACKFIX	= 303,
    FPADD16	= 304,
    FPADD16S	= 305,
    FPADD32	= 306,
    FPADD32S	= 307,
    FPADD64	= 308,
    FPMERGE	= 309,
    FPSUB16	= 310,
    FPSUB16S	= 311,
    FPSUB32	= 312,
    FPSUB32S	= 313,
    FQTOD	= 314,
    FQTOI	= 315,
    FQTOS	= 316,
    FQTOX	= 317,
    FSLAS16	= 318,
    FSLAS32	= 319,
    FSLL16	= 320,
    FSLL32	= 321,
    FSMULD	= 322,
    FSQRTD	= 323,
    FSQRTQ	= 324,
    FSQRTS	= 325,
    FSRA16	= 326,
    FSRA32	= 327,
    FSRC1	= 328,
    FSRC1S	= 329,
    FSRC2	= 330,
    FSRC2S	= 331,
    FSRL16	= 332,
    FSRL32	= 333,
    FSTOD	= 334,
    FSTOI	= 335,
    FSTOQ	= 336,
    FSTOX	= 337,
    FSUBD	= 338,
    FSUBQ	= 339,
    FSUBS	= 340,
    FXNOR	= 341,
    FXNORS	= 342,
    FXOR	= 343,
    FXORS	= 344,
    FXTOD	= 345,
    FXTOQ	= 346,
    FXTOS	= 347,
    FZERO	= 348,
    FZEROS	= 349,
    GETPCX	= 350,
    JMPLri	= 351,
    JMPLrr	= 352,
    LDArr	= 353,
    LDCSRri	= 354,
    LDCSRrr	= 355,
    LDCri	= 356,
    LDCrr	= 357,
    LDDArr	= 358,
    LDDCri	= 359,
    LDDCrr	= 360,
    LDDFArr	= 361,
    LDDFri	= 362,
    LDDFrr	= 363,
    LDDri	= 364,
    LDDrr	= 365,
    LDFArr	= 366,
    LDFSRri	= 367,
    LDFSRrr	= 368,
    LDFri	= 369,
    LDFrr	= 370,
    LDQFArr	= 371,
    LDQFri	= 372,
    LDQFrr	= 373,
    LDSBArr	= 374,
    LDSBri	= 375,
    LDSBrr	= 376,
    LDSHArr	= 377,
    LDSHri	= 378,
    LDSHrr	= 379,
    LDSTUBArr	= 380,
    LDSTUBri	= 381,
    LDSTUBrr	= 382,
    LDSWri	= 383,
    LDSWrr	= 384,
    LDUBArr	= 385,
    LDUBri	= 386,
    LDUBrr	= 387,
    LDUHArr	= 388,
    LDUHri	= 389,
    LDUHrr	= 390,
    LDXFSRri	= 391,
    LDXFSRrr	= 392,
    LDXri	= 393,
    LDXrr	= 394,
    LDri	= 395,
    LDrr	= 396,
    LEAX_ADDri	= 397,
    LEA_ADDri	= 398,
    LZCNT	= 399,
    MEMBARi	= 400,
    MOVDTOX	= 401,
    MOVFCCri	= 402,
    MOVFCCrr	= 403,
    MOVICCri	= 404,
    MOVICCrr	= 405,
    MOVRGEZri	= 406,
    MOVRGEZrr	= 407,
    MOVRGZri	= 408,
    MOVRGZrr	= 409,
    MOVRLEZri	= 410,
    MOVRLEZrr	= 411,
    MOVRLZri	= 412,
    MOVRLZrr	= 413,
    MOVRNZri	= 414,
    MOVRNZrr	= 415,
    MOVRRZri	= 416,
    MOVRRZrr	= 417,
    MOVSTOSW	= 418,
    MOVSTOUW	= 419,
    MOVWTOS	= 420,
    MOVXCCri	= 421,
    MOVXCCrr	= 422,
    MOVXTOD	= 423,
    MULSCCri	= 424,
    MULSCCrr	= 425,
    MULXri	= 426,
    MULXrr	= 427,
    NOP	= 428,
    ORCCri	= 429,
    ORCCrr	= 430,
    ORNCCri	= 431,
    ORNCCrr	= 432,
    ORNri	= 433,
    ORNrr	= 434,
    ORXNrr	= 435,
    ORXri	= 436,
    ORXrr	= 437,
    ORri	= 438,
    ORrr	= 439,
    PDIST	= 440,
    PDISTN	= 441,
    POPCrr	= 442,
    RDASR	= 443,
    RDPR	= 444,
    RDPSR	= 445,
    RDTBR	= 446,
    RDWIM	= 447,
    RESTOREri	= 448,
    RESTORErr	= 449,
    RET	= 450,
    RETL	= 451,
    RETTri	= 452,
    RETTrr	= 453,
    SAVEri	= 454,
    SAVErr	= 455,
    SDIVCCri	= 456,
    SDIVCCrr	= 457,
    SDIVXri	= 458,
    SDIVXrr	= 459,
    SDIVri	= 460,
    SDIVrr	= 461,
    SELECT_CC_DFP_FCC	= 462,
    SELECT_CC_DFP_ICC	= 463,
    SELECT_CC_FP_FCC	= 464,
    SELECT_CC_FP_ICC	= 465,
    SELECT_CC_Int_FCC	= 466,
    SELECT_CC_Int_ICC	= 467,
    SELECT_CC_QFP_FCC	= 468,
    SELECT_CC_QFP_ICC	= 469,
    SET	= 470,
    SETHIXi	= 471,
    SETHIi	= 472,
    SHUTDOWN	= 473,
    SIAM	= 474,
    SLLXri	= 475,
    SLLXrr	= 476,
    SLLri	= 477,
    SLLrr	= 478,
    SMACri	= 479,
    SMACrr	= 480,
    SMULCCri	= 481,
    SMULCCrr	= 482,
    SMULri	= 483,
    SMULrr	= 484,
    SRAXri	= 485,
    SRAXrr	= 486,
    SRAri	= 487,
    SRArr	= 488,
    SRLXri	= 489,
    SRLXrr	= 490,
    SRLri	= 491,
    SRLrr	= 492,
    STArr	= 493,
    STBAR	= 494,
    STBArr	= 495,
    STBri	= 496,
    STBrr	= 497,
    STCSRri	= 498,
    STCSRrr	= 499,
    STCri	= 500,
    STCrr	= 501,
    STDArr	= 502,
    STDCQri	= 503,
    STDCQrr	= 504,
    STDCri	= 505,
    STDCrr	= 506,
    STDFArr	= 507,
    STDFQri	= 508,
    STDFQrr	= 509,
    STDFri	= 510,
    STDFrr	= 511,
    STDri	= 512,
    STDrr	= 513,
    STFArr	= 514,
    STFSRri	= 515,
    STFSRrr	= 516,
    STFri	= 517,
    STFrr	= 518,
    STHArr	= 519,
    STHri	= 520,
    STHrr	= 521,
    STQFArr	= 522,
    STQFri	= 523,
    STQFrr	= 524,
    STXFSRri	= 525,
    STXFSRrr	= 526,
    STXri	= 527,
    STXrr	= 528,
    STri	= 529,
    STrr	= 530,
    SUBCCri	= 531,
    SUBCCrr	= 532,
    SUBCri	= 533,
    SUBCrr	= 534,
    SUBEri	= 535,
    SUBErr	= 536,
    SUBXri	= 537,
    SUBXrr	= 538,
    SUBri	= 539,
    SUBrr	= 540,
    SWAPArr	= 541,
    SWAPri	= 542,
    SWAPrr	= 543,
    TA3	= 544,
    TA5	= 545,
    TADDCCTVri	= 546,
    TADDCCTVrr	= 547,
    TADDCCri	= 548,
    TADDCCrr	= 549,
    TICCri	= 550,
    TICCrr	= 551,
    TLS_ADDXrr	= 552,
    TLS_ADDrr	= 553,
    TLS_CALL	= 554,
    TLS_LDXrr	= 555,
    TLS_LDrr	= 556,
    TRAPri	= 557,
    TRAPrr	= 558,
    TSUBCCTVri	= 559,
    TSUBCCTVrr	= 560,
    TSUBCCri	= 561,
    TSUBCCrr	= 562,
    TXCCri	= 563,
    TXCCrr	= 564,
    UDIVCCri	= 565,
    UDIVCCrr	= 566,
    UDIVXri	= 567,
    UDIVXrr	= 568,
    UDIVri	= 569,
    UDIVrr	= 570,
    UMACri	= 571,
    UMACrr	= 572,
    UMULCCri	= 573,
    UMULCCrr	= 574,
    UMULXHI	= 575,
    UMULri	= 576,
    UMULrr	= 577,
    UNIMP	= 578,
    V9FCMPD	= 579,
    V9FCMPED	= 580,
    V9FCMPEQ	= 581,
    V9FCMPES	= 582,
    V9FCMPQ	= 583,
    V9FCMPS	= 584,
    V9FMOVD_FCC	= 585,
    V9FMOVQ_FCC	= 586,
    V9FMOVS_FCC	= 587,
    V9MOVFCCri	= 588,
    V9MOVFCCrr	= 589,
    WRASRri	= 590,
    WRASRrr	= 591,
    WRPRri	= 592,
    WRPRrr	= 593,
    WRPSRri	= 594,
    WRPSRrr	= 595,
    WRTBRri	= 596,
    WRTBRrr	= 597,
    WRWIMri	= 598,
    WRWIMrr	= 599,
    XMULX	= 600,
    XMULXHI	= 601,
    XNORCCri	= 602,
    XNORCCrr	= 603,
    XNORXrr	= 604,
    XNORri	= 605,
    XNORrr	= 606,
    XORCCri	= 607,
    XORCCrr	= 608,
    XORXri	= 609,
    XORXrr	= 610,
    XORri	= 611,
    XORrr	= 612,
    INSTRUCTION_LIST_END = 613
  };

namespace Sched {
  enum {
    NoInstrModel	= 0,
    IIC_iu_instr	= 1,
    IIC_fpu_normal_instr	= 2,
    IIC_jmp_or_call	= 3,
    IIC_fpu_abs	= 4,
    IIC_fpu_fast_instr	= 5,
    IIC_fpu_divd	= 6,
    IIC_fpu_divs	= 7,
    IIC_fpu_muld	= 8,
    IIC_fpu_muls	= 9,
    IIC_fpu_negs	= 10,
    IIC_fpu_sqrtd	= 11,
    IIC_fpu_sqrts	= 12,
    IIC_fpu_stod	= 13,
    IIC_ldd	= 14,
    IIC_iu_or_fpu_instr	= 15,
    IIC_iu_div	= 16,
    IIC_smac_umac	= 17,
    IIC_iu_smul	= 18,
    IIC_st	= 19,
    IIC_std	= 20,
    IIC_iu_umul	= 21,
    SCHED_LIST_END = 22
  };
} // end Sched namespace
} // end SP namespace
} // end llvm namespace
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { SP::ICC, 0 };
static const MCPhysReg ImplicitList2[] = { SP::O6, 0 };
static const MCPhysReg ImplicitList3[] = { SP::WIM, 0 };
static const MCPhysReg ImplicitList4[] = { SP::FCC0, 0 };
static const MCPhysReg ImplicitList5[] = { SP::O7, 0 };
static const MCPhysReg ImplicitList6[] = { SP::CPSR, 0 };
static const MCPhysReg ImplicitList7[] = { SP::FSR, 0 };
static const MCPhysReg ImplicitList8[] = { SP::Y, SP::ICC, 0 };
static const MCPhysReg ImplicitList9[] = { SP::PSR, 0 };
static const MCPhysReg ImplicitList10[] = { SP::TBR, 0 };
static const MCPhysReg ImplicitList11[] = { SP::Y, 0 };
static const MCPhysReg ImplicitList12[] = { SP::Y, SP::ASR18, 0 };
static const MCPhysReg ImplicitList13[] = { SP::CPQ, 0 };
static const MCPhysReg ImplicitList14[] = { SP::FQ, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo31[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo33[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo55[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo56[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo117[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo118[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo119[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc SparcInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #2 = CFI_INSTRUCTION
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6, -1 ,nullptr },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #11 = DBG_VALUE
  { 12,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #16 = LIFETIME_END
  { 17,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8, -1 ,nullptr },  // Inst #17 = STACKMAP
  { 18,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9, -1 ,nullptr },  // Inst #18 = PATCHPOINT
  { 19,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #19 = LOAD_STACK_GUARD
  { 20,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #20 = STATEPOINT
  { 21,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #21 = LOCAL_ESCAPE
  { 22,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #22 = FAULTING_LOAD_OP
  { 23,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #23 = PATCHABLE_OP
  { 24,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #24 = PATCHABLE_FUNCTION_ENTER
  { 25,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #25 = PATCHABLE_RET
  { 26,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #26 = PATCHABLE_FUNCTION_EXIT
  { 27,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #27 = PATCHABLE_TAIL_CALL
  { 28,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #28 = G_ADD
  { 29,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #29 = G_SUB
  { 30,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #30 = G_MUL
  { 31,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #31 = G_SDIV
  { 32,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #32 = G_UDIV
  { 33,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #33 = G_SREM
  { 34,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #34 = G_UREM
  { 35,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #35 = G_AND
  { 36,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #36 = G_OR
  { 37,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #37 = G_XOR
  { 38,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #38 = G_FRAME_INDEX
  { 39,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #39 = G_GLOBAL_VALUE
  { 40,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #40 = G_EXTRACT
  { 41,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #41 = G_INSERT
  { 42,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #42 = G_SEQUENCE
  { 43,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #43 = G_PTRTOINT
  { 44,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #44 = G_INTTOPTR
  { 45,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #45 = G_BITCAST
  { 46,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #46 = G_LOAD
  { 47,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #47 = G_STORE
  { 48,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #48 = G_BRCOND
  { 49,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #49 = G_INTRINSIC
  { 50,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #50 = G_INTRINSIC_W_SIDE_EFFECTS
  { 51,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #51 = G_ANYEXT
  { 52,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #52 = G_TRUNC
  { 53,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #53 = G_CONSTANT
  { 54,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #54 = G_FCONSTANT
  { 55,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #55 = G_SEXT
  { 56,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #56 = G_ZEXT
  { 57,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #57 = G_SHL
  { 58,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #58 = G_LSHR
  { 59,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #59 = G_ASHR
  { 60,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #60 = G_ICMP
  { 61,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #61 = G_FCMP
  { 62,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #62 = G_SELECT
  { 63,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #63 = G_UADDE
  { 64,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #64 = G_USUBE
  { 65,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #65 = G_SADDO
  { 66,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #66 = G_SSUBO
  { 67,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #67 = G_UMULO
  { 68,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #68 = G_SMULO
  { 69,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #69 = G_FADD
  { 70,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #70 = G_FSUB
  { 71,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #71 = G_FMUL
  { 72,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #72 = G_FDIV
  { 73,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #73 = G_FREM
  { 74,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #74 = G_FPEXT
  { 75,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #75 = G_FPTRUNC
  { 76,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #76 = G_FPTOSI
  { 77,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #77 = G_FPTOUI
  { 78,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #78 = G_SITOFP
  { 79,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #79 = G_UITOFP
  { 80,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #80 = G_GEP
  { 81,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #81 = G_BR
  { 82,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #82 = ADDCCri
  { 83,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #83 = ADDCCrr
  { 84,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #84 = ADDCri
  { 85,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #85 = ADDCrr
  { 86,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #86 = ADDEri
  { 87,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #87 = ADDErr
  { 88,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #88 = ADDXC
  { 89,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #89 = ADDXCCC
  { 90,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #90 = ADDXri
  { 91,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #91 = ADDXrr
  { 92,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #92 = ADDri
  { 93,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #93 = ADDrr
  { 94,	1,	0,	4,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo3, -1 ,nullptr },  // Inst #94 = ADJCALLSTACKDOWN
  { 95,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo8, -1 ,nullptr },  // Inst #95 = ADJCALLSTACKUP
  { 96,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #96 = ALIGNADDR
  { 97,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #97 = ALIGNADDRL
  { 98,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #98 = ANDCCri
  { 99,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #99 = ANDCCrr
  { 100,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #100 = ANDNCCri
  { 101,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #101 = ANDNCCrr
  { 102,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #102 = ANDNri
  { 103,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #103 = ANDNrr
  { 104,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #104 = ANDXNrr
  { 105,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #105 = ANDXri
  { 106,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #106 = ANDXrr
  { 107,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #107 = ANDri
  { 108,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #108 = ANDrr
  { 109,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #109 = ARRAY16
  { 110,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #110 = ARRAY32
  { 111,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #111 = ARRAY8
  { 112,	1,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #112 = BA
  { 113,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #113 = BCOND
  { 114,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #114 = BCONDA
  { 115,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #115 = BINDri
  { 116,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #116 = BINDrr
  { 117,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #117 = BMASK
  { 118,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #118 = BPFCC
  { 119,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #119 = BPFCCA
  { 120,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #120 = BPFCCANT
  { 121,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #121 = BPFCCNT
  { 122,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #122 = BPGEZapn
  { 123,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #123 = BPGEZapt
  { 124,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #124 = BPGEZnapn
  { 125,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #125 = BPGEZnapt
  { 126,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #126 = BPGZapn
  { 127,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #127 = BPGZapt
  { 128,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #128 = BPGZnapn
  { 129,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #129 = BPGZnapt
  { 130,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #130 = BPICC
  { 131,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #131 = BPICCA
  { 132,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #132 = BPICCANT
  { 133,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #133 = BPICCNT
  { 134,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #134 = BPLEZapn
  { 135,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #135 = BPLEZapt
  { 136,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #136 = BPLEZnapn
  { 137,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #137 = BPLEZnapt
  { 138,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #138 = BPLZapn
  { 139,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #139 = BPLZapt
  { 140,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #140 = BPLZnapn
  { 141,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #141 = BPLZnapt
  { 142,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #142 = BPNZapn
  { 143,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #143 = BPNZapt
  { 144,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #144 = BPNZnapn
  { 145,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #145 = BPNZnapt
  { 146,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #146 = BPXCC
  { 147,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #147 = BPXCCA
  { 148,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #148 = BPXCCANT
  { 149,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #149 = BPXCCNT
  { 150,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #150 = BPZapn
  { 151,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #151 = BPZapt
  { 152,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #152 = BPZnapn
  { 153,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #153 = BPZnapt
  { 154,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #154 = BSHUFFLE
  { 155,	1,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #155 = CALL
  { 156,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #156 = CALLri
  { 157,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #157 = CALLrr
  { 158,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #158 = CASAasi10
  { 159,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #159 = CASArr
  { 160,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #160 = CASXrr
  { 161,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #161 = CASrr
  { 162,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #162 = CBCOND
  { 163,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #163 = CBCONDA
  { 164,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #164 = CMASK16
  { 165,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #165 = CMASK32
  { 166,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #166 = CMASK8
  { 167,	2,	0,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo34, -1 ,nullptr },  // Inst #167 = CMPri
  { 168,	2,	0,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #168 = CMPrr
  { 169,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #169 = EDGE16
  { 170,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #170 = EDGE16L
  { 171,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #171 = EDGE16LN
  { 172,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #172 = EDGE16N
  { 173,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #173 = EDGE32
  { 174,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #174 = EDGE32L
  { 175,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #175 = EDGE32LN
  { 176,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #176 = EDGE32N
  { 177,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #177 = EDGE8
  { 178,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #178 = EDGE8L
  { 179,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #179 = EDGE8LN
  { 180,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #180 = EDGE8N
  { 181,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #181 = EH_SJLJ_LONGJMP32ri
  { 182,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #182 = EH_SJLJ_LONGJMP32rr
  { 183,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo36, -1 ,nullptr },  // Inst #183 = EH_SJLJ_SETJMP32ri
  { 184,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #184 = EH_SJLJ_SETJMP32rr
  { 185,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #185 = FABSD
  { 186,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #186 = FABSQ
  { 187,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #187 = FABSS
  { 188,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #188 = FADDD
  { 189,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #189 = FADDQ
  { 190,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #190 = FADDS
  { 191,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #191 = FALIGNADATA
  { 192,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #192 = FAND
  { 193,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #193 = FANDNOT1
  { 194,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #194 = FANDNOT1S
  { 195,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #195 = FANDNOT2
  { 196,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #196 = FANDNOT2S
  { 197,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #197 = FANDS
  { 198,	2,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList4, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #198 = FBCOND
  { 199,	2,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList4, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #199 = FBCONDA
  { 200,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #200 = FCHKSM16
  { 201,	2,	0,	4,	5,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo38, -1 ,nullptr },  // Inst #201 = FCMPD
  { 202,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #202 = FCMPEQ16
  { 203,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #203 = FCMPEQ32
  { 204,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #204 = FCMPGT16
  { 205,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #205 = FCMPGT32
  { 206,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #206 = FCMPLE16
  { 207,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #207 = FCMPLE32
  { 208,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #208 = FCMPNE16
  { 209,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #209 = FCMPNE32
  { 210,	2,	0,	4,	0,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo39, -1 ,nullptr },  // Inst #210 = FCMPQ
  { 211,	2,	0,	4,	5,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo40, -1 ,nullptr },  // Inst #211 = FCMPS
  { 212,	3,	1,	4,	6,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #212 = FDIVD
  { 213,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #213 = FDIVQ
  { 214,	3,	1,	4,	7,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #214 = FDIVS
  { 215,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #215 = FDMULQ
  { 216,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #216 = FDTOI
  { 217,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #217 = FDTOQ
  { 218,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #218 = FDTOS
  { 219,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #219 = FDTOX
  { 220,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #220 = FEXPAND
  { 221,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #221 = FHADDD
  { 222,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #222 = FHADDS
  { 223,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #223 = FHSUBD
  { 224,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #224 = FHSUBS
  { 225,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #225 = FITOD
  { 226,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #226 = FITOQ
  { 227,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #227 = FITOS
  { 228,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #228 = FLCMPD
  { 229,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #229 = FLCMPS
  { 230,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #230 = FLUSH
  { 231,	0,	0,	4,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #231 = FLUSHW
  { 232,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #232 = FLUSHri
  { 233,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #233 = FLUSHrr
  { 234,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #234 = FMEAN16
  { 235,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #235 = FMOVD
  { 236,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #236 = FMOVD_FCC
  { 237,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #237 = FMOVD_ICC
  { 238,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #238 = FMOVD_XCC
  { 239,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #239 = FMOVQ
  { 240,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #240 = FMOVQ_FCC
  { 241,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #241 = FMOVQ_ICC
  { 242,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #242 = FMOVQ_XCC
  { 243,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #243 = FMOVRGEZD
  { 244,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #244 = FMOVRGEZQ
  { 245,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #245 = FMOVRGEZS
  { 246,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #246 = FMOVRGZD
  { 247,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #247 = FMOVRGZQ
  { 248,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #248 = FMOVRGZS
  { 249,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #249 = FMOVRLEZD
  { 250,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #250 = FMOVRLEZQ
  { 251,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #251 = FMOVRLEZS
  { 252,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #252 = FMOVRLZD
  { 253,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #253 = FMOVRLZQ
  { 254,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #254 = FMOVRLZS
  { 255,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #255 = FMOVRNZD
  { 256,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #256 = FMOVRNZQ
  { 257,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #257 = FMOVRNZS
  { 258,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #258 = FMOVRZD
  { 259,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #259 = FMOVRZQ
  { 260,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #260 = FMOVRZS
  { 261,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #261 = FMOVS
  { 262,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #262 = FMOVS_FCC
  { 263,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #263 = FMOVS_ICC
  { 264,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #264 = FMOVS_XCC
  { 265,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #265 = FMUL8SUX16
  { 266,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #266 = FMUL8ULX16
  { 267,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #267 = FMUL8X16
  { 268,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #268 = FMUL8X16AL
  { 269,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #269 = FMUL8X16AU
  { 270,	3,	1,	4,	8,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #270 = FMULD
  { 271,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #271 = FMULD8SUX16
  { 272,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #272 = FMULD8ULX16
  { 273,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #273 = FMULQ
  { 274,	3,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #274 = FMULS
  { 275,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #275 = FNADDD
  { 276,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #276 = FNADDS
  { 277,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #277 = FNAND
  { 278,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #278 = FNANDS
  { 279,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #279 = FNEGD
  { 280,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #280 = FNEGQ
  { 281,	2,	1,	4,	10,	0, 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #281 = FNEGS
  { 282,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #282 = FNHADDD
  { 283,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #283 = FNHADDS
  { 284,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #284 = FNMULD
  { 285,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #285 = FNMULS
  { 286,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #286 = FNOR
  { 287,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #287 = FNORS
  { 288,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #288 = FNOT1
  { 289,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #289 = FNOT1S
  { 290,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #290 = FNOT2
  { 291,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #291 = FNOT2S
  { 292,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #292 = FNSMULD
  { 293,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #293 = FONE
  { 294,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #294 = FONES
  { 295,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #295 = FOR
  { 296,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #296 = FORNOT1
  { 297,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #297 = FORNOT1S
  { 298,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #298 = FORNOT2
  { 299,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #299 = FORNOT2S
  { 300,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #300 = FORS
  { 301,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #301 = FPACK16
  { 302,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #302 = FPACK32
  { 303,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #303 = FPACKFIX
  { 304,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #304 = FPADD16
  { 305,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #305 = FPADD16S
  { 306,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #306 = FPADD32
  { 307,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #307 = FPADD32S
  { 308,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #308 = FPADD64
  { 309,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #309 = FPMERGE
  { 310,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #310 = FPSUB16
  { 311,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #311 = FPSUB16S
  { 312,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #312 = FPSUB32
  { 313,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #313 = FPSUB32S
  { 314,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #314 = FQTOD
  { 315,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #315 = FQTOI
  { 316,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #316 = FQTOS
  { 317,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #317 = FQTOX
  { 318,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #318 = FSLAS16
  { 319,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #319 = FSLAS32
  { 320,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #320 = FSLL16
  { 321,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #321 = FSLL32
  { 322,	3,	1,	4,	8,	0, 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #322 = FSMULD
  { 323,	2,	1,	4,	11,	0, 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #323 = FSQRTD
  { 324,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #324 = FSQRTQ
  { 325,	2,	1,	4,	12,	0, 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #325 = FSQRTS
  { 326,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #326 = FSRA16
  { 327,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #327 = FSRA32
  { 328,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #328 = FSRC1
  { 329,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #329 = FSRC1S
  { 330,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #330 = FSRC2
  { 331,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #331 = FSRC2S
  { 332,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #332 = FSRL16
  { 333,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #333 = FSRL32
  { 334,	2,	1,	4,	13,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #334 = FSTOD
  { 335,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #335 = FSTOI
  { 336,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #336 = FSTOQ
  { 337,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #337 = FSTOX
  { 338,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #338 = FSUBD
  { 339,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #339 = FSUBQ
  { 340,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #340 = FSUBS
  { 341,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #341 = FXNOR
  { 342,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #342 = FXNORS
  { 343,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #343 = FXOR
  { 344,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #344 = FXORS
  { 345,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #345 = FXTOD
  { 346,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #346 = FXTOQ
  { 347,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #347 = FXTOS
  { 348,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #348 = FZERO
  { 349,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #349 = FZEROS
  { 350,	1,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList5, OperandInfo2, -1 ,nullptr },  // Inst #350 = GETPCX
  { 351,	3,	1,	4,	3,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #351 = JMPLri
  { 352,	3,	1,	4,	3,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #352 = JMPLrr
  { 353,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #353 = LDArr
  { 354,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo25, -1 ,nullptr },  // Inst #354 = LDCSRri
  { 355,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo26, -1 ,nullptr },  // Inst #355 = LDCSRrr
  { 356,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #356 = LDCri
  { 357,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #357 = LDCrr
  { 358,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #358 = LDDArr
  { 359,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #359 = LDDCri
  { 360,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #360 = LDDCrr
  { 361,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #361 = LDDFArr
  { 362,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #362 = LDDFri
  { 363,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #363 = LDDFrr
  { 364,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #364 = LDDri
  { 365,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #365 = LDDrr
  { 366,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #366 = LDFArr
  { 367,	2,	0,	4,	15,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo25, -1 ,nullptr },  // Inst #367 = LDFSRri
  { 368,	2,	0,	4,	15,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo26, -1 ,nullptr },  // Inst #368 = LDFSRrr
  { 369,	3,	1,	4,	15,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #369 = LDFri
  { 370,	3,	1,	4,	15,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #370 = LDFrr
  { 371,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #371 = LDQFArr
  { 372,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #372 = LDQFri
  { 373,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #373 = LDQFrr
  { 374,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #374 = LDSBArr
  { 375,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #375 = LDSBri
  { 376,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #376 = LDSBrr
  { 377,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #377 = LDSHArr
  { 378,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #378 = LDSHri
  { 379,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #379 = LDSHrr
  { 380,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #380 = LDSTUBArr
  { 381,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #381 = LDSTUBri
  { 382,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #382 = LDSTUBrr
  { 383,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #383 = LDSWri
  { 384,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #384 = LDSWrr
  { 385,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #385 = LDUBArr
  { 386,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #386 = LDUBri
  { 387,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #387 = LDUBrr
  { 388,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #388 = LDUHArr
  { 389,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #389 = LDUHri
  { 390,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #390 = LDUHrr
  { 391,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo25, -1 ,nullptr },  // Inst #391 = LDXFSRri
  { 392,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo26, -1 ,nullptr },  // Inst #392 = LDXFSRrr
  { 393,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #393 = LDXri
  { 394,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #394 = LDXrr
  { 395,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #395 = LDri
  { 396,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #396 = LDrr
  { 397,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #397 = LEAX_ADDri
  { 398,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #398 = LEA_ADDri
  { 399,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #399 = LZCNT
  { 400,	1,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #400 = MEMBARi
  { 401,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #401 = MOVDTOX
  { 402,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #402 = MOVFCCri
  { 403,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #403 = MOVFCCrr
  { 404,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #404 = MOVICCri
  { 405,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #405 = MOVICCrr
  { 406,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #406 = MOVRGEZri
  { 407,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #407 = MOVRGEZrr
  { 408,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #408 = MOVRGZri
  { 409,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #409 = MOVRGZrr
  { 410,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #410 = MOVRLEZri
  { 411,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #411 = MOVRLEZrr
  { 412,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #412 = MOVRLZri
  { 413,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #413 = MOVRLZrr
  { 414,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #414 = MOVRNZri
  { 415,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #415 = MOVRNZrr
  { 416,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #416 = MOVRRZri
  { 417,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #417 = MOVRRZrr
  { 418,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #418 = MOVSTOSW
  { 419,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #419 = MOVSTOUW
  { 420,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #420 = MOVWTOS
  { 421,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #421 = MOVXCCri
  { 422,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #422 = MOVXCCrr
  { 423,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #423 = MOVXTOD
  { 424,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList8, ImplicitList8, OperandInfo21, -1 ,nullptr },  // Inst #424 = MULSCCri
  { 425,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList8, ImplicitList8, OperandInfo22, -1 ,nullptr },  // Inst #425 = MULSCCrr
  { 426,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #426 = MULXri
  { 427,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #427 = MULXrr
  { 428,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #428 = NOP
  { 429,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #429 = ORCCri
  { 430,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #430 = ORCCrr
  { 431,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #431 = ORNCCri
  { 432,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #432 = ORNCCrr
  { 433,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #433 = ORNri
  { 434,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #434 = ORNrr
  { 435,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #435 = ORXNrr
  { 436,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #436 = ORXri
  { 437,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #437 = ORXrr
  { 438,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #438 = ORri
  { 439,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #439 = ORrr
  { 440,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #440 = PDIST
  { 441,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #441 = PDISTN
  { 442,	2,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #442 = POPCrr
  { 443,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #443 = RDASR
  { 444,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #444 = RDPR
  { 445,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList9, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #445 = RDPSR
  { 446,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #446 = RDTBR
  { 447,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #447 = RDWIM
  { 448,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #448 = RESTOREri
  { 449,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #449 = RESTORErr
  { 450,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #450 = RET
  { 451,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #451 = RETL
  { 452,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #452 = RETTri
  { 453,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #453 = RETTrr
  { 454,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #454 = SAVEri
  { 455,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #455 = SAVErr
  { 456,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo21, -1 ,nullptr },  // Inst #456 = SDIVCCri
  { 457,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo22, -1 ,nullptr },  // Inst #457 = SDIVCCrr
  { 458,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #458 = SDIVXri
  { 459,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #459 = SDIVXrr
  { 460,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo21, -1 ,nullptr },  // Inst #460 = SDIVri
  { 461,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo22, -1 ,nullptr },  // Inst #461 = SDIVrr
  { 462,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #462 = SELECT_CC_DFP_FCC
  { 463,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #463 = SELECT_CC_DFP_ICC
  { 464,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #464 = SELECT_CC_FP_FCC
  { 465,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #465 = SELECT_CC_FP_ICC
  { 466,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #466 = SELECT_CC_Int_FCC
  { 467,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #467 = SELECT_CC_Int_ICC
  { 468,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #468 = SELECT_CC_QFP_FCC
  { 469,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #469 = SELECT_CC_QFP_ICC
  { 470,	2,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #470 = SET
  { 471,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #471 = SETHIXi
  { 472,	2,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #472 = SETHIi
  { 473,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #473 = SHUTDOWN
  { 474,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #474 = SIAM
  { 475,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #475 = SLLXri
  { 476,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #476 = SLLXrr
  { 477,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #477 = SLLri
  { 478,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #478 = SLLrr
  { 479,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo93, -1 ,nullptr },  // Inst #479 = SMACri
  { 480,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo94, -1 ,nullptr },  // Inst #480 = SMACrr
  { 481,	3,	1,	4,	18,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo21, -1 ,nullptr },  // Inst #481 = SMULCCri
  { 482,	3,	1,	4,	18,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo22, -1 ,nullptr },  // Inst #482 = SMULCCrr
  { 483,	3,	1,	4,	18,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo21, -1 ,nullptr },  // Inst #483 = SMULri
  { 484,	3,	1,	4,	18,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo22, -1 ,nullptr },  // Inst #484 = SMULrr
  { 485,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #485 = SRAXri
  { 486,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #486 = SRAXrr
  { 487,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #487 = SRAri
  { 488,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #488 = SRArr
  { 489,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #489 = SRLXri
  { 490,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #490 = SRLXrr
  { 491,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #491 = SRLri
  { 492,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #492 = SRLrr
  { 493,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #493 = STArr
  { 494,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #494 = STBAR
  { 495,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #495 = STBArr
  { 496,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #496 = STBri
  { 497,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #497 = STBrr
  { 498,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo25, -1 ,nullptr },  // Inst #498 = STCSRri
  { 499,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo26, -1 ,nullptr },  // Inst #499 = STCSRrr
  { 500,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #500 = STCri
  { 501,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #501 = STCrr
  { 502,	4,	0,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #502 = STDArr
  { 503,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList13, OperandInfo25, -1 ,nullptr },  // Inst #503 = STDCQri
  { 504,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList13, OperandInfo26, -1 ,nullptr },  // Inst #504 = STDCQrr
  { 505,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #505 = STDCri
  { 506,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #506 = STDCrr
  { 507,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #507 = STDFArr
  { 508,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList14, OperandInfo25, -1 ,nullptr },  // Inst #508 = STDFQri
  { 509,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList14, OperandInfo26, -1 ,nullptr },  // Inst #509 = STDFQrr
  { 510,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #510 = STDFri
  { 511,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #511 = STDFrr
  { 512,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #512 = STDri
  { 513,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #513 = STDrr
  { 514,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #514 = STFArr
  { 515,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo25, -1 ,nullptr },  // Inst #515 = STFSRri
  { 516,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo26, -1 ,nullptr },  // Inst #516 = STFSRrr
  { 517,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #517 = STFri
  { 518,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #518 = STFrr
  { 519,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #519 = STHArr
  { 520,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #520 = STHri
  { 521,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #521 = STHrr
  { 522,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #522 = STQFArr
  { 523,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #523 = STQFri
  { 524,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #524 = STQFrr
  { 525,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo25, -1 ,nullptr },  // Inst #525 = STXFSRri
  { 526,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo26, -1 ,nullptr },  // Inst #526 = STXFSRrr
  { 527,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #527 = STXri
  { 528,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #528 = STXrr
  { 529,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #529 = STri
  { 530,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #530 = STrr
  { 531,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #531 = SUBCCri
  { 532,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #532 = SUBCCrr
  { 533,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #533 = SUBCri
  { 534,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #534 = SUBCrr
  { 535,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #535 = SUBEri
  { 536,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #536 = SUBErr
  { 537,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #537 = SUBXri
  { 538,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #538 = SUBXrr
  { 539,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #539 = SUBri
  { 540,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #540 = SUBrr
  { 541,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #541 = SWAPArr
  { 542,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #542 = SWAPri
  { 543,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #543 = SWAPrr
  { 544,	0,	0,	4,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #544 = TA3
  { 545,	0,	0,	4,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #545 = TA5
  { 546,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #546 = TADDCCTVri
  { 547,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #547 = TADDCCTVrr
  { 548,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #548 = TADDCCri
  { 549,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #549 = TADDCCrr
  { 550,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #550 = TICCri
  { 551,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #551 = TICCrr
  { 552,	4,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #552 = TLS_ADDXrr
  { 553,	4,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #553 = TLS_ADDrr
  { 554,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #554 = TLS_CALL
  { 555,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #555 = TLS_LDXrr
  { 556,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #556 = TLS_LDrr
  { 557,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #557 = TRAPri
  { 558,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #558 = TRAPrr
  { 559,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #559 = TSUBCCTVri
  { 560,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #560 = TSUBCCTVrr
  { 561,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #561 = TSUBCCri
  { 562,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #562 = TSUBCCrr
  { 563,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #563 = TXCCri
  { 564,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #564 = TXCCrr
  { 565,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo21, -1 ,nullptr },  // Inst #565 = UDIVCCri
  { 566,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo22, -1 ,nullptr },  // Inst #566 = UDIVCCrr
  { 567,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #567 = UDIVXri
  { 568,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #568 = UDIVXrr
  { 569,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo21, -1 ,nullptr },  // Inst #569 = UDIVri
  { 570,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo22, -1 ,nullptr },  // Inst #570 = UDIVrr
  { 571,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo93, -1 ,nullptr },  // Inst #571 = UMACri
  { 572,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo94, -1 ,nullptr },  // Inst #572 = UMACrr
  { 573,	3,	1,	4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo21, -1 ,nullptr },  // Inst #573 = UMULCCri
  { 574,	3,	1,	4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo22, -1 ,nullptr },  // Inst #574 = UMULCCrr
  { 575,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #575 = UMULXHI
  { 576,	3,	1,	4,	21,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo21, -1 ,nullptr },  // Inst #576 = UMULri
  { 577,	3,	1,	4,	21,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo22, -1 ,nullptr },  // Inst #577 = UMULrr
  { 578,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #578 = UNIMP
  { 579,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #579 = V9FCMPD
  { 580,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #580 = V9FCMPED
  { 581,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #581 = V9FCMPEQ
  { 582,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #582 = V9FCMPES
  { 583,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #583 = V9FCMPQ
  { 584,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #584 = V9FCMPS
  { 585,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #585 = V9FMOVD_FCC
  { 586,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #586 = V9FMOVQ_FCC
  { 587,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo127, -1 ,nullptr },  // Inst #587 = V9FMOVS_FCC
  { 588,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #588 = V9MOVFCCri
  { 589,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #589 = V9MOVFCCrr
  { 590,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #590 = WRASRri
  { 591,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #591 = WRASRrr
  { 592,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #592 = WRPRri
  { 593,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #593 = WRPRrr
  { 594,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList9, OperandInfo34, -1 ,nullptr },  // Inst #594 = WRPSRri
  { 595,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList9, OperandInfo35, -1 ,nullptr },  // Inst #595 = WRPSRrr
  { 596,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList10, OperandInfo34, -1 ,nullptr },  // Inst #596 = WRTBRri
  { 597,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList10, OperandInfo35, -1 ,nullptr },  // Inst #597 = WRTBRrr
  { 598,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo34, -1 ,nullptr },  // Inst #598 = WRWIMri
  { 599,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo35, -1 ,nullptr },  // Inst #599 = WRWIMrr
  { 600,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #600 = XMULX
  { 601,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #601 = XMULXHI
  { 602,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #602 = XNORCCri
  { 603,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #603 = XNORCCrr
  { 604,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #604 = XNORXrr
  { 605,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #605 = XNORri
  { 606,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #606 = XNORrr
  { 607,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #607 = XORCCri
  { 608,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #608 = XORCCrr
  { 609,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #609 = XORXri
  { 610,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #610 = XORXrr
  { 611,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #611 = XORri
  { 612,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #612 = XORrr
};

extern const char SparcInstrNameData[] = {
  /* 0 */ 'C', 'A', 'S', 'A', 'a', 's', 'i', '1', '0', 0,
  /* 10 */ 'F', 'S', 'R', 'C', '1', 0,
  /* 16 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '1', 0,
  /* 25 */ 'F', 'N', 'O', 'T', '1', 0,
  /* 31 */ 'F', 'O', 'R', 'N', 'O', 'T', '1', 0,
  /* 39 */ 'F', 'S', 'R', 'A', '3', '2', 0,
  /* 46 */ 'F', 'P', 'S', 'U', 'B', '3', '2', 0,
  /* 54 */ 'F', 'P', 'A', 'D', 'D', '3', '2', 0,
  /* 62 */ 'E', 'D', 'G', 'E', '3', '2', 0,
  /* 69 */ 'F', 'C', 'M', 'P', 'L', 'E', '3', '2', 0,
  /* 78 */ 'F', 'C', 'M', 'P', 'N', 'E', '3', '2', 0,
  /* 87 */ 'F', 'P', 'A', 'C', 'K', '3', '2', 0,
  /* 95 */ 'C', 'M', 'A', 'S', 'K', '3', '2', 0,
  /* 103 */ 'F', 'S', 'L', 'L', '3', '2', 0,
  /* 110 */ 'F', 'S', 'R', 'L', '3', '2', 0,
  /* 117 */ 'F', 'C', 'M', 'P', 'E', 'Q', '3', '2', 0,
  /* 126 */ 'F', 'S', 'L', 'A', 'S', '3', '2', 0,
  /* 134 */ 'F', 'C', 'M', 'P', 'G', 'T', '3', '2', 0,
  /* 143 */ 'A', 'R', 'R', 'A', 'Y', '3', '2', 0,
  /* 151 */ 'F', 'S', 'R', 'C', '2', 0,
  /* 157 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '2', 0,
  /* 166 */ 'F', 'N', 'O', 'T', '2', 0,
  /* 172 */ 'F', 'O', 'R', 'N', 'O', 'T', '2', 0,
  /* 180 */ 'T', 'A', '3', 0,
  /* 184 */ 'F', 'P', 'A', 'D', 'D', '6', '4', 0,
  /* 192 */ 'T', 'A', '5', 0,
  /* 196 */ 'F', 'S', 'R', 'A', '1', '6', 0,
  /* 203 */ 'F', 'P', 'S', 'U', 'B', '1', '6', 0,
  /* 211 */ 'F', 'P', 'A', 'D', 'D', '1', '6', 0,
  /* 219 */ 'E', 'D', 'G', 'E', '1', '6', 0,
  /* 226 */ 'F', 'C', 'M', 'P', 'L', 'E', '1', '6', 0,
  /* 235 */ 'F', 'C', 'M', 'P', 'N', 'E', '1', '6', 0,
  /* 244 */ 'F', 'P', 'A', 'C', 'K', '1', '6', 0,
  /* 252 */ 'C', 'M', 'A', 'S', 'K', '1', '6', 0,
  /* 260 */ 'F', 'S', 'L', 'L', '1', '6', 0,
  /* 267 */ 'F', 'S', 'R', 'L', '1', '6', 0,
  /* 274 */ 'F', 'C', 'H', 'K', 'S', 'M', '1', '6', 0,
  /* 283 */ 'F', 'M', 'E', 'A', 'N', '1', '6', 0,
  /* 291 */ 'F', 'C', 'M', 'P', 'E', 'Q', '1', '6', 0,
  /* 300 */ 'F', 'S', 'L', 'A', 'S', '1', '6', 0,
  /* 308 */ 'F', 'C', 'M', 'P', 'G', 'T', '1', '6', 0,
  /* 317 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 0,
  /* 326 */ 'F', 'M', 'U', 'L', 'D', '8', 'U', 'L', 'X', '1', '6', 0,
  /* 338 */ 'F', 'M', 'U', 'L', '8', 'U', 'L', 'X', '1', '6', 0,
  /* 349 */ 'F', 'M', 'U', 'L', 'D', '8', 'S', 'U', 'X', '1', '6', 0,
  /* 361 */ 'F', 'M', 'U', 'L', '8', 'S', 'U', 'X', '1', '6', 0,
  /* 372 */ 'A', 'R', 'R', 'A', 'Y', '1', '6', 0,
  /* 380 */ 'E', 'D', 'G', 'E', '8', 0,
  /* 386 */ 'C', 'M', 'A', 'S', 'K', '8', 0,
  /* 393 */ 'A', 'R', 'R', 'A', 'Y', '8', 0,
  /* 400 */ 'B', 'A', 0,
  /* 403 */ 'B', 'P', 'F', 'C', 'C', 'A', 0,
  /* 410 */ 'B', 'P', 'I', 'C', 'C', 'A', 0,
  /* 417 */ 'B', 'P', 'X', 'C', 'C', 'A', 0,
  /* 424 */ 'C', 'B', 'C', 'O', 'N', 'D', 'A', 0,
  /* 432 */ 'F', 'B', 'C', 'O', 'N', 'D', 'A', 0,
  /* 440 */ 'F', 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'A', 'T', 'A', 0,
  /* 452 */ 'G', '_', 'F', 'S', 'U', 'B', 0,
  /* 459 */ 'G', '_', 'S', 'U', 'B', 0,
  /* 465 */ 'A', 'D', 'D', 'X', 'C', 'C', 'C', 0,
  /* 473 */ 'B', 'P', 'F', 'C', 'C', 0,
  /* 479 */ 'V', '9', 'F', 'M', 'O', 'V', 'D', '_', 'F', 'C', 'C', 0,
  /* 491 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'D', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 509 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 527 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 544 */ 'V', '9', 'F', 'M', 'O', 'V', 'Q', '_', 'F', 'C', 'C', 0,
  /* 556 */ 'V', '9', 'F', 'M', 'O', 'V', 'S', '_', 'F', 'C', 'C', 0,
  /* 568 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', 'n', 't', '_', 'F', 'C', 'C', 0,
  /* 586 */ 'B', 'P', 'I', 'C', 'C', 0,
  /* 592 */ 'F', 'M', 'O', 'V', 'D', '_', 'I', 'C', 'C', 0,
  /* 602 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'D', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 620 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 638 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 655 */ 'F', 'M', 'O', 'V', 'Q', '_', 'I', 'C', 'C', 0,
  /* 665 */ 'F', 'M', 'O', 'V', 'S', '_', 'I', 'C', 'C', 0,
  /* 675 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', 'n', 't', '_', 'I', 'C', 'C', 0,
  /* 693 */ 'B', 'P', 'X', 'C', 'C', 0,
  /* 699 */ 'F', 'M', 'O', 'V', 'D', '_', 'X', 'C', 'C', 0,
  /* 709 */ 'F', 'M', 'O', 'V', 'Q', '_', 'X', 'C', 'C', 0,
  /* 719 */ 'F', 'M', 'O', 'V', 'S', '_', 'X', 'C', 'C', 0,
  /* 729 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', 0,
  /* 741 */ 'G', '_', 'F', 'P', 'T', 'R', 'U', 'N', 'C', 0,
  /* 751 */ 'G', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 759 */ 'A', 'D', 'D', 'X', 'C', 0,
  /* 765 */ 'G', '_', 'L', 'O', 'A', 'D', 0,
  /* 772 */ 'F', 'S', 'U', 'B', 'D', 0,
  /* 778 */ 'F', 'H', 'S', 'U', 'B', 'D', 0,
  /* 785 */ 'G', '_', 'F', 'A', 'D', 'D', 0,
  /* 792 */ 'G', '_', 'A', 'D', 'D', 0,
  /* 798 */ 'F', 'A', 'D', 'D', 'D', 0,
  /* 804 */ 'F', 'H', 'A', 'D', 'D', 'D', 0,
  /* 811 */ 'F', 'N', 'H', 'A', 'D', 'D', 'D', 0,
  /* 819 */ 'F', 'N', 'A', 'D', 'D', 'D', 0,
  /* 826 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'D', 0,
  /* 835 */ 'F', 'N', 'E', 'G', 'D', 0,
  /* 841 */ 'F', 'M', 'U', 'L', 'D', 0,
  /* 847 */ 'F', 'N', 'M', 'U', 'L', 'D', 0,
  /* 854 */ 'F', 'S', 'M', 'U', 'L', 'D', 0,
  /* 861 */ 'F', 'N', 'S', 'M', 'U', 'L', 'D', 0,
  /* 869 */ 'F', 'A', 'N', 'D', 0,
  /* 874 */ 'F', 'N', 'A', 'N', 'D', 0,
  /* 880 */ 'F', 'E', 'X', 'P', 'A', 'N', 'D', 0,
  /* 888 */ 'G', '_', 'A', 'N', 'D', 0,
  /* 894 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 907 */ 'C', 'B', 'C', 'O', 'N', 'D', 0,
  /* 914 */ 'F', 'B', 'C', 'O', 'N', 'D', 0,
  /* 921 */ 'G', '_', 'B', 'R', 'C', 'O', 'N', 'D', 0,
  /* 930 */ 'F', 'I', 'T', 'O', 'D', 0,
  /* 936 */ 'F', 'Q', 'T', 'O', 'D', 0,
  /* 942 */ 'F', 'S', 'T', 'O', 'D', 0,
  /* 948 */ 'F', 'X', 'T', 'O', 'D', 0,
  /* 954 */ 'M', 'O', 'V', 'X', 'T', 'O', 'D', 0,
  /* 962 */ 'V', '9', 'F', 'C', 'M', 'P', 'D', 0,
  /* 970 */ 'F', 'L', 'C', 'M', 'P', 'D', 0,
  /* 977 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 994 */ 'F', 'A', 'B', 'S', 'D', 0,
  /* 1000 */ 'F', 'S', 'Q', 'R', 'T', 'D', 0,
  /* 1007 */ 'F', 'D', 'I', 'V', 'D', 0,
  /* 1013 */ 'F', 'M', 'O', 'V', 'D', 0,
  /* 1019 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'D', 0,
  /* 1029 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'D', 0,
  /* 1039 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'D', 0,
  /* 1048 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'D', 0,
  /* 1057 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'D', 0,
  /* 1066 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'D', 0,
  /* 1074 */ 'G', '_', 'U', 'S', 'U', 'B', 'E', 0,
  /* 1082 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 1095 */ 'G', '_', 'U', 'A', 'D', 'D', 'E', 0,
  /* 1103 */ 'F', 'P', 'M', 'E', 'R', 'G', 'E', 0,
  /* 1111 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 1118 */ 'B', 'S', 'H', 'U', 'F', 'F', 'L', 'E', 0,
  /* 1127 */ 'F', 'O', 'N', 'E', 0,
  /* 1132 */ 'L', 'O', 'C', 'A', 'L', '_', 'E', 'S', 'C', 'A', 'P', 'E', 0,
  /* 1145 */ 'G', '_', 'S', 'T', 'O', 'R', 'E', 0,
  /* 1153 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 1163 */ 'G', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 1178 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 1191 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 1206 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 1220 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 1234 */ 'F', 'L', 'U', 'S', 'H', 0,
  /* 1240 */ 'P', 'H', 'I', 0,
  /* 1244 */ 'U', 'M', 'U', 'L', 'X', 'H', 'I', 0,
  /* 1252 */ 'X', 'M', 'U', 'L', 'X', 'H', 'I', 0,
  /* 1260 */ 'F', 'D', 'T', 'O', 'I', 0,
  /* 1266 */ 'F', 'Q', 'T', 'O', 'I', 0,
  /* 1272 */ 'F', 'S', 'T', 'O', 'I', 0,
  /* 1278 */ 'G', '_', 'F', 'P', 'T', 'O', 'S', 'I', 0,
  /* 1287 */ 'G', '_', 'F', 'P', 'T', 'O', 'U', 'I', 0,
  /* 1296 */ 'B', 'M', 'A', 'S', 'K', 0,
  /* 1302 */ 'E', 'D', 'G', 'E', '3', '2', 'L', 0,
  /* 1310 */ 'E', 'D', 'G', 'E', '1', '6', 'L', 0,
  /* 1318 */ 'E', 'D', 'G', 'E', '8', 'L', 0,
  /* 1325 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 'A', 'L', 0,
  /* 1336 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1345 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1354 */ 'G', '_', 'S', 'H', 'L', 0,
  /* 1360 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'A', 'I', 'L', '_', 'C', 'A', 'L', 'L', 0,
  /* 1380 */ 'T', 'L', 'S', '_', 'C', 'A', 'L', 'L', 0,
  /* 1389 */ 'K', 'I', 'L', 'L', 0,
  /* 1394 */ 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'D', 'R', 'L', 0,
  /* 1405 */ 'R', 'E', 'T', 'L', 0,
  /* 1410 */ 'G', '_', 'F', 'M', 'U', 'L', 0,
  /* 1417 */ 'G', '_', 'M', 'U', 'L', 0,
  /* 1423 */ 'S', 'I', 'A', 'M', 0,
  /* 1428 */ 'G', '_', 'F', 'R', 'E', 'M', 0,
  /* 1435 */ 'G', '_', 'S', 'R', 'E', 'M', 0,
  /* 1442 */ 'G', '_', 'U', 'R', 'E', 'M', 0,
  /* 1449 */ 'R', 'D', 'W', 'I', 'M', 0,
  /* 1455 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 1465 */ 'E', 'D', 'G', 'E', '3', '2', 'N', 0,
  /* 1473 */ 'E', 'D', 'G', 'E', '1', '6', 'N', 0,
  /* 1481 */ 'E', 'D', 'G', 'E', '8', 'N', 0,
  /* 1488 */ 'E', 'D', 'G', 'E', '3', '2', 'L', 'N', 0,
  /* 1497 */ 'E', 'D', 'G', 'E', '1', '6', 'L', 'N', 0,
  /* 1506 */ 'E', 'D', 'G', 'E', '8', 'L', 'N', 0,
  /* 1514 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 1530 */ 'P', 'D', 'I', 'S', 'T', 'N', 0,
  /* 1537 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 1554 */ 'S', 'H', 'U', 'T', 'D', 'O', 'W', 'N', 0,
  /* 1563 */ 'G', '_', 'S', 'S', 'U', 'B', 'O', 0,
  /* 1571 */ 'G', '_', 'S', 'A', 'D', 'D', 'O', 0,
  /* 1579 */ 'G', '_', 'S', 'M', 'U', 'L', 'O', 0,
  /* 1587 */ 'G', '_', 'U', 'M', 'U', 'L', 'O', 0,
  /* 1595 */ 'F', 'Z', 'E', 'R', 'O', 0,
  /* 1601 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 1610 */ 'G', '_', 'G', 'E', 'P', 0,
  /* 1616 */ 'G', '_', 'S', 'I', 'T', 'O', 'F', 'P', 0,
  /* 1625 */ 'G', '_', 'U', 'I', 'T', 'O', 'F', 'P', 0,
  /* 1634 */ 'G', '_', 'F', 'C', 'M', 'P', 0,
  /* 1641 */ 'G', '_', 'I', 'C', 'M', 'P', 0,
  /* 1648 */ 'U', 'N', 'I', 'M', 'P', 0,
  /* 1654 */ 'N', 'O', 'P', 0,
  /* 1658 */ 'F', 'A', 'U', 'L', 'T', 'I', 'N', 'G', '_', 'L', 'O', 'A', 'D', '_', 'O', 'P', 0,
  /* 1675 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'O', 'P', 0,
  /* 1688 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 1703 */ 'F', 'S', 'U', 'B', 'Q', 0,
  /* 1709 */ 'F', 'A', 'D', 'D', 'Q', 0,
  /* 1715 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 1724 */ 'F', 'N', 'E', 'G', 'Q', 0,
  /* 1730 */ 'F', 'D', 'M', 'U', 'L', 'Q', 0,
  /* 1737 */ 'F', 'M', 'U', 'L', 'Q', 0,
  /* 1743 */ 'F', 'D', 'T', 'O', 'Q', 0,
  /* 1749 */ 'F', 'I', 'T', 'O', 'Q', 0,
  /* 1755 */ 'F', 'S', 'T', 'O', 'Q', 0,
  /* 1761 */ 'F', 'X', 'T', 'O', 'Q', 0,
  /* 1767 */ 'V', '9', 'F', 'C', 'M', 'P', 'Q', 0,
  /* 1775 */ 'F', 'A', 'B', 'S', 'Q', 0,
  /* 1781 */ 'F', 'S', 'Q', 'R', 'T', 'Q', 0,
  /* 1788 */ 'F', 'D', 'I', 'V', 'Q', 0,
  /* 1794 */ 'F', 'M', 'O', 'V', 'Q', 0,
  /* 1800 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'Q', 0,
  /* 1810 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'Q', 0,
  /* 1820 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'Q', 0,
  /* 1829 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'Q', 0,
  /* 1838 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'Q', 0,
  /* 1847 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'Q', 0,
  /* 1855 */ 'S', 'T', 'B', 'A', 'R', 0,
  /* 1861 */ 'R', 'D', 'T', 'B', 'R', 0,
  /* 1867 */ 'G', '_', 'B', 'R', 0,
  /* 1872 */ 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'D', 'R', 0,
  /* 1882 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'N', 'T', 'E', 'R', 0,
  /* 1907 */ 'G', '_', 'A', 'S', 'H', 'R', 0,
  /* 1914 */ 'G', '_', 'L', 'S', 'H', 'R', 0,
  /* 1921 */ 'F', 'O', 'R', 0,
  /* 1925 */ 'F', 'N', 'O', 'R', 0,
  /* 1930 */ 'F', 'X', 'N', 'O', 'R', 0,
  /* 1936 */ 'F', 'X', 'O', 'R', 0,
  /* 1941 */ 'G', '_', 'X', 'O', 'R', 0,
  /* 1947 */ 'G', '_', 'O', 'R', 0,
  /* 1952 */ 'R', 'D', 'P', 'R', 0,
  /* 1957 */ 'R', 'D', 'A', 'S', 'R', 0,
  /* 1963 */ 'R', 'D', 'P', 'S', 'R', 0,
  /* 1969 */ 'G', '_', 'I', 'N', 'T', 'T', 'O', 'P', 'T', 'R', 0,
  /* 1980 */ 'F', 'S', 'R', 'C', '1', 'S', 0,
  /* 1987 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '1', 'S', 0,
  /* 1997 */ 'F', 'N', 'O', 'T', '1', 'S', 0,
  /* 2004 */ 'F', 'O', 'R', 'N', 'O', 'T', '1', 'S', 0,
  /* 2013 */ 'F', 'P', 'S', 'U', 'B', '3', '2', 'S', 0,
  /* 2022 */ 'F', 'P', 'A', 'D', 'D', '3', '2', 'S', 0,
  /* 2031 */ 'F', 'S', 'R', 'C', '2', 'S', 0,
  /* 2038 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '2', 'S', 0,
  /* 2048 */ 'F', 'N', 'O', 'T', '2', 'S', 0,
  /* 2055 */ 'F', 'O', 'R', 'N', 'O', 'T', '2', 'S', 0,
  /* 2064 */ 'F', 'P', 'S', 'U', 'B', '1', '6', 'S', 0,
  /* 2073 */ 'F', 'P', 'A', 'D', 'D', '1', '6', 'S', 0,
  /* 2082 */ 'F', 'S', 'U', 'B', 'S', 0,
  /* 2088 */ 'F', 'H', 'S', 'U', 'B', 'S', 0,
  /* 2095 */ 'F', 'A', 'D', 'D', 'S', 0,
  /* 2101 */ 'F', 'H', 'A', 'D', 'D', 'S', 0,
  /* 2108 */ 'F', 'N', 'H', 'A', 'D', 'D', 'S', 0,
  /* 2116 */ 'F', 'N', 'A', 'D', 'D', 'S', 0,
  /* 2123 */ 'F', 'A', 'N', 'D', 'S', 0,
  /* 2129 */ 'F', 'N', 'A', 'N', 'D', 'S', 0,
  /* 2136 */ 'F', 'O', 'N', 'E', 'S', 0,
  /* 2142 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'S', 0,
  /* 2151 */ 'F', 'N', 'E', 'G', 'S', 0,
  /* 2157 */ 'F', 'M', 'U', 'L', 'S', 0,
  /* 2163 */ 'F', 'N', 'M', 'U', 'L', 'S', 0,
  /* 2170 */ 'F', 'Z', 'E', 'R', 'O', 'S', 0,
  /* 2177 */ 'F', 'D', 'T', 'O', 'S', 0,
  /* 2183 */ 'F', 'I', 'T', 'O', 'S', 0,
  /* 2189 */ 'F', 'Q', 'T', 'O', 'S', 0,
  /* 2195 */ 'M', 'O', 'V', 'W', 'T', 'O', 'S', 0,
  /* 2203 */ 'F', 'X', 'T', 'O', 'S', 0,
  /* 2209 */ 'V', '9', 'F', 'C', 'M', 'P', 'S', 0,
  /* 2217 */ 'F', 'L', 'C', 'M', 'P', 'S', 0,
  /* 2224 */ 'F', 'O', 'R', 'S', 0,
  /* 2229 */ 'F', 'N', 'O', 'R', 'S', 0,
  /* 2235 */ 'F', 'X', 'N', 'O', 'R', 'S', 0,
  /* 2242 */ 'F', 'X', 'O', 'R', 'S', 0,
  /* 2248 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 2265 */ 'F', 'A', 'B', 'S', 'S', 0,
  /* 2271 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'W', '_', 'S', 'I', 'D', 'E', '_', 'E', 'F', 'F', 'E', 'C', 'T', 'S', 0,
  /* 2298 */ 'F', 'S', 'Q', 'R', 'T', 'S', 0,
  /* 2305 */ 'F', 'D', 'I', 'V', 'S', 0,
  /* 2311 */ 'F', 'M', 'O', 'V', 'S', 0,
  /* 2317 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'S', 0,
  /* 2327 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'S', 0,
  /* 2337 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'S', 0,
  /* 2346 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'S', 0,
  /* 2355 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'S', 0,
  /* 2364 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'S', 0,
  /* 2372 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 0,
  /* 2382 */ 'G', '_', 'S', 'E', 'L', 'E', 'C', 'T', 0,
  /* 2391 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'R', 'E', 'T', 0,
  /* 2405 */ 'S', 'E', 'T', 0,
  /* 2409 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'X', 'I', 'T', 0,
  /* 2433 */ 'B', 'P', 'F', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2442 */ 'B', 'P', 'I', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2451 */ 'B', 'P', 'X', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2460 */ 'G', '_', 'F', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 2472 */ 'G', '_', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 2483 */ 'B', 'P', 'F', 'C', 'C', 'N', 'T', 0,
  /* 2491 */ 'B', 'P', 'I', 'C', 'C', 'N', 'T', 0,
  /* 2499 */ 'B', 'P', 'X', 'C', 'C', 'N', 'T', 0,
  /* 2507 */ 'L', 'Z', 'C', 'N', 'T', 0,
  /* 2513 */ 'S', 'T', 'A', 'T', 'E', 'P', 'O', 'I', 'N', 'T', 0,
  /* 2524 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 2535 */ 'G', '_', 'P', 'T', 'R', 'T', 'O', 'I', 'N', 'T', 0,
  /* 2546 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 2561 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', 0,
  /* 2570 */ 'G', '_', 'B', 'I', 'T', 'C', 'A', 'S', 'T', 0,
  /* 2580 */ 'P', 'D', 'I', 'S', 'T', 0,
  /* 2586 */ 'G', '_', 'F', 'P', 'E', 'X', 'T', 0,
  /* 2594 */ 'G', '_', 'S', 'E', 'X', 'T', 0,
  /* 2601 */ 'G', '_', 'A', 'N', 'Y', 'E', 'X', 'T', 0,
  /* 2610 */ 'G', '_', 'Z', 'E', 'X', 'T', 0,
  /* 2617 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 'A', 'U', 0,
  /* 2628 */ 'G', '_', 'F', 'D', 'I', 'V', 0,
  /* 2635 */ 'G', '_', 'S', 'D', 'I', 'V', 0,
  /* 2642 */ 'G', '_', 'U', 'D', 'I', 'V', 0,
  /* 2649 */ 'F', 'L', 'U', 'S', 'H', 'W', 0,
  /* 2656 */ 'M', 'O', 'V', 'S', 'T', 'O', 'S', 'W', 0,
  /* 2665 */ 'M', 'O', 'V', 'S', 'T', 'O', 'U', 'W', 0,
  /* 2674 */ 'G', 'E', 'T', 'P', 'C', 'X', 0,
  /* 2681 */ 'G', '_', 'F', 'R', 'A', 'M', 'E', '_', 'I', 'N', 'D', 'E', 'X', 0,
  /* 2695 */ 'F', 'P', 'A', 'C', 'K', 'F', 'I', 'X', 0,
  /* 2704 */ 'X', 'M', 'U', 'L', 'X', 0,
  /* 2710 */ 'F', 'D', 'T', 'O', 'X', 0,
  /* 2716 */ 'M', 'O', 'V', 'D', 'T', 'O', 'X', 0,
  /* 2724 */ 'F', 'Q', 'T', 'O', 'X', 0,
  /* 2730 */ 'F', 'S', 'T', 'O', 'X', 0,
  /* 2736 */ 'C', 'O', 'P', 'Y', 0,
  /* 2741 */ 'S', 'E', 'T', 'H', 'I', 'i', 0,
  /* 2748 */ 'M', 'E', 'M', 'B', 'A', 'R', 'i', 0,
  /* 2756 */ 'S', 'E', 'T', 'H', 'I', 'X', 'i', 0,
  /* 2764 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 'r', 'i', 0,
  /* 2784 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 'r', 'i', 0,
  /* 2803 */ 'S', 'R', 'A', 'r', 'i', 0,
  /* 2809 */ 'L', 'D', 'S', 'B', 'r', 'i', 0,
  /* 2816 */ 'S', 'T', 'B', 'r', 'i', 0,
  /* 2822 */ 'L', 'D', 'U', 'B', 'r', 'i', 0,
  /* 2829 */ 'S', 'U', 'B', 'r', 'i', 0,
  /* 2835 */ 'L', 'D', 'S', 'T', 'U', 'B', 'r', 'i', 0,
  /* 2844 */ 'S', 'M', 'A', 'C', 'r', 'i', 0,
  /* 2851 */ 'U', 'M', 'A', 'C', 'r', 'i', 0,
  /* 2858 */ 'S', 'U', 'B', 'C', 'r', 'i', 0,
  /* 2865 */ 'T', 'S', 'U', 'B', 'C', 'C', 'r', 'i', 0,
  /* 2874 */ 'T', 'A', 'D', 'D', 'C', 'C', 'r', 'i', 0,
  /* 2883 */ 'A', 'N', 'D', 'C', 'C', 'r', 'i', 0,
  /* 2891 */ 'V', '9', 'M', 'O', 'V', 'F', 'C', 'C', 'r', 'i', 0,
  /* 2902 */ 'T', 'I', 'C', 'C', 'r', 'i', 0,
  /* 2909 */ 'M', 'O', 'V', 'I', 'C', 'C', 'r', 'i', 0,
  /* 2918 */ 'S', 'M', 'U', 'L', 'C', 'C', 'r', 'i', 0,
  /* 2927 */ 'U', 'M', 'U', 'L', 'C', 'C', 'r', 'i', 0,
  /* 2936 */ 'A', 'N', 'D', 'N', 'C', 'C', 'r', 'i', 0,
  /* 2945 */ 'O', 'R', 'N', 'C', 'C', 'r', 'i', 0,
  /* 2953 */ 'X', 'N', 'O', 'R', 'C', 'C', 'r', 'i', 0,
  /* 2962 */ 'X', 'O', 'R', 'C', 'C', 'r', 'i', 0,
  /* 2970 */ 'M', 'U', 'L', 'S', 'C', 'C', 'r', 'i', 0,
  /* 2979 */ 'S', 'D', 'I', 'V', 'C', 'C', 'r', 'i', 0,
  /* 2988 */ 'U', 'D', 'I', 'V', 'C', 'C', 'r', 'i', 0,
  /* 2997 */ 'T', 'X', 'C', 'C', 'r', 'i', 0,
  /* 3004 */ 'M', 'O', 'V', 'X', 'C', 'C', 'r', 'i', 0,
  /* 3013 */ 'A', 'D', 'D', 'C', 'r', 'i', 0,
  /* 3020 */ 'L', 'D', 'D', 'C', 'r', 'i', 0,
  /* 3027 */ 'L', 'D', 'C', 'r', 'i', 0,
  /* 3033 */ 'S', 'T', 'D', 'C', 'r', 'i', 0,
  /* 3040 */ 'S', 'T', 'C', 'r', 'i', 0,
  /* 3046 */ 'L', 'E', 'A', '_', 'A', 'D', 'D', 'r', 'i', 0,
  /* 3056 */ 'L', 'E', 'A', 'X', '_', 'A', 'D', 'D', 'r', 'i', 0,
  /* 3067 */ 'L', 'D', 'D', 'r', 'i', 0,
  /* 3073 */ 'L', 'D', 'r', 'i', 0,
  /* 3078 */ 'A', 'N', 'D', 'r', 'i', 0,
  /* 3084 */ 'B', 'I', 'N', 'D', 'r', 'i', 0,
  /* 3091 */ 'S', 'T', 'D', 'r', 'i', 0,
  /* 3097 */ 'S', 'U', 'B', 'E', 'r', 'i', 0,
  /* 3104 */ 'A', 'D', 'D', 'E', 'r', 'i', 0,
  /* 3111 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', 'r', 'i', 0,
  /* 3121 */ 'S', 'A', 'V', 'E', 'r', 'i', 0,
  /* 3128 */ 'L', 'D', 'D', 'F', 'r', 'i', 0,
  /* 3135 */ 'L', 'D', 'F', 'r', 'i', 0,
  /* 3141 */ 'S', 'T', 'D', 'F', 'r', 'i', 0,
  /* 3148 */ 'L', 'D', 'Q', 'F', 'r', 'i', 0,
  /* 3155 */ 'S', 'T', 'Q', 'F', 'r', 'i', 0,
  /* 3162 */ 'S', 'T', 'F', 'r', 'i', 0,
  /* 3168 */ 'L', 'D', 'S', 'H', 'r', 'i', 0,
  /* 3175 */ 'F', 'L', 'U', 'S', 'H', 'r', 'i', 0,
  /* 3183 */ 'S', 'T', 'H', 'r', 'i', 0,
  /* 3189 */ 'L', 'D', 'U', 'H', 'r', 'i', 0,
  /* 3196 */ 'C', 'A', 'L', 'L', 'r', 'i', 0,
  /* 3203 */ 'S', 'L', 'L', 'r', 'i', 0,
  /* 3209 */ 'J', 'M', 'P', 'L', 'r', 'i', 0,
  /* 3216 */ 'S', 'R', 'L', 'r', 'i', 0,
  /* 3222 */ 'S', 'M', 'U', 'L', 'r', 'i', 0,
  /* 3229 */ 'U', 'M', 'U', 'L', 'r', 'i', 0,
  /* 3236 */ 'W', 'R', 'W', 'I', 'M', 'r', 'i', 0,
  /* 3244 */ 'A', 'N', 'D', 'N', 'r', 'i', 0,
  /* 3251 */ 'O', 'R', 'N', 'r', 'i', 0,
  /* 3257 */ 'T', 'R', 'A', 'P', 'r', 'i', 0,
  /* 3264 */ 'S', 'W', 'A', 'P', 'r', 'i', 0,
  /* 3271 */ 'C', 'M', 'P', 'r', 'i', 0,
  /* 3277 */ 'S', 'T', 'D', 'C', 'Q', 'r', 'i', 0,
  /* 3285 */ 'S', 'T', 'D', 'F', 'Q', 'r', 'i', 0,
  /* 3293 */ 'W', 'R', 'T', 'B', 'R', 'r', 'i', 0,
  /* 3301 */ 'X', 'N', 'O', 'R', 'r', 'i', 0,
  /* 3308 */ 'X', 'O', 'R', 'r', 'i', 0,
  /* 3314 */ 'W', 'R', 'P', 'R', 'r', 'i', 0,
  /* 3321 */ 'W', 'R', 'A', 'S', 'R', 'r', 'i', 0,
  /* 3329 */ 'L', 'D', 'C', 'S', 'R', 'r', 'i', 0,
  /* 3337 */ 'S', 'T', 'C', 'S', 'R', 'r', 'i', 0,
  /* 3345 */ 'L', 'D', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3353 */ 'S', 'T', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3361 */ 'L', 'D', 'X', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3370 */ 'S', 'T', 'X', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3379 */ 'W', 'R', 'P', 'S', 'R', 'r', 'i', 0,
  /* 3387 */ 'S', 'T', 'r', 'i', 0,
  /* 3392 */ 'R', 'E', 'T', 'T', 'r', 'i', 0,
  /* 3399 */ 'S', 'D', 'I', 'V', 'r', 'i', 0,
  /* 3406 */ 'U', 'D', 'I', 'V', 'r', 'i', 0,
  /* 3413 */ 'T', 'S', 'U', 'B', 'C', 'C', 'T', 'V', 'r', 'i', 0,
  /* 3424 */ 'T', 'A', 'D', 'D', 'C', 'C', 'T', 'V', 'r', 'i', 0,
  /* 3435 */ 'L', 'D', 'S', 'W', 'r', 'i', 0,
  /* 3442 */ 'S', 'R', 'A', 'X', 'r', 'i', 0,
  /* 3449 */ 'S', 'U', 'B', 'X', 'r', 'i', 0,
  /* 3456 */ 'A', 'D', 'D', 'X', 'r', 'i', 0,
  /* 3463 */ 'L', 'D', 'X', 'r', 'i', 0,
  /* 3469 */ 'A', 'N', 'D', 'X', 'r', 'i', 0,
  /* 3476 */ 'S', 'L', 'L', 'X', 'r', 'i', 0,
  /* 3483 */ 'S', 'R', 'L', 'X', 'r', 'i', 0,
  /* 3490 */ 'M', 'U', 'L', 'X', 'r', 'i', 0,
  /* 3497 */ 'X', 'O', 'R', 'X', 'r', 'i', 0,
  /* 3504 */ 'S', 'T', 'X', 'r', 'i', 0,
  /* 3510 */ 'S', 'D', 'I', 'V', 'X', 'r', 'i', 0,
  /* 3518 */ 'U', 'D', 'I', 'V', 'X', 'r', 'i', 0,
  /* 3526 */ 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'r', 'i', 0,
  /* 3536 */ 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'r', 'i', 0,
  /* 3546 */ 'M', 'O', 'V', 'R', 'G', 'Z', 'r', 'i', 0,
  /* 3555 */ 'M', 'O', 'V', 'R', 'L', 'Z', 'r', 'i', 0,
  /* 3564 */ 'M', 'O', 'V', 'R', 'N', 'Z', 'r', 'i', 0,
  /* 3573 */ 'M', 'O', 'V', 'R', 'R', 'Z', 'r', 'i', 0,
  /* 3582 */ 'B', 'P', 'G', 'E', 'Z', 'a', 'p', 'n', 0,
  /* 3591 */ 'B', 'P', 'L', 'E', 'Z', 'a', 'p', 'n', 0,
  /* 3600 */ 'B', 'P', 'G', 'Z', 'a', 'p', 'n', 0,
  /* 3608 */ 'B', 'P', 'L', 'Z', 'a', 'p', 'n', 0,
  /* 3616 */ 'B', 'P', 'N', 'Z', 'a', 'p', 'n', 0,
  /* 3624 */ 'B', 'P', 'Z', 'a', 'p', 'n', 0,
  /* 3631 */ 'B', 'P', 'G', 'E', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3641 */ 'B', 'P', 'L', 'E', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3651 */ 'B', 'P', 'G', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3660 */ 'B', 'P', 'L', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3669 */ 'B', 'P', 'N', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3678 */ 'B', 'P', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3686 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 'r', 'r', 0,
  /* 3706 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 'r', 'r', 0,
  /* 3725 */ 'L', 'D', 'S', 'B', 'A', 'r', 'r', 0,
  /* 3733 */ 'S', 'T', 'B', 'A', 'r', 'r', 0,
  /* 3740 */ 'L', 'D', 'U', 'B', 'A', 'r', 'r', 0,
  /* 3748 */ 'L', 'D', 'S', 'T', 'U', 'B', 'A', 'r', 'r', 0,
  /* 3758 */ 'L', 'D', 'D', 'A', 'r', 'r', 0,
  /* 3765 */ 'L', 'D', 'A', 'r', 'r', 0,
  /* 3771 */ 'S', 'T', 'D', 'A', 'r', 'r', 0,
  /* 3778 */ 'L', 'D', 'D', 'F', 'A', 'r', 'r', 0,
  /* 3786 */ 'L', 'D', 'F', 'A', 'r', 'r', 0,
  /* 3793 */ 'S', 'T', 'D', 'F', 'A', 'r', 'r', 0,
  /* 3801 */ 'L', 'D', 'Q', 'F', 'A', 'r', 'r', 0,
  /* 3809 */ 'S', 'T', 'Q', 'F', 'A', 'r', 'r', 0,
  /* 3817 */ 'S', 'T', 'F', 'A', 'r', 'r', 0,
  /* 3824 */ 'L', 'D', 'S', 'H', 'A', 'r', 'r', 0,
  /* 3832 */ 'S', 'T', 'H', 'A', 'r', 'r', 0,
  /* 3839 */ 'L', 'D', 'U', 'H', 'A', 'r', 'r', 0,
  /* 3847 */ 'S', 'W', 'A', 'P', 'A', 'r', 'r', 0,
  /* 3855 */ 'S', 'R', 'A', 'r', 'r', 0,
  /* 3861 */ 'C', 'A', 'S', 'A', 'r', 'r', 0,
  /* 3868 */ 'S', 'T', 'A', 'r', 'r', 0,
  /* 3874 */ 'L', 'D', 'S', 'B', 'r', 'r', 0,
  /* 3881 */ 'S', 'T', 'B', 'r', 'r', 0,
  /* 3887 */ 'L', 'D', 'U', 'B', 'r', 'r', 0,
  /* 3894 */ 'S', 'U', 'B', 'r', 'r', 0,
  /* 3900 */ 'L', 'D', 'S', 'T', 'U', 'B', 'r', 'r', 0,
  /* 3909 */ 'S', 'M', 'A', 'C', 'r', 'r', 0,
  /* 3916 */ 'U', 'M', 'A', 'C', 'r', 'r', 0,
  /* 3923 */ 'S', 'U', 'B', 'C', 'r', 'r', 0,
  /* 3930 */ 'T', 'S', 'U', 'B', 'C', 'C', 'r', 'r', 0,
  /* 3939 */ 'T', 'A', 'D', 'D', 'C', 'C', 'r', 'r', 0,
  /* 3948 */ 'A', 'N', 'D', 'C', 'C', 'r', 'r', 0,
  /* 3956 */ 'V', '9', 'M', 'O', 'V', 'F', 'C', 'C', 'r', 'r', 0,
  /* 3967 */ 'T', 'I', 'C', 'C', 'r', 'r', 0,
  /* 3974 */ 'M', 'O', 'V', 'I', 'C', 'C', 'r', 'r', 0,
  /* 3983 */ 'S', 'M', 'U', 'L', 'C', 'C', 'r', 'r', 0,
  /* 3992 */ 'U', 'M', 'U', 'L', 'C', 'C', 'r', 'r', 0,
  /* 4001 */ 'A', 'N', 'D', 'N', 'C', 'C', 'r', 'r', 0,
  /* 4010 */ 'O', 'R', 'N', 'C', 'C', 'r', 'r', 0,
  /* 4018 */ 'X', 'N', 'O', 'R', 'C', 'C', 'r', 'r', 0,
  /* 4027 */ 'X', 'O', 'R', 'C', 'C', 'r', 'r', 0,
  /* 4035 */ 'M', 'U', 'L', 'S', 'C', 'C', 'r', 'r', 0,
  /* 4044 */ 'S', 'D', 'I', 'V', 'C', 'C', 'r', 'r', 0,
  /* 4053 */ 'U', 'D', 'I', 'V', 'C', 'C', 'r', 'r', 0,
  /* 4062 */ 'T', 'X', 'C', 'C', 'r', 'r', 0,
  /* 4069 */ 'M', 'O', 'V', 'X', 'C', 'C', 'r', 'r', 0,
  /* 4078 */ 'A', 'D', 'D', 'C', 'r', 'r', 0,
  /* 4085 */ 'L', 'D', 'D', 'C', 'r', 'r', 0,
  /* 4092 */ 'L', 'D', 'C', 'r', 'r', 0,
  /* 4098 */ 'S', 'T', 'D', 'C', 'r', 'r', 0,
  /* 4105 */ 'P', 'O', 'P', 'C', 'r', 'r', 0,
  /* 4112 */ 'S', 'T', 'C', 'r', 'r', 0,
  /* 4118 */ 'T', 'L', 'S', '_', 'A', 'D', 'D', 'r', 'r', 0,
  /* 4128 */ 'L', 'D', 'D', 'r', 'r', 0,
  /* 4134 */ 'T', 'L', 'S', '_', 'L', 'D', 'r', 'r', 0,
  /* 4143 */ 'A', 'N', 'D', 'r', 'r', 0,
  /* 4149 */ 'B', 'I', 'N', 'D', 'r', 'r', 0,
  /* 4156 */ 'S', 'T', 'D', 'r', 'r', 0,
  /* 4162 */ 'S', 'U', 'B', 'E', 'r', 'r', 0,
  /* 4169 */ 'A', 'D', 'D', 'E', 'r', 'r', 0,
  /* 4176 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', 'r', 'r', 0,
  /* 4186 */ 'S', 'A', 'V', 'E', 'r', 'r', 0,
  /* 4193 */ 'L', 'D', 'D', 'F', 'r', 'r', 0,
  /* 4200 */ 'L', 'D', 'F', 'r', 'r', 0,
  /* 4206 */ 'S', 'T', 'D', 'F', 'r', 'r', 0,
  /* 4213 */ 'L', 'D', 'Q', 'F', 'r', 'r', 0,
  /* 4220 */ 'S', 'T', 'Q', 'F', 'r', 'r', 0,
  /* 4227 */ 'S', 'T', 'F', 'r', 'r', 0,
  /* 4233 */ 'L', 'D', 'S', 'H', 'r', 'r', 0,
  /* 4240 */ 'F', 'L', 'U', 'S', 'H', 'r', 'r', 0,
  /* 4248 */ 'S', 'T', 'H', 'r', 'r', 0,
  /* 4254 */ 'L', 'D', 'U', 'H', 'r', 'r', 0,
  /* 4261 */ 'C', 'A', 'L', 'L', 'r', 'r', 0,
  /* 4268 */ 'S', 'L', 'L', 'r', 'r', 0,
  /* 4274 */ 'J', 'M', 'P', 'L', 'r', 'r', 0,
  /* 4281 */ 'S', 'R', 'L', 'r', 'r', 0,
  /* 4287 */ 'S', 'M', 'U', 'L', 'r', 'r', 0,
  /* 4294 */ 'U', 'M', 'U', 'L', 'r', 'r', 0,
  /* 4301 */ 'W', 'R', 'W', 'I', 'M', 'r', 'r', 0,
  /* 4309 */ 'A', 'N', 'D', 'N', 'r', 'r', 0,
  /* 4316 */ 'O', 'R', 'N', 'r', 'r', 0,
  /* 4322 */ 'A', 'N', 'D', 'X', 'N', 'r', 'r', 0,
  /* 4330 */ 'O', 'R', 'X', 'N', 'r', 'r', 0,
  /* 4337 */ 'T', 'R', 'A', 'P', 'r', 'r', 0,
  /* 4344 */ 'S', 'W', 'A', 'P', 'r', 'r', 0,
  /* 4351 */ 'C', 'M', 'P', 'r', 'r', 0,
  /* 4357 */ 'S', 'T', 'D', 'C', 'Q', 'r', 'r', 0,
  /* 4365 */ 'S', 'T', 'D', 'F', 'Q', 'r', 'r', 0,
  /* 4373 */ 'W', 'R', 'T', 'B', 'R', 'r', 'r', 0,
  /* 4381 */ 'X', 'N', 'O', 'R', 'r', 'r', 0,
  /* 4388 */ 'X', 'O', 'R', 'r', 'r', 0,
  /* 4394 */ 'W', 'R', 'P', 'R', 'r', 'r', 0,
  /* 4401 */ 'W', 'R', 'A', 'S', 'R', 'r', 'r', 0,
  /* 4409 */ 'L', 'D', 'C', 'S', 'R', 'r', 'r', 0,
  /* 4417 */ 'S', 'T', 'C', 'S', 'R', 'r', 'r', 0,
  /* 4425 */ 'L', 'D', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4433 */ 'S', 'T', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4441 */ 'L', 'D', 'X', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4450 */ 'S', 'T', 'X', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4459 */ 'W', 'R', 'P', 'S', 'R', 'r', 'r', 0,
  /* 4467 */ 'C', 'A', 'S', 'r', 'r', 0,
  /* 4473 */ 'S', 'T', 'r', 'r', 0,
  /* 4478 */ 'R', 'E', 'T', 'T', 'r', 'r', 0,
  /* 4485 */ 'S', 'D', 'I', 'V', 'r', 'r', 0,
  /* 4492 */ 'U', 'D', 'I', 'V', 'r', 'r', 0,
  /* 4499 */ 'T', 'S', 'U', 'B', 'C', 'C', 'T', 'V', 'r', 'r', 0,
  /* 4510 */ 'T', 'A', 'D', 'D', 'C', 'C', 'T', 'V', 'r', 'r', 0,
  /* 4521 */ 'L', 'D', 'S', 'W', 'r', 'r', 0,
  /* 4528 */ 'S', 'R', 'A', 'X', 'r', 'r', 0,
  /* 4535 */ 'S', 'U', 'B', 'X', 'r', 'r', 0,
  /* 4542 */ 'T', 'L', 'S', '_', 'A', 'D', 'D', 'X', 'r', 'r', 0,
  /* 4553 */ 'T', 'L', 'S', '_', 'L', 'D', 'X', 'r', 'r', 0,
  /* 4563 */ 'A', 'N', 'D', 'X', 'r', 'r', 0,
  /* 4570 */ 'S', 'L', 'L', 'X', 'r', 'r', 0,
  /* 4577 */ 'S', 'R', 'L', 'X', 'r', 'r', 0,
  /* 4584 */ 'M', 'U', 'L', 'X', 'r', 'r', 0,
  /* 4591 */ 'X', 'N', 'O', 'R', 'X', 'r', 'r', 0,
  /* 4599 */ 'X', 'O', 'R', 'X', 'r', 'r', 0,
  /* 4606 */ 'C', 'A', 'S', 'X', 'r', 'r', 0,
  /* 4613 */ 'S', 'T', 'X', 'r', 'r', 0,
  /* 4619 */ 'S', 'D', 'I', 'V', 'X', 'r', 'r', 0,
  /* 4627 */ 'U', 'D', 'I', 'V', 'X', 'r', 'r', 0,
  /* 4635 */ 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'r', 'r', 0,
  /* 4645 */ 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'r', 'r', 0,
  /* 4655 */ 'M', 'O', 'V', 'R', 'G', 'Z', 'r', 'r', 0,
  /* 4664 */ 'M', 'O', 'V', 'R', 'L', 'Z', 'r', 'r', 0,
  /* 4673 */ 'M', 'O', 'V', 'R', 'N', 'Z', 'r', 'r', 0,
  /* 4682 */ 'M', 'O', 'V', 'R', 'R', 'Z', 'r', 'r', 0,
  /* 4691 */ 'B', 'P', 'G', 'E', 'Z', 'a', 'p', 't', 0,
  /* 4700 */ 'B', 'P', 'L', 'E', 'Z', 'a', 'p', 't', 0,
  /* 4709 */ 'B', 'P', 'G', 'Z', 'a', 'p', 't', 0,
  /* 4717 */ 'B', 'P', 'L', 'Z', 'a', 'p', 't', 0,
  /* 4725 */ 'B', 'P', 'N', 'Z', 'a', 'p', 't', 0,
  /* 4733 */ 'B', 'P', 'Z', 'a', 'p', 't', 0,
  /* 4740 */ 'B', 'P', 'G', 'E', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4750 */ 'B', 'P', 'L', 'E', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4760 */ 'B', 'P', 'G', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4769 */ 'B', 'P', 'L', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4778 */ 'B', 'P', 'N', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4787 */ 'B', 'P', 'Z', 'n', 'a', 'p', 't', 0,
};

extern const unsigned SparcInstrNameIndices[] = {
    1240U, 1455U, 1514U, 1345U, 1336U, 1389U, 1191U, 1206U, 
    1178U, 1220U, 2248U, 1153U, 1082U, 2736U, 1111U, 2546U, 
    894U, 1601U, 2524U, 977U, 2513U, 1132U, 1658U, 1675U, 
    1882U, 2391U, 2409U, 1360U, 792U, 459U, 1417U, 2635U, 
    2642U, 1435U, 1442U, 888U, 1947U, 1941U, 2681U, 1163U, 
    2372U, 2561U, 1084U, 2535U, 1969U, 2570U, 765U, 1145U, 
    921U, 729U, 2271U, 2601U, 751U, 2472U, 2460U, 2594U, 
    2610U, 1354U, 1914U, 1907U, 1641U, 1634U, 2382U, 1095U, 
    1074U, 1571U, 1563U, 1587U, 1579U, 785U, 452U, 1410U, 
    2628U, 1428U, 2586U, 741U, 1278U, 1287U, 1616U, 1625U, 
    1610U, 1867U, 2875U, 3940U, 3013U, 4078U, 3104U, 4169U, 
    759U, 465U, 3456U, 4546U, 3050U, 4122U, 1537U, 1688U, 
    1872U, 1394U, 2883U, 3948U, 2936U, 4001U, 3244U, 4309U, 
    4322U, 3469U, 4563U, 3078U, 4143U, 372U, 143U, 393U, 
    400U, 908U, 425U, 3084U, 4149U, 1296U, 473U, 403U, 
    2433U, 2483U, 3582U, 4691U, 3631U, 4740U, 3600U, 4709U, 
    3651U, 4760U, 586U, 410U, 2442U, 2491U, 3591U, 4700U, 
    3641U, 4750U, 3608U, 4717U, 3660U, 4769U, 3616U, 4725U, 
    3669U, 4778U, 693U, 417U, 2451U, 2499U, 3624U, 4733U, 
    3678U, 4787U, 1118U, 1375U, 3196U, 4261U, 0U, 3861U, 
    4606U, 4467U, 907U, 424U, 252U, 95U, 386U, 3271U, 
    4351U, 219U, 1310U, 1497U, 1473U, 62U, 1302U, 1488U, 
    1465U, 380U, 1318U, 1506U, 1481U, 2764U, 3686U, 2784U, 
    3706U, 994U, 1775U, 2265U, 798U, 1709U, 2095U, 440U, 
    869U, 16U, 1987U, 157U, 2038U, 2123U, 914U, 432U, 
    274U, 964U, 291U, 117U, 308U, 134U, 226U, 69U, 
    235U, 78U, 1769U, 2211U, 1007U, 1788U, 2305U, 1730U, 
    1260U, 1743U, 2177U, 2710U, 880U, 804U, 2101U, 778U, 
    2088U, 930U, 1749U, 2183U, 970U, 2217U, 1234U, 2649U, 
    3175U, 4240U, 283U, 1013U, 481U, 592U, 699U, 1794U, 
    546U, 655U, 709U, 1019U, 1800U, 2317U, 1039U, 1820U, 
    2337U, 1029U, 1810U, 2327U, 1048U, 1829U, 2346U, 1057U, 
    1838U, 2355U, 1066U, 1847U, 2364U, 2311U, 558U, 665U, 
    719U, 361U, 338U, 317U, 1325U, 2617U, 841U, 349U, 
    326U, 1737U, 2157U, 819U, 2116U, 874U, 2129U, 835U, 
    1724U, 2151U, 811U, 2108U, 847U, 2163U, 1925U, 2229U, 
    25U, 1997U, 166U, 2048U, 861U, 1127U, 2136U, 1921U, 
    31U, 2004U, 172U, 2055U, 2224U, 244U, 87U, 2695U, 
    211U, 2073U, 54U, 2022U, 184U, 1103U, 203U, 2064U, 
    46U, 2013U, 936U, 1266U, 2189U, 2724U, 300U, 126U, 
    260U, 103U, 854U, 1000U, 1781U, 2298U, 196U, 39U, 
    10U, 1980U, 151U, 2031U, 267U, 110U, 942U, 1272U, 
    1755U, 2730U, 772U, 1703U, 2082U, 1930U, 2235U, 1936U, 
    2242U, 948U, 1761U, 2203U, 1595U, 2170U, 2674U, 3209U, 
    4274U, 3765U, 3329U, 4409U, 3027U, 4092U, 3758U, 3020U, 
    4085U, 3778U, 3128U, 4193U, 3067U, 4128U, 3786U, 3345U, 
    4425U, 3135U, 4200U, 3801U, 3148U, 4213U, 3725U, 2809U, 
    3874U, 3824U, 3168U, 4233U, 3748U, 2835U, 3900U, 3435U, 
    4521U, 3740U, 2822U, 3887U, 3839U, 3189U, 4254U, 3361U, 
    4441U, 3463U, 4557U, 3073U, 4138U, 3056U, 3046U, 2507U, 
    2748U, 2716U, 2893U, 3958U, 2909U, 3974U, 3526U, 4635U, 
    3546U, 4655U, 3536U, 4645U, 3555U, 4664U, 3564U, 4673U, 
    3573U, 4682U, 2656U, 2665U, 2195U, 3004U, 4069U, 954U, 
    2970U, 4035U, 3490U, 4584U, 1654U, 2955U, 4020U, 2945U, 
    4010U, 3251U, 4316U, 4330U, 3498U, 4593U, 3303U, 4383U, 
    2580U, 1530U, 4105U, 1957U, 1952U, 1963U, 1861U, 1449U, 
    3111U, 4176U, 2401U, 1405U, 3392U, 4478U, 3121U, 4186U, 
    2979U, 4044U, 3510U, 4619U, 3399U, 4485U, 491U, 602U, 
    527U, 638U, 568U, 675U, 509U, 620U, 2405U, 2756U, 
    2741U, 1554U, 1423U, 3476U, 4570U, 3203U, 4268U, 2844U, 
    3909U, 2918U, 3983U, 3222U, 4287U, 3442U, 4528U, 2803U, 
    3855U, 3483U, 4577U, 3216U, 4281U, 3868U, 1855U, 3733U, 
    2816U, 3881U, 3337U, 4417U, 3040U, 4112U, 3771U, 3277U, 
    4357U, 3033U, 4098U, 3793U, 3285U, 4365U, 3141U, 4206U, 
    3091U, 4156U, 3817U, 3353U, 4433U, 3162U, 4227U, 3832U, 
    3183U, 4248U, 3809U, 3155U, 4220U, 3370U, 4450U, 3504U, 
    4613U, 3387U, 4473U, 2866U, 3931U, 2858U, 3923U, 3097U, 
    4162U, 3449U, 4535U, 2829U, 3894U, 3847U, 3264U, 4344U, 
    180U, 192U, 3424U, 4510U, 2874U, 3939U, 2902U, 3967U, 
    4542U, 4118U, 1380U, 4553U, 4134U, 3257U, 4337U, 3413U, 
    4499U, 2865U, 3930U, 2997U, 4062U, 2988U, 4053U, 3518U, 
    4627U, 3406U, 4492U, 2851U, 3916U, 2927U, 3992U, 1244U, 
    3229U, 4294U, 1648U, 962U, 826U, 1715U, 2142U, 1767U, 
    2209U, 479U, 544U, 556U, 2891U, 3956U, 3321U, 4401U, 
    3314U, 4394U, 3379U, 4459U, 3293U, 4373U, 3236U, 4301U, 
    2704U, 1252U, 2953U, 4018U, 4591U, 3301U, 4381U, 2962U, 
    4027U, 3497U, 4599U, 3308U, 4388U, 
};

static inline void InitSparcMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(SparcInsts, SparcInstrNameIndices, SparcInstrNameData, 613);
}

} // end llvm namespace
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct SparcGenInstrInfo : public TargetInstrInfo {
  explicit SparcGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~SparcGenInstrInfo() override = default;
};
} // end llvm namespace
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc SparcInsts[];
extern const unsigned SparcInstrNameIndices[];
extern const char SparcInstrNameData[];
SparcGenInstrInfo::SparcGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(SparcInsts, SparcInstrNameIndices, SparcInstrNameData, 613);
}
} // end llvm namespace
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace SP {
namespace OpName {
enum {
OPERAND_LAST
};
} // end namespace OpName
} // end namespace SP
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace SP {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace SP
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace SP {
namespace OpTypes {
enum OperandType {
  CCOp = 0,
  MEMri = 1,
  MEMrr = 2,
  TLSSym = 3,
  bprtarget = 4,
  bprtarget16 = 5,
  brtarget = 6,
  calltarget = 7,
  f32imm = 8,
  f64imm = 9,
  getPCX = 10,
  i16imm = 11,
  i1imm = 12,
  i32imm = 13,
  i64imm = 14,
  i8imm = 15,
  simm13Op = 16,
  type0 = 17,
  type1 = 18,
  type2 = 19,
  type3 = 20,
  type4 = 21,
  type5 = 22,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace SP
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

